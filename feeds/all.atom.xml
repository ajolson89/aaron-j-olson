<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Aaron J. Olson - Portfolio</title><link href="https://aaron-j-olson.com/" rel="alternate"></link><link href="https://aaron-j-olson.com/feeds/all.atom.xml" rel="self"></link><id>https://aaron-j-olson.com/</id><updated>2020-05-08T20:00:00-04:00</updated><entry><title>Plant Pathology - Kaggle Competition</title><link href="https://aaron-j-olson.com/pantdisease.html" rel="alternate"></link><published>2020-05-08T20:00:00-04:00</published><updated>2020-05-08T20:00:00-04:00</updated><author><name>Aaron Olson</name></author><id>tag:aaron-j-olson.com,2020-05-08:/pantdisease.html</id><summary type="html">&lt;p&gt;This analysis uses different image classification transfer learning techniques in order to predict the disease (or lack thereof) on plant leaves.&lt;/p&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Import Libraries&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;print_function&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;division&lt;/span&gt;


&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tqdm&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;scipy.misc&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imshow&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;shutil&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;copyfile&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;skimage.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;structural_similarity&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ssim&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.spatial&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;



&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.nn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;nn&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torch.optim&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;optim&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;torch.optim&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;lr_scheduler&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;torchvision&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;torchvision&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transforms&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;copy&lt;/span&gt;

&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Kaggle&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;plant_pathology&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Read in Train csv&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;train.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;test.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;target&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;multiple_diseases&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;multiple_diseases&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rust&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rust&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;scab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scab&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;N/A&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;[&amp;#39;scab&amp;#39; &amp;#39;multiple_diseases&amp;#39; &amp;#39;healthy&amp;#39; &amp;#39;rust&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;image_id&lt;/th&gt;
      &lt;th&gt;healthy&lt;/th&gt;
      &lt;th&gt;multiple_diseases&lt;/th&gt;
      &lt;th&gt;rust&lt;/th&gt;
      &lt;th&gt;scab&lt;/th&gt;
      &lt;th&gt;y&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Train_0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;scab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Train_1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;multiple_diseases&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Train_2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;healthy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Train_3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;rust&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Train_4&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;healthy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;healthy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;multiple_diseases&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;array([1, 0], dtype=int64)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From a quick EDA, as well as from the dataset description - we understand that the prediction columns (healthy, multiple_diseases, rust and scab) are essentially post one-hot encoding of a disease column. Therefore we need to regenerate the disease column in order to predict the disease accurately. It could also be possible to train multiple image classification models one for each disease. The problem here is the 'multiple_diseases' category. If we are trianing a model to predict rust or not-rust (binary), and we show a picture of a plant that has rust and scab, our dataset will label this as multiple_diseases (or not-rust). Therefore it's better to build a single model (or potentially ensemble of models) in order to predict from one of four categories. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;multiple_diseases&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rust&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;healthy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.28&lt;/span&gt;
&lt;span class="n"&gt;multiple_diseases&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.05&lt;/span&gt;
&lt;span class="n"&gt;rust&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.34&lt;/span&gt;
&lt;span class="n"&gt;scab&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.33&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_filesize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;# rotate image if in vertical orientation&lt;/span&gt;
&lt;span class="c1"&gt;# for x, row in train.iterrows():&lt;/span&gt;
&lt;span class="c1"&gt;#     image = Image.open(filepath + &amp;#39;\\images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;#     data = np.asarray(image)&lt;/span&gt;
&lt;span class="c1"&gt;#     if data.shape == (2048, 1365, 3):&lt;/span&gt;
&lt;span class="c1"&gt;#         data = np.rot90(data, k=1, axes=(0, 1))&lt;/span&gt;
&lt;span class="c1"&gt;#         image = image.rotate(90)&lt;/span&gt;
&lt;span class="c1"&gt;#         image.save(filepath + &amp;#39;\\images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;#     image_filesize.append(data.shape)&lt;/span&gt;


&lt;span class="c1"&gt;# for x, row in test.iterrows():&lt;/span&gt;
&lt;span class="c1"&gt;#     image = Image.open(filepath + &amp;#39;\\images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;#     data = np.asarray(image)&lt;/span&gt;
&lt;span class="c1"&gt;#     if data.shape == (2048, 1365, 3):&lt;/span&gt;
&lt;span class="c1"&gt;#         data = np.rot90(data, k=1, axes=(0, 1))&lt;/span&gt;
&lt;span class="c1"&gt;#         image = image.rotate(90)&lt;/span&gt;
&lt;span class="c1"&gt;#         image.save(filepath + &amp;#39;\\images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;#     image_filesize.append(data.shape)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code above takes the images and if saved in a vertical orientation, rotates them 90 deg. This will help when loading the images. There are various transformations that are used to make the images suitable for the models we will train with. Having consistent orientation will ensure the vertical and horizontal crops are applied correctly.&lt;/p&gt;
&lt;p&gt;Below is a confusion matrix for the various types of diseases and pictures. What becomes quickly evident is that there is approximately equal proportion (using approximate loosely) for healthy, rust and scab - however there is dispraportionately lower numbers of multiple-disease images. This may be difficult therefore to learn as the nuances between a leaf with rust and a leaf with rust and scab may be difficult to learn. &lt;/p&gt;
&lt;p&gt;One way to improve upon this inconsistency would be to apply image augmentation to the multiple disease images in order to generate a larger training dataset. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;confusion_matrix&lt;/span&gt;

&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;multiple_diseases&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rust&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;annot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xaxis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ticklabels&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; = 0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; = 1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yaxis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ticklabels&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; = 0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; = 1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)
&lt;img align="center" width = "750" src="images/plantdisease/output_8_0.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Write images to folder for healthy category&lt;/span&gt;
&lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;multiple_diseases&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rust&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;master_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;master_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;master_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ignore_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;master_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;master_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# try:&lt;/span&gt;
&lt;span class="c1"&gt;#     for x, row in master_df.iterrows():&lt;/span&gt;
&lt;span class="c1"&gt;#         copyfile(filepath + &amp;#39;\\images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;, filepath + &amp;#39;\\images_category\\train\\&amp;#39; + row[&amp;#39;y&amp;#39;] + &amp;#39;\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;#     for x, row in val.iterrows():&lt;/span&gt;
&lt;span class="c1"&gt;#         copyfile(filepath + &amp;#39;\\images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;, filepath +  &amp;#39;\\images_category\\val\\&amp;#39; + row[&amp;#39;y&amp;#39;] + &amp;#39;\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;# except:&lt;/span&gt;
&lt;span class="c1"&gt;#     print(x, row)&lt;/span&gt;


&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterrows&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="c1"&gt;#         os.mkdir(filepath + &amp;#39;\\images_category\\test_images\\&amp;#39; + row[&amp;#39;image_id&amp;#39;] + &amp;#39;\\&amp;#39;)&lt;/span&gt;
        &lt;span class="n"&gt;copyfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;images&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;image_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;images_category&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;test_images&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;healthy&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;image_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The code above creates the folder structure that can be utilized with the datasets.Imageloader method from pytorch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;image_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;1816&lt;/th&gt;
      &lt;td&gt;Test_1816&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1817&lt;/th&gt;
      &lt;td&gt;Test_1817&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1818&lt;/th&gt;
      &lt;td&gt;Test_1818&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1819&lt;/th&gt;
      &lt;td&gt;Test_1819&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1820&lt;/th&gt;
      &lt;td&gt;Test_1820&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Data augmentation and normalization for training&lt;/span&gt;
&lt;span class="c1"&gt;# Just normalization for validation&lt;/span&gt;
&lt;span class="n"&gt;data_transforms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compose&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RandomResizedCrop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RandomHorizontalFlip&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToTensor&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Normalize&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;0.485&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.406&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.225&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;]),&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Compose&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CenterCrop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;224&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ToTensor&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
        &lt;span class="n"&gt;transforms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Normalize&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;0.485&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.406&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.225&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;]),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;data_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;images_category&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;image_datasets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageFolder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                          &lt;span class="n"&gt;data_transforms&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="n"&gt;dataloaders&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_datasets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                             &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_workers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="n"&gt;dataset_sizes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_datasets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;span class="n"&gt;class_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_datasets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;

&lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cuda:0&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cuda&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_available&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cpu&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;class_names&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;[&amp;#39;healthy&amp;#39;, &amp;#39;multiple_diseases&amp;#39;, &amp;#39;rust&amp;#39;, &amp;#39;scab&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Imshow for Tensor.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;inp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;0.485&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.456&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.406&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;0.229&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.224&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.225&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;inp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;inp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;
    &lt;span class="n"&gt;inp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pause&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# pause a bit so that plots are updated&lt;/span&gt;


&lt;span class="c1"&gt;# Get a batch of training data&lt;/span&gt;
&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataloaders&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="c1"&gt;# Make a grid from batch&lt;/span&gt;
&lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torchvision&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;class_names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_13_0.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;train_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;criterion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scheduler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;since&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;best_model_wts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_dict&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;best_acc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;epoch&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_epochs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Epoch &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epoch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_epochs&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Each epoch has a training and validation phase&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# Set model to training mode&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;   &lt;span class="c1"&gt;# Set model to evaluate mode&lt;/span&gt;

            &lt;span class="n"&gt;running_loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
            &lt;span class="n"&gt;running_corrects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

            &lt;span class="c1"&gt;# Iterate over data.&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataloaders&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="n"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                &lt;span class="c1"&gt;# zero the parameter gradients&lt;/span&gt;
                &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zero_grad&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

                &lt;span class="c1"&gt;# forward&lt;/span&gt;
                &lt;span class="c1"&gt;# track history if only in train&lt;/span&gt;
                &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_grad_enabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                    &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;preds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;criterion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

                    &lt;span class="c1"&gt;# backward + optimize only if in training phase&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                        &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backward&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                        &lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

                &lt;span class="c1"&gt;# statistics&lt;/span&gt;
                &lt;span class="n"&gt;running_loss&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;running_corrects&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;preds&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;scheduler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="n"&gt;epoch_loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;running_loss&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dataset_sizes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;epoch_acc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;running_corrects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dataset_sizes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; Loss: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt; Acc: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epoch_loss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;epoch_acc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="c1"&gt;# deep copy the model&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;epoch_acc&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;best_acc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;best_acc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;epoch_acc&lt;/span&gt;
                &lt;span class="n"&gt;best_model_wts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;deepcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_dict&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;time_elapsed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;since&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Training complete in &lt;/span&gt;&lt;span class="si"&gt;{:.0f}&lt;/span&gt;&lt;span class="s1"&gt;m &lt;/span&gt;&lt;span class="si"&gt;{:.0f}&lt;/span&gt;&lt;span class="s1"&gt;s&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;time_elapsed&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time_elapsed&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Best val Acc: &lt;/span&gt;&lt;span class="si"&gt;{:4f}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best_acc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# load best model weights&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_state_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;best_model_wts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;visualize_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;was_training&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;training&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;images_so_far&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;no_grad&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataloaders&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
            &lt;span class="n"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;preds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
                &lt;span class="n"&gt;images_so_far&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
                &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;images_so_far&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;predicted: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;preds&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]]))&lt;/span&gt;
                &lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;images_so_far&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;was_training&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;was_training&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resnet18&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pretrained&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# model_ft = models.wide_resnet50_2(pretrained=True)&lt;/span&gt;

&lt;span class="n"&gt;num_ftrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;in_features&lt;/span&gt;
&lt;span class="c1"&gt;# Here the size of each output sample is set to 2.&lt;/span&gt;
&lt;span class="c1"&gt;# Alternatively, it can be generalized to nn.Linear(num_ftrs, len(class_names)).&lt;/span&gt;
&lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Linear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_ftrs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;class_names&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;model_ft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;criterion&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CrossEntropyLoss&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;            

&lt;span class="c1"&gt;# Observe that all parameters are being optimized&lt;/span&gt;
&lt;span class="n"&gt;optimizer_ft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;optim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SGD&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;lr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;momentum&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Decay LR by a factor of 0.1 every 7 epochs&lt;/span&gt;
&lt;span class="n"&gt;exp_lr_scheduler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lr_scheduler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StepLR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optimizer_ft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;step_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;criterion&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;optimizer_ft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exp_lr_scheduler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                       &lt;span class="n"&gt;num_epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;visualize_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Epoch 0/24
----------
train Loss: 1.0306 Acc: 0.5837
val Loss: 0.6033 Acc: 0.8225

Epoch 1/24
----------
train Loss: 0.7453 Acc: 0.7332
val Loss: 0.4137 Acc: 0.8866

Epoch 2/24
----------
train Loss: 0.6719 Acc: 0.7579
val Loss: 0.3087 Acc: 0.9080

Epoch 3/24
----------
train Loss: 0.6347 Acc: 0.7750
val Loss: 0.3126 Acc: 0.9015

Epoch 4/24
----------
train Loss: 0.5632 Acc: 0.8032
val Loss: 0.2443 Acc: 0.9173

Epoch 5/24
----------
train Loss: 0.5734 Acc: 0.7888
val Loss: 0.2449 Acc: 0.9201

Epoch 6/24
----------
train Loss: 0.5844 Acc: 0.7970
val Loss: 0.2195 Acc: 0.9275

Epoch 7/24
----------
train Loss: 0.5831 Acc: 0.7977
val Loss: 0.2579 Acc: 0.9117

Epoch 8/24
----------
train Loss: 0.5224 Acc: 0.8162
val Loss: 0.2004 Acc: 0.9368

Epoch 9/24
----------
train Loss: 0.5242 Acc: 0.8189
val Loss: 0.2012 Acc: 0.9312

Epoch 10/24
----------
train Loss: 0.5110 Acc: 0.8128
val Loss: 0.2096 Acc: 0.9275

Epoch 11/24
----------
train Loss: 0.5423 Acc: 0.8045
val Loss: 0.1901 Acc: 0.9359

Epoch 12/24
----------
train Loss: 0.5272 Acc: 0.8032
val Loss: 0.2184 Acc: 0.9210

Epoch 13/24
----------
train Loss: 0.5563 Acc: 0.8018
val Loss: 0.1885 Acc: 0.9349

Epoch 14/24
----------
train Loss: 0.5467 Acc: 0.7984
val Loss: 0.2054 Acc: 0.9294

Epoch 15/24
----------
train Loss: 0.5352 Acc: 0.8086
val Loss: 0.2325 Acc: 0.9164

Epoch 16/24
----------
train Loss: 0.5445 Acc: 0.8128
val Loss: 0.2038 Acc: 0.9303

Epoch 17/24
----------
train Loss: 0.5523 Acc: 0.8045
val Loss: 0.2023 Acc: 0.9303

Epoch 18/24
----------
train Loss: 0.5183 Acc: 0.8114
val Loss: 0.1925 Acc: 0.9349

Epoch 19/24
----------
train Loss: 0.5540 Acc: 0.8025
val Loss: 0.2109 Acc: 0.9312

Epoch 20/24
----------
train Loss: 0.5112 Acc: 0.8134
val Loss: 0.1838 Acc: 0.9405

Epoch 21/24
----------
train Loss: 0.5090 Acc: 0.8189
val Loss: 0.1932 Acc: 0.9340

Epoch 22/24
----------
train Loss: 0.5287 Acc: 0.8121
val Loss: 0.1964 Acc: 0.9331

Epoch 23/24
----------
train Loss: 0.5192 Acc: 0.8230
val Loss: 0.1981 Acc: 0.9294

Epoch 24/24
----------
train Loss: 0.5499 Acc: 0.8066
val Loss: 0.1879 Acc: 0.9359

Training complete in 37m 53s
Best val Acc: 0.940520
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_17_1.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_17_2.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_17_3.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_17_4.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_17_5.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img align="center" width = "750" src="images/plantdisease/output_17_6.png" alt="Drawing"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;f1_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accuracy_score&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_label_predictions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_loader&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;actuals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;no_grad&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;test_loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;functional&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;softmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpu&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detach&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="n"&gt;prediction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;keepdim&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view_as&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;outputs&lt;/span&gt;


&lt;span class="n"&gt;val_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_datasets&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                             &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_workers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test_label_predictions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val_loader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Confusion matrix:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F1 score: &lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;f1_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;average&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;micro&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Accuracy score: &lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;accuracy_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above we can see a confusion matrix on the validataion dataset (20% of the original training data). Proportionally the multiple-diseases category is the worst performing, which isn't a surprised as addressed earlier given the lower quantity of data. However the model is still able to achieve an accuracy score over 97% in total. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;roc_auc_score&lt;/span&gt;


&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;aucs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;auc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;roc_auc_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;aucs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;auc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;roc_auc_score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;multi_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ovo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;data_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;images_category&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;test_image_dataset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImageFolder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;data_transforms&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;val&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;test_dataloader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;torch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataLoader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_image_dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                             &lt;span class="n"&gt;shuffle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_workers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;actuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test_label_predictions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_ft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_dataloader&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vstack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;healthy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;multiple_diseases&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rust&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;scab&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;targets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;test_image_dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imgs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;targets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;targets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;image_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sort&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;image_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sort&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# df.columns = [&amp;#39;healthy&amp;#39;, &amp;#39;multiple_diseases&amp;#39;, &amp;#39;rust&amp;#39;, &amp;#39;scab&amp;#39;]&lt;/span&gt;
&lt;span class="c1"&gt;# pred = test[&amp;#39;image_id&amp;#39;] + df&lt;/span&gt;
&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;predictions.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The model recieved a AUC ROC of over 94% - not the greatest but also not the worst. &lt;/p&gt;
&lt;p&gt;Next steps could include: 
- Evaluation of different models to determine if other architectures are better suited to the image problem. 
- Evaluation of freezing different layers during trianing
- Ideally utlizing model weights and architecture learned on a larger plant specific dataset. The models we used were trained largely on MS COCO or ImageNet which isn't specific to plants and therefore likely under-performs. Given the low quantity of image data in the current dataset - training on a larger plant specific dataset, may allow the model to learn different features specific to a plant, and then use this as a more suitable starting point to learn disease categorization. 
- Image augmentation: Either to the multiple disease category specifically in order to increase the number of training images - or to the entire dataset, to allow more effective trianing. Likely a combination of both would be most suitable. &lt;/p&gt;</content><category term="posts"></category><category term="Image Classification"></category><category term="pytorch"></category><category term="python"></category></entry><entry><title>CIFAR 102 - Are Machine Learning Models Generalizable</title><link href="https://aaron-j-olson.com/cifar102.html" rel="alternate"></link><published>2020-03-08T20:00:00-04:00</published><updated>2020-03-08T20:00:00-04:00</updated><author><name>Shangyun Lv, Brad Nott, Aaron Olson</name></author><id>tag:aaron-j-olson.com,2020-03-08:/cifar102.html</id><summary type="html">&lt;p&gt;Analysis of dataset composition and machine learning robustness to new data applied to CIFAR-10 dataset&lt;/p&gt;</summary><content type="html">&lt;p&gt;Machine Learning Models has continued to improve performance against many of the best known image datasets (MS COCO, ImageNet, CIFAR...). New models that are best in class may beat former models by slimming margins (~1% accuracy improvement). A recent paper 'Do ImageNet Classifiers Generalize to ImageNet? {https://people.csail.mit.edu/ludwigs/papers/imagenet.pdf} highlighted a drop in performance on a new test set which emulated the datset generation process detailed in both ImageNet and CIFAR10. The authors noted that the drop in accuracy is likely due to a 'generalization gap' in which the model performs very well on the original training and test set - but a new dataset which has some distribution shift has caused a substantial drop in accuracy. &lt;/p&gt;
&lt;p&gt;This paper and project seeks to go further based on this analysis, by generating a new training set - once again emulating the dataset generation process outlined in the original CIFAR paper {https://www.cs.toronto.edu/~kriz/learning-features-2009-TR.pdf}. Fortunately the dataset emulation was detailed thoroughly and given below: &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/cifar10learning.JPG" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;After assembling a new training dataset we can then use the pre-existing published models to observe accuracy metrics and better understand where specific models, and model architectures can and cannot generalize well. This notebook will be written in the following order: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Training Dataset Creation&lt;/li&gt;
&lt;li&gt;Model Training&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will begin by describing the training datset generation process. We are currently utilizing an intermediary 10k image datset (goal 60k) where 8k are dedicated to training and 2k for testing. Shown below is a flow chart desribing the process to create a valid training dataset: &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/workflow.JPG" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h2&gt;Training Dataset Generation - Query Tiny Images, Candidate Image Collection and Verify Images&lt;/h2&gt;
&lt;p&gt;The original CIFAR paper queried tiny images - a dataset containing 80 million images with a large array based on wordnet of nouns to categorize the images. Using a candidate set of keywords the CIFAR paper queried a certain number of images related to 10 categories (for CIFAR10). From these image candidates the image verification protocol previously shown was followed by Amazon Turk mechanical workers. After establishing verified images the dataset was then published. &lt;/p&gt;
&lt;p&gt;We will follow a similar protocol using the keywords published in the CIFAR 10.1 paper. From these keywords we collected over 466k candidate images, containing images both within the original CIFAR10 train/test datsets, the CIFAR 10.1 test dataset and a collection of new images - depicted below are the image counts using these keyword distribution: &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/imagescifar10.JPG" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In order to verify thse images we used the LabelIMG software intended for image classification and object detection. A depiction of the UI is given below: &lt;/p&gt;
&lt;p&gt;&lt;img src="images/cifar102/labelimg.JPG"&gt;&lt;/p&gt;
&lt;p&gt;As can be seen - the UI mimics the original UI in which users were shown candidate images and they had to verify if the image belonged to the CIFAR class that was shown. While verifying images the users attempted to follow the first instruction whereby an image belongs to a CIFAR10 class if a user could look at the image and come to the same conclusion as the proposed label. &lt;/p&gt;
&lt;p&gt;The code cells below walk through the image query process. Images were written into folders using the structure: CIFAR10class/TinyImagesKeyword/Image01. The users then went through images following close to the same proportion for each keyword in the CIFAR class. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Import Required Libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tqdm&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;scipy&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;scipy.misc&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imshow&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;skimage.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;structural_similarity&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;ssim&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.spatial&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;

&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;TinyImages&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;VerifiedImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;UC Berkeley MIDS&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;w210_capstone&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;CIFAR-10.1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;VerifiedImages&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CIFAR10Filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;UC Berkeley MIDS&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;w210_capstone&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;CIFAR-10.1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;datasets&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;cifar10&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CIFAR101Filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;UC Berkeley MIDS&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;w210_capstone&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;CIFAR-10.1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The cell below uses the kyword_counts_v7 json file from the CIFAR10.1 dataset assembly process. Our work has identified that the original CIFAR10 dataset used additional keywords with low overall total images. We will include analysis of the images that were sourced from different keywords elsewhere. For now this provides the basis for the 10k dataset, and should we choose to include the additional found keywords in our 60k dataset we will work through the new assembly process&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Import Keywords from keyword_counts file published from CIFAR10.1&lt;/span&gt;
&lt;span class="n"&gt;cifar_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="n"&gt;keyword_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;UC Berkeley MIDS&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;w210_capstone&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;CIFAR-10.1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;keyword_counts_v7.json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
            &lt;span class="n"&gt;cifar_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;keyword_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Loop through metadata file and write keyword and index to default dict&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="n"&gt;keywords&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tiny_metadata.bin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;break&lt;/span&gt;
        &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;keyword_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;185&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="c1"&gt;# Write meta file containing index_filename&lt;/span&gt;
            &lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Using keywords dict - loop through indexes of images and save image array to default dict&lt;/span&gt;

&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="c1"&gt;# extract index from meta dictionary&lt;/span&gt;
        &lt;span class="n"&gt;indx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;num_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;indx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3072&lt;/span&gt;
        &lt;span class="n"&gt;reshape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
        &lt;span class="n"&gt;data_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tiny_images.bin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;data_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uint8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;num_images&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Complete!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;\&lt;span class="n"&gt;Users&lt;/span&gt;\&lt;span class="n"&gt;AOlson&lt;/span&gt;\&lt;span class="n"&gt;AppData&lt;/span&gt;\&lt;span class="n"&gt;Local&lt;/span&gt;\&lt;span class="n"&gt;Continuum&lt;/span&gt;\&lt;span class="n"&gt;anaconda3&lt;/span&gt;\&lt;span class="n"&gt;lib&lt;/span&gt;\&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;\&lt;span class="n"&gt;ipykernel_launcher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="ne"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;binary&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;fromstring&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;behaves&lt;/span&gt; &lt;span class="n"&gt;surprisingly&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;frombuffer&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;
  &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ipykernel&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;kernelapp&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;


&lt;span class="n"&gt;Complete&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Cell generates a plot based on the 10 classes of CIFAR and total number of images found from Tiny images keyword query&lt;/span&gt;

&lt;span class="n"&gt;cifar_counts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;airplane&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;automobile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;bird&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;deer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;frog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;horse&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;ship&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;truck&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;keyd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;valued&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cifar_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;valued&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;keyd&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="c1"&gt;# # for python 2.x:&lt;/span&gt;
&lt;span class="c1"&gt;# plt.bar(range(len(D)), D.values(), align=&amp;#39;center&amp;#39;)  # python 2.x&lt;/span&gt;
&lt;span class="c1"&gt;# plt.xticks(range(len(D)), D.keys())  # in python 2.x&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number Images per Class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/output_7_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Cell generates a plot based on the 10 classes of CIFAR and total number of images found from Tiny images keyword query&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;cifar_counts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterrows&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Images per CIFAR class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CIFAR Class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Image Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Text(0, 0.5, &amp;#39;Image Count&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/output_8_1.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Write both dictionaries to pickle files&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;meta.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Use data and metadata bin files to preview image by index number&lt;/span&gt;
&lt;span class="c1"&gt;### This cell only shows single images and doesn&amp;#39;t process the dictinoaries as a whole&lt;/span&gt;

&lt;span class="n"&gt;reshape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;data_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tiny_images.bin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fromstring&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uint8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;indx&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;768&lt;/span&gt;
&lt;span class="n"&gt;meta_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tiny_metadata.bin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;meta_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;meta_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;num_images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;meta.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;185&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;185&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;187&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;187&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;189&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;189&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;222&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;222&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;232&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;thumbnail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;232&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;432&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;432&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;760&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;760&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;764&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;indpage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;764&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;indengine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;762&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;indoverall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;762&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;764&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;764&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;768&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;thumbnail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indpage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indengine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;indoverall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;young&lt;/span&gt; &lt;span class="n"&gt;young_s_000001&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; 2&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;00&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; 14:07:07 +0000       google    &amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://ima&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ges.google.com/images?q=tbn:Z9bf4ecp_8ej2M:http://www.uncwil.edu/honors/small%252003/smBlair%2520Young.JPG                                                                                    http://www&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.uncwil.edu/honors/small%252003/smBlair%2520Young.JPG                                                                                                                                                                                                                                                                         1   1   1 &amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;  1 &amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;  -1&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1 &amp;#39;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;  -1&amp;#39;&lt;/span&gt;


&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;ipykernel_launcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="nb"&gt;binary&lt;/span&gt; &lt;span class="k"&gt;mode&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;fromstring&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;behaves&lt;/span&gt; &lt;span class="n"&gt;surprisingly&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;unicode&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;frombuffer&lt;/span&gt; &lt;span class="k"&gt;instead&lt;/span&gt;
  &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Remove&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;CWD&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;while&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="n"&gt;stuff&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;





&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Load pickle file of images by keword&lt;/span&gt;
&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data.pickle&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;meta.pickle&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;dict_keys([&amp;#39;abandoned_ship&amp;#39;, &amp;#39;accentor&amp;#39;, &amp;#39;aerial_ladder_truck&amp;#39;, &amp;#39;aeroplane&amp;#39;, &amp;#39;airbus&amp;#39;, &amp;#39;airliner&amp;#39;, &amp;#39;airplane&amp;#39;, &amp;#39;alauda_arvensis&amp;#39;, &amp;#39;alces_alces&amp;#39;, &amp;#39;alley_cat&amp;#39;, &amp;#39;alytes_obstetricans&amp;#39;, &amp;#39;ambulance&amp;#39;, &amp;#39;american_elk&amp;#39;, &amp;#39;american_saddle_horse&amp;#39;, &amp;#39;american_toad&amp;#39;, &amp;#39;amphibious_aircraft&amp;#39;, &amp;#39;anthus_pratensis&amp;#39;, &amp;#39;anuran&amp;#39;, &amp;#39;appaloosa&amp;#39;, &amp;#39;apteryx&amp;#39;, &amp;#39;arab&amp;#39;, &amp;#39;arabian&amp;#39;, &amp;#39;articulated_lorry&amp;#39;, &amp;#39;attack_aircraft&amp;#39;, &amp;#39;auto&amp;#39;, &amp;#39;automobile&amp;#39;, &amp;#39;banana_boat&amp;#39;, &amp;#39;barge&amp;#39;, &amp;#39;barking_deer&amp;#39;, &amp;#39;barking_frog&amp;#39;, &amp;#39;barren_ground_caribou&amp;#39;, &amp;#39;beach_wagon&amp;#39;, &amp;#39;biplane&amp;#39;, &amp;#39;bird&amp;#39;, &amp;#39;bird_of_passage&amp;#39;, &amp;#39;blenheim_spaniel&amp;#39;, &amp;#39;boat&amp;#39;, &amp;#39;bookmobile&amp;#39;, &amp;#39;brocket&amp;#39;, &amp;#39;broodmare&amp;#39;, &amp;#39;buckskin&amp;#39;, &amp;#39;bufo&amp;#39;, &amp;#39;bufo_americanus&amp;#39;, &amp;#39;bufo_boreas&amp;#39;, &amp;#39;bufo_bufo&amp;#39;, &amp;#39;bufo_calamita&amp;#39;, &amp;#39;bufo_debilis&amp;#39;, &amp;#39;bufo_marinus&amp;#39;, &amp;#39;bufo_microscaphus&amp;#39;, &amp;#39;bufo_speciosus&amp;#39;, &amp;#39;bufo_viridis&amp;#39;, &amp;#39;bullfrog&amp;#39;, &amp;#39;cab&amp;#39;, &amp;#39;cabin_cruiser&amp;#39;, &amp;#39;camion&amp;#39;, &amp;#39;canis_familiaris&amp;#39;, &amp;#39;capreolus_capreolus&amp;#39;, &amp;#39;car&amp;#39;, &amp;#39;car_transporter&amp;#39;, &amp;#39;cargo_ship&amp;#39;, &amp;#39;cargo_vessel&amp;#39;, &amp;#39;caribou&amp;#39;, &amp;#39;cascades_frog&amp;#39;, &amp;#39;cassowary&amp;#39;, &amp;#39;cat&amp;#39;, &amp;#39;cavalry_horse&amp;#39;, &amp;#39;cervus_elaphus&amp;#39;, &amp;#39;cervus_sika&amp;#39;, &amp;#39;cervus_unicolor&amp;#39;, &amp;#39;chihuahua&amp;#39;, &amp;#39;cock&amp;#39;, &amp;#39;compact&amp;#39;, &amp;#39;compact_car&amp;#39;, &amp;#39;container_ship&amp;#39;, &amp;#39;container_vessel&amp;#39;, &amp;#39;containership&amp;#39;, &amp;#39;convertible&amp;#39;, &amp;#39;coupe&amp;#39;, &amp;#39;cow_pony&amp;#39;, &amp;#39;crapaud&amp;#39;, &amp;#39;cruiser&amp;#39;, &amp;#39;cur&amp;#39;, &amp;#39;dama_dama&amp;#39;, &amp;#39;dawn_horse&amp;#39;, &amp;#39;deer&amp;#39;, &amp;#39;delivery_truck&amp;#39;, &amp;#39;delivery_van&amp;#39;, &amp;#39;dive_bomber&amp;#39;, &amp;#39;dog&amp;#39;, &amp;#39;domestic_cat&amp;#39;, &amp;#39;domestic_dog&amp;#39;, &amp;#39;dredger&amp;#39;, &amp;#39;dromaius_novaehollandiae&amp;#39;, &amp;#39;dump_truck&amp;#39;, &amp;#39;dumper&amp;#39;, &amp;#39;dunnock&amp;#39;, &amp;#39;dustcart&amp;#39;, &amp;#39;elephant_bird&amp;#39;, &amp;#39;elk&amp;#39;, &amp;#39;emu&amp;#39;, &amp;#39;emu_novaehollandiae&amp;#39;, &amp;#39;english_toy_spaniel&amp;#39;, &amp;#39;estate_car&amp;#39;, &amp;#39;european_elk&amp;#39;, &amp;#39;european_toad&amp;#39;, &amp;#39;fallow_deer&amp;#39;, &amp;#39;fawn&amp;#39;, &amp;#39;feist&amp;#39;, &amp;#39;felis_catus&amp;#39;, &amp;#39;felis_domesticus&amp;#39;, &amp;#39;female_horse&amp;#39;, &amp;#39;ferry&amp;#39;, &amp;#39;ferryboat&amp;#39;, &amp;#39;fighter&amp;#39;, &amp;#39;fighter_aircraft&amp;#39;, &amp;#39;finch&amp;#39;, &amp;#39;fire_engine&amp;#39;, &amp;#39;fire_truck&amp;#39;, &amp;#39;fireboat&amp;#39;, &amp;#39;flightless_bird&amp;#39;, &amp;#39;floatplane&amp;#39;, &amp;#39;flying_bird&amp;#39;, &amp;#39;freighter&amp;#39;, &amp;#39;frog&amp;#39;, &amp;#39;funny_wagon&amp;#39;, &amp;#39;gamecock&amp;#39;, &amp;#39;garbage_truck&amp;#39;, &amp;#39;gelding&amp;#39;, &amp;#39;grass_frog&amp;#39;, &amp;#39;green_frog&amp;#39;, &amp;#39;guard_boat&amp;#39;, &amp;#39;hangar_queen&amp;#39;, &amp;#39;hen&amp;#39;, &amp;#39;honey_eater&amp;#39;, &amp;#39;horse&amp;#39;, &amp;#39;hospital_ship&amp;#39;, &amp;#39;house_cat&amp;#39;, &amp;#39;houseboat&amp;#39;, &amp;#39;hydrofoil&amp;#39;, &amp;#39;iceboat&amp;#39;, &amp;#39;icebreaker&amp;#39;, &amp;#39;japanese_deer&amp;#39;, &amp;#39;japanese_spaniel&amp;#39;, &amp;#39;jetliner&amp;#39;, &amp;#39;jumbo_jet&amp;#39;, &amp;#39;jumbojet&amp;#39;, &amp;#39;king_charles_spaniel&amp;#39;, &amp;#39;kiwi&amp;#39;, &amp;#39;ladder_truck&amp;#39;, &amp;#39;lapdog&amp;#39;, &amp;#39;lark&amp;#39;, &amp;#39;laundry_truck&amp;#39;, &amp;#39;leopard_frog&amp;#39;, &amp;#39;leptodactylid&amp;#39;, &amp;#39;leptodactylus_pentadactylus&amp;#39;, &amp;#39;liberty_ship&amp;#39;, &amp;#39;lightship&amp;#39;, &amp;#39;lipizzan&amp;#39;, &amp;#39;lippizan&amp;#39;, &amp;#39;lippizaner&amp;#39;, &amp;#39;lorry&amp;#39;, &amp;#39;male_horse&amp;#39;, &amp;#39;maltese&amp;#39;, &amp;#39;maltese_dog&amp;#39;, &amp;#39;mare&amp;#39;, &amp;#39;meadow_pipit&amp;#39;, &amp;#39;merchant_ship&amp;#39;, &amp;#39;merchantman&amp;#39;, &amp;#39;midwife_toad&amp;#39;, &amp;#39;minesweeper&amp;#39;, &amp;#39;mongrel&amp;#39;, &amp;#39;monoplane&amp;#39;, &amp;#39;moose&amp;#39;, &amp;#39;motorboat&amp;#39;, &amp;#39;motorcar&amp;#39;, &amp;#39;mouser&amp;#39;, &amp;#39;moving_van&amp;#39;, &amp;#39;mule_deer&amp;#39;, &amp;#39;multiengine_airplane&amp;#39;, &amp;#39;muntjac&amp;#39;, &amp;#39;musk_deer&amp;#39;, &amp;#39;mutt&amp;#39;, &amp;#39;nandu&amp;#39;, &amp;#39;natterjack&amp;#39;, &amp;#39;night_bird&amp;#39;, &amp;#39;norfolk_wherry&amp;#39;, &amp;#39;odocoileus_hemionus&amp;#39;, &amp;#39;oil_tanker&amp;#39;, &amp;#39;ostrich&amp;#39;, &amp;#39;packet_boat&amp;#39;, &amp;#39;panel_truck&amp;#39;, &amp;#39;pantechnicon&amp;#39;, &amp;#39;passenger_ship&amp;#39;, &amp;#39;passerine&amp;#39;, &amp;#39;peke&amp;#39;, &amp;#39;pekinese&amp;#39;, &amp;#39;pekingese&amp;#39;, &amp;#39;pickerel_frog&amp;#39;, &amp;#39;pilot_boat&amp;#39;, &amp;#39;pipit&amp;#39;, &amp;#39;plane&amp;#39;, &amp;#39;plantation_walking_horse&amp;#39;, &amp;#39;pleasure_boat&amp;#39;, &amp;#39;pleasure_craft&amp;#39;, &amp;#39;police_boat&amp;#39;, &amp;#39;police_cruiser&amp;#39;, &amp;#39;pontoon&amp;#39;, &amp;#39;powerboat&amp;#39;, &amp;#39;prancer&amp;#39;, &amp;#39;propeller_plane&amp;#39;, &amp;#39;prunella_modularis&amp;#39;, &amp;#39;puppy&amp;#39;, &amp;#39;quarter_horse&amp;#39;, &amp;#39;racing_boat&amp;#39;, &amp;#39;rana_cascadae&amp;#39;, &amp;#39;rana_catesbeiana&amp;#39;, &amp;#39;rana_clamitans&amp;#39;, &amp;#39;rana_pipiens&amp;#39;, &amp;#39;rana_temporaria&amp;#39;, &amp;#39;rangifer_caribou&amp;#39;, &amp;#39;rangifer_tarandus&amp;#39;, &amp;#39;ratite&amp;#39;, &amp;#39;reconnaissance_plane&amp;#39;, &amp;#39;red_deer&amp;#39;, &amp;#39;reindeer&amp;#39;, &amp;#39;rhea&amp;#39;, &amp;#39;rhea_americana&amp;#39;, &amp;#39;riding_horse&amp;#39;, &amp;#39;rig&amp;#39;, &amp;#39;river_boat&amp;#39;, &amp;#39;roe_deer&amp;#39;, &amp;#39;rowboat&amp;#39;, &amp;#39;saddle_horse&amp;#39;, &amp;#39;sambar&amp;#39;, &amp;#39;scow&amp;#39;, &amp;#39;sea_boat&amp;#39;, &amp;#39;seaplane&amp;#39;, &amp;#39;semi&amp;#39;, &amp;#39;ship&amp;#39;, &amp;#39;shooting_brake&amp;#39;, &amp;#39;sika&amp;#39;, &amp;#39;skylark&amp;#39;, &amp;#39;songbird&amp;#39;, &amp;#39;sound_truck&amp;#39;, &amp;#39;southwestern_toad&amp;#39;, &amp;#39;spadefoot&amp;#39;, &amp;#39;sparrow&amp;#39;, &amp;#39;speedboat&amp;#39;, &amp;#39;spring_frog&amp;#39;, &amp;#39;stag&amp;#39;, &amp;#39;stallion&amp;#39;, &amp;#39;station_wagon&amp;#39;, &amp;#39;stealth_bomber&amp;#39;, &amp;#39;stealth_fighter&amp;#39;, &amp;#39;struthio_camelus&amp;#39;, &amp;#39;stud_mare&amp;#39;, &amp;#39;studhorse&amp;#39;, &amp;#39;supertanker&amp;#39;, &amp;#39;tabby&amp;#39;, &amp;#39;tabby_cat&amp;#39;, &amp;#39;tailed_frog&amp;#39;, &amp;#39;tandem_trailer&amp;#39;, &amp;#39;tank_ship&amp;#39;, &amp;#39;tanker&amp;#39;, &amp;#39;taxi&amp;#39;, &amp;#39;tennessee_walker&amp;#39;, &amp;#39;tennessee_walking_horse&amp;#39;, &amp;#39;texas_toad&amp;#39;, &amp;#39;tip_truck&amp;#39;, &amp;#39;tipper&amp;#39;, &amp;#39;tipper_lorry&amp;#39;, &amp;#39;tipper_truck&amp;#39;, &amp;#39;toad&amp;#39;, &amp;#39;toad_frog&amp;#39;, &amp;#39;tomcat&amp;#39;, &amp;#39;tow_truck&amp;#39;, &amp;#39;toy&amp;#39;, &amp;#39;toy_dog&amp;#39;, &amp;#39;toy_spaniel&amp;#39;, &amp;#39;tractor_trailer&amp;#39;, &amp;#39;trailer_truck&amp;#39;, &amp;#39;transporter&amp;#39;, &amp;#39;truck&amp;#39;, &amp;#39;trucking_rig&amp;#39;, &amp;#39;true_cat&amp;#39;, &amp;#39;true_frog&amp;#39;, &amp;#39;true_toad&amp;#39;, &amp;#39;tug&amp;#39;, &amp;#39;tugboat&amp;#39;, &amp;#39;twinjet&amp;#39;, &amp;#39;wagon&amp;#39;, &amp;#39;wagtail&amp;#39;, &amp;#39;walking_horse&amp;#39;, &amp;#39;wapiti&amp;#39;, &amp;#39;western_toad&amp;#39;, &amp;#39;woodland_caribou&amp;#39;, &amp;#39;wrecker&amp;#39;, &amp;#39;yosemite_toad&amp;#39;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Create folders to save images&lt;/h3&gt;
&lt;h3&gt;Markdown File to prevent running&lt;/h3&gt;
&lt;p&gt;filepath = TinyImgesFilepath + 'ImagesCIFARVerified\'&lt;/p&gt;
&lt;h1&gt;for key in images.keys():&lt;/h1&gt;
&lt;h1&gt;os.mkdir(filepath + key)&lt;/h1&gt;
&lt;p&gt;for key in cifar_dict.keys():
    os.mkdir(filepath + key)&lt;/p&gt;
&lt;p&gt;for key in images.keys():
    for keyd, valued in cifar_dict.items():
        if key in valued:
            break
    filepath2 = filepath + keyd + '\'
    os.mkdir(filepath2 + key)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Save to image&lt;/span&gt;
&lt;span class="c1"&gt;### Also loops through and generates cifar filepaths for the local save - &lt;/span&gt;
&lt;span class="c1"&gt;###       this is included in our larger CIFAR102 dictionary for reference&lt;/span&gt;
&lt;span class="n"&gt;cifar_filepaths&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cifar_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;keyd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;valued&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cifar_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;    &lt;span class="c1"&gt;# for name, age in dictionary.iteritems():  (for Python 2.x)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;valued&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;cifar_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;keyd&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;cifar_filepaths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#         im = Image.fromarray(v)&lt;/span&gt;
&lt;span class="c1"&gt;#         im.save(TinyImgesFilepath + &amp;#39;ImagesCIFAR\\&amp;#39; + cifar_key + &amp;#39;\\&amp;#39; + key + &amp;#39;\\&amp;#39; + key + &amp;#39;_&amp;#39; + str(x) + &amp;#39;.jpg&amp;#39;)&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Training Dataset Generation - Analyzing Verified Images&lt;/h2&gt;
&lt;p&gt;After verifying images, we totaled approximately 18k verified images amongst the 10 classes in CIFAR10. Below we show how many images were found in each CIFAR10 class: &lt;/p&gt;
&lt;p&gt;&lt;img src="verifydataset.JPG"&gt;&lt;/p&gt;
&lt;p&gt;From this list of verified images, it was then necessary to remove duplicates within the verified images and remove duplicates to the CIFAR10 and CIFAR10.1 test sets. It was important to remove duplicates to the former test sets because it is intended to utilize CIFAR10, CIFAR10.1 and CIFAR10.2 datasets to understand model generalization. If CIFAR10.2 training dataset had images contained in the other datasets test set the accuracy would be incorrectly high. &lt;/p&gt;
&lt;p&gt;Below we read in the verified images, and remove duplicates - this code can be found more thoroughly in both the PrepTinyImages notebook as well as the df_overlap_assembly notebook: &lt;/p&gt;
&lt;h3&gt;Reading in Verified Images&lt;/h3&gt;
&lt;p&gt;At this point we have worked through a large number of images and verified which images in fact do belong the CIFAR class the original keyword query had assigned. We now need to read in the verified images in order to understand count / proportion by class and keyword, as well as assembling our 10k and eventually 60k datasets.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Read in verified xml data &lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt;

&lt;span class="n"&gt;cifar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;verified_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tinyimages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;### cif contains dictionary with # keywords per class&lt;/span&gt;
&lt;span class="n"&gt;cif&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;airplane&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;automobile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;bird&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;deer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="s1"&gt;&amp;#39;frog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;horse&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;ship&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;truck&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;extension&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VerifiedImagesFilepath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;xmlfiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;*.&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;xmlfiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;VerifiedImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;xmlfiles&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# tinyimages: dictinoary with keys = keywords and values = count&lt;/span&gt;
&lt;span class="c1"&gt;# cifar: dictionary with keys = class and values = count&lt;/span&gt;
&lt;span class="c1"&gt;# verified_images: dictionary with keys = cifar class and values = list of truncated filename&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;xmlfiles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;path&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tinyimages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;cifar&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:]))&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tinyimages&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;cifar&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Find duplicate images amongst our verified images&lt;/span&gt;

&lt;span class="n"&gt;dropout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;key_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;ar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ImagesCIFAR&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ar&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;key_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;key_images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ship&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;
&lt;span class="n"&gt;bird&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;149&lt;/span&gt;
&lt;span class="n"&gt;truck&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;
&lt;span class="n"&gt;airplane&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;
&lt;span class="n"&gt;deer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="n"&gt;cat&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;
&lt;span class="n"&gt;frog&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;148&lt;/span&gt;
&lt;span class="n"&gt;automobile&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;
&lt;span class="n"&gt;horse&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;
&lt;span class="n"&gt;dog&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Understand how many images were duplicates and how many remain in dataset&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Original&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;After duplicate removal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Original&lt;/span&gt;
&lt;span class="c"&gt;ship: 1877&lt;/span&gt;
&lt;span class="c"&gt;bird: 4031&lt;/span&gt;
&lt;span class="c"&gt;truck: 1442&lt;/span&gt;
&lt;span class="c"&gt;airplane: 2913&lt;/span&gt;
&lt;span class="c"&gt;deer: 1431&lt;/span&gt;
&lt;span class="c"&gt;cat: 1414&lt;/span&gt;
&lt;span class="c"&gt;frog: 2931&lt;/span&gt;
&lt;span class="c"&gt;automobile: 2219&lt;/span&gt;
&lt;span class="c"&gt;horse: 2917&lt;/span&gt;
&lt;span class="c"&gt;dog: 1285&lt;/span&gt;
&lt;span class="err"&gt;After duplicate removal&lt;/span&gt;
&lt;span class="c"&gt;ship: 1866&lt;/span&gt;
&lt;span class="c"&gt;bird: 3882&lt;/span&gt;
&lt;span class="c"&gt;truck: 1423&lt;/span&gt;
&lt;span class="c"&gt;airplane: 2882&lt;/span&gt;
&lt;span class="c"&gt;deer: 1424&lt;/span&gt;
&lt;span class="c"&gt;cat: 1399&lt;/span&gt;
&lt;span class="c"&gt;frog: 2783&lt;/span&gt;
&lt;span class="c"&gt;automobile: 2176&lt;/span&gt;
&lt;span class="c"&gt;horse: 2847&lt;/span&gt;
&lt;span class="c"&gt;dog: 1281&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Copy verified images from original folder structure to verified folder&lt;/h3&gt;
&lt;h3&gt;Not necessary given our dataset = dictionary&lt;/h3&gt;
&lt;h3&gt;Converted to Markdown to prevent running&lt;/h3&gt;
&lt;p&gt;import shutil
for key in verified_images:
    for v in verified_images[key]:
        shutil.copyfile(TinyImagesFilepath + 'ImagesCIFAR\' + v, 'E:\TinyImages\ImagesCIFARVerified\' + v)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Display statistics based on count of dropouts&lt;/span&gt;

&lt;span class="n"&gt;dropoutper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;dropoutper&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cifar&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropoutper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;dropoutper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;barplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterrows&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ha&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proportion Duplicate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CIFAR Class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Image Count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;---------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="ne"&gt;TypeError&lt;/span&gt;                                 &lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cdf923568307&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;dropoutper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;----&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="n"&gt;dropoutper&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cifar&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="mi"&gt;6&lt;/span&gt; 
      &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;


&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unsupported&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;list&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;float&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Display image count after removing duplicates&lt;/span&gt;
&lt;span class="n"&gt;image_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;image_count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;image_count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Image Count Post Duplicate Removal&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Create master dictionary for CIFAR102&lt;/span&gt;
&lt;span class="c1"&gt;### dict_keys([b&amp;#39;labels&amp;#39;, b&amp;#39;data&amp;#39;, b&amp;#39;filenames&amp;#39;])&lt;/span&gt;


&lt;span class="n"&gt;cifar_class_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;airplane&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;automobile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;bird&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;deer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;frog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;horse&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;ship&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;truck&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;cifar102&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Loop through images dictionary - referenced by &lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;cifar_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
        &lt;span class="n"&gt;tiny_key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cifar_filepaths&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tiny_key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tiny_key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_class_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cifar_key&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;filenames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;tiny_key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tinykeyword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiny_key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localfilename&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;cifar102&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Save CIFAR102 dictinoary&lt;/span&gt;
&lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cifar102_10kv2.pickle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Load Image Data: Tiny Images Subset&lt;/h3&gt;
&lt;p&gt;466,009 images that match the same keyword distribution used construct the CIFAR-10 dataset&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This subset was created via a separate task on a local machine through comparing CIFAR-10 keywords to line-by-line read of a Tiny Images dataset binary file &lt;/p&gt;
&lt;p&gt;Data subset (dictionary) format:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Keys&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Tiny&lt;/span&gt; &lt;span class="n"&gt;Images&lt;/span&gt; &lt;span class="n"&gt;keywords&lt;/span&gt;
&lt;span class="n"&gt;Values&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt; &lt;span class="n"&gt;arrays&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;x32x3&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load subset pickle file&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# prefix = &amp;#39;data/tinyimage/function-test/data.pickle&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# #response = client.get_object(Bucket=bucket, Key=prefix)&lt;/span&gt;
&lt;span class="c1"&gt;# response = s3.get_object(Bucket=bucket, Key=prefix)&lt;/span&gt;

&lt;span class="c1"&gt;# subset_data = pickle.loads(response[&amp;#39;Body&amp;#39;].read())&lt;/span&gt;

&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# Load from local&lt;/span&gt;
&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data.pickle&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;subset_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Tiny Images subset pickle loaded in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total images: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;subset_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Tiny Images subset pickle loaded in 0.0 seconds&lt;/span&gt;
&lt;span class="err"&gt;Total images: 466009&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Process Image Arrays: Tiny Images Subset&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Flatten individual image arrays and convert to tuples; Store all images as a single list of tuples&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This supports comparisons (e.g., np.unique, pd.DataFrame.drop_duplicates, etc.) since arrays are not hashable&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternatively:&lt;/strong&gt; you could convert the arrays &lt;strong&gt;in-place&lt;/strong&gt; (within the dictionary that was loaded in the previous step) rather than creating a new list object.&lt;/p&gt;
&lt;p&gt;I create new lists here, but later when I load our verified images I just convert in-place. The first approach preserves the original data, the second conserves RAM.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Store all keywords for each image separately to use as a DataFrame column&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Process image arrays&lt;/span&gt;
&lt;span class="c1"&gt;# - convert and store image arrays in a single list&lt;/span&gt;
&lt;span class="c1"&gt;# - store image keyword labels separately&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;tiny_img_subset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;key_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;subset_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;subset_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

    &lt;span class="n"&gt;tiny_img_subset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;key_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subset_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;]))])&lt;/span&gt;

&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total images: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiny_img_subset&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wall time: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Total images: 466009&lt;/span&gt;
&lt;span class="err"&gt;Wall time: 156.7 seconds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Quick check for exact duplicates&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;num_no_duplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tiny_img_subset&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total exact duplicates: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiny_img_subset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num_no_duplicates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wall time: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Total exact duplicates: 11305&lt;/span&gt;
&lt;span class="err"&gt;Wall time: 405.4 seconds&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# assemble a dataframe ready for merging with CIFAR-10&lt;/span&gt;

&lt;span class="n"&gt;df_tiny_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tiny_img_subset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tiny_keyword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;                                           img_array    tiny_keyword&lt;/span&gt;
&lt;span class="err"&gt;0  (239, 239, 247, 236, 236, 244, 236, 236, 243, ...  abandoned_ship&lt;/span&gt;
&lt;span class="err"&gt;1  (239, 229, 219, 240, 230, 220, 241, 231, 221, ...  abandoned_ship&lt;/span&gt;
&lt;span class="err"&gt;2  (198, 205, 226, 195, 201, 222, 195, 201, 222, ...  abandoned_ship&lt;/span&gt;
&lt;span class="err"&gt;3  (152, 194, 218, 150, 191, 215, 152, 193, 216, ...  abandoned_ship&lt;/span&gt;
&lt;span class="err"&gt;4  (195, 201, 191, 144, 151, 133, 112, 121, 91, 1...  abandoned_ship&lt;/span&gt;
&lt;span class="err"&gt;(466009, 2)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Load CIFAR10 Images&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load CIFAR-10 data batches&lt;/span&gt;

&lt;span class="n"&gt;batch_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data_batch_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;batch_names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;test_batch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;batches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;batch_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;batch_names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;#     prefix = &amp;#39;data/cifar10/cifar-10-batches-py/&amp;#39; + batch&lt;/span&gt;
&lt;span class="c1"&gt;#     response = s3.get_object(Bucket=bucket, Key=prefix)&lt;/span&gt;
&lt;span class="c1"&gt;#     batches.append(pickle.loads(response[&amp;#39;Body&amp;#39;].read(), encoding=&amp;#39;bytes&amp;#39;))&lt;/span&gt;

    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CIFAR10_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;
    &lt;span class="n"&gt;batches&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;batch_id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;All CIFAR-10 training batches &amp;amp; test batch loaded in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;batches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;---------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="n"&gt;NameError&lt;/span&gt;                                 &lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="k"&gt;call&lt;/span&gt; &lt;span class="k"&gt;last&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="n"&gt;f09ce486c6&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="o"&gt;#&lt;/span&gt;     &lt;span class="n"&gt;batches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Body&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="k"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="k"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="mi"&gt;15&lt;/span&gt; 
&lt;span class="c1"&gt;---&amp;gt; 16     filename = CIFAR10_Filepath + batch&lt;/span&gt;
     &lt;span class="mi"&gt;17&lt;/span&gt;     &lt;span class="n"&gt;batches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="mi"&gt;18&lt;/span&gt;


&lt;span class="n"&gt;NameError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CIFAR10_Filepath&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;defined&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load CIFAR-10 meta&lt;/span&gt;
&lt;span class="c1"&gt;# - The only thing we will use from the CIFAR-10 meta data is &amp;#39;label_names&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# - We want to convert each image&amp;#39;s label number to a label name and use that in a column of the dataframe&lt;/span&gt;

&lt;span class="c1"&gt;# prefix_meta = &amp;#39;data/cifar10/cifar-10-batches-py/batches.meta&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# response_meta = s3.get_object(Bucket=bucket, Key=prefix_meta)&lt;/span&gt;
&lt;span class="c1"&gt;# CIFAR_10_meta = pickle.loads(response_meta[&amp;#39;Body&amp;#39;].read())&lt;/span&gt;

&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CIFAR10_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;batches.meta&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CIFAR_10_meta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Reshape procedure for each CIFAR-10 batch&lt;/span&gt;
&lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;batches&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# assemble components for a CIFAR-10 dataframe&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;CIFAR_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;CIFAR_class_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;batches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;image_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transpose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;label_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;CIFAR_10_meta&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;label_names&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

    &lt;span class="n"&gt;CIFAR_images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;CIFAR_class_names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label_list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total images: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR_images&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wall time: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Quick check for exact duplicates (there SHOULD be 0 exact duplicates in CIFAR-10)&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;num_no_duplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;CIFAR_images&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total exact duplicates: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR_images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;num_no_duplicates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wall time: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Assemble a CIFAR-10 dataframe&lt;/span&gt;

&lt;span class="n"&gt;df_CIFAR_10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR_images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                         &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;batch_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10_batch_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                         &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR_class_names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10_class_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;



&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_CIFAR_10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_CIFAR_10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Remove exact duplicates from Tiny Image subset&lt;/h3&gt;
&lt;p&gt;CIFAR-10 already has exact duplicates removed, so we need to do the same for the subset from Tiny Images&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 11305 duplicates&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Original Tiny Images subset row count: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# In list form the exact duplicate count was 11305; verify that count is still valid in dataframe format&lt;/span&gt;

&lt;span class="n"&gt;duplicates&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;duplicated&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Original Tiny Images subset duplicate count: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;duplicates&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Remove duplicate rows from the Tiny Images subset dataframe (exact duplicates)&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop_duplicates&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;keep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;first&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Duplicates found and removed in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;New row count: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Duplicates removed: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;466009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Merge: Tiny Images subset and CIFAR-10&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# add Tiny Images subset indicator column to support filtering&lt;/span&gt;
&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tiny_img_subset&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# add CIFAR-10 indicator column to support filtering&lt;/span&gt;
&lt;span class="n"&gt;df_CIFAR_10&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_CIFAR_10&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Merge Tiny Images subset dataframe and original CIFAR-10 dataframe&lt;/span&gt;
&lt;span class="c1"&gt;# - Merge &amp;#39;outer&amp;#39; to catch any CIFAR-10 images that our Tiny Images keyword query might have missed&lt;/span&gt;
&lt;span class="c1"&gt;#   &amp;quot;Missed&amp;quot; CIFAR-10 images will not have a match in the Tiny Images subset dataframe &amp;#39;img_array&amp;#39; column,&lt;/span&gt;
&lt;span class="c1"&gt;#   so they will be added to the merged dataframe (indicated as &amp;#39;right_only&amp;#39;)&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_tiny_img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_CIFAR_10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indicator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Merge completed in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Post merge total row count: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_merge&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="c1"&gt;# subset - duplicates + missed CIFAR_10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# drop the indicator column; we can get the same information by jointly using the tiny_img_subset and cifar10 indicator columns&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_merge&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Fill na for tiny_img_subset and cifar10 columns with 0&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tiny_img_subset&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# What types of CIFAR-10 images did our Tiny Images query not find?&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tiny_img_subset&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;)][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10_class_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Define function to name train/test splits&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;split_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data_batch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;train&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_batch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nan&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create column to identify CIFAR-10 train/test split membership&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar_split&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10_batch_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;split_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Drop CIFAR_10_batch_id column&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10_batch_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar_split&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Load 10k verified images&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load 10k verified image pickle file&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;# prefix = &amp;#39;data/cifar102/cifar102_10kv2.pickle&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# response = s3.get_object(Bucket=bucket, Key=prefix)&lt;/span&gt;
&lt;span class="c1"&gt;# verified_data = pickle.loads(response[&amp;#39;Body&amp;#39;].read())&lt;/span&gt;

&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TinyImagesFilepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cifar102_10kv2.pickle&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;verified_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Verified 10k v2 pickle loaded in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total images: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;verified_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;verified_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Process image arrays&lt;/span&gt;
&lt;span class="c1"&gt;# - convert and store image arrays IN PLACE&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;verified_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;verified_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wall time: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_cifar102_10k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verified_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# prior to joining, add column to indicate that image is a member of our verified set&lt;/span&gt;
&lt;span class="n"&gt;df_cifar102_10k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar102_10k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# rename image column to support joining on the same column name&lt;/span&gt;
&lt;span class="n"&gt;df_cifar102_10k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_cifar102_10k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar102_10k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar102_10k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Check that merge retained all verified images&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total cifar102: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar102_10k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# convert tuples back to numpy arrays to reduce pickle size&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Wall time: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# check that if both values are strings, that they are equal&lt;/span&gt;
&lt;span class="c1"&gt;# - Want to verify that class labels are all the same when they should be&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_pairs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;cifar10_class_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="n"&gt;cifarclass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterrows&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cifar10_class_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cifarclass&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;String label pairs do not match!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;First mismatch, row &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;, labels: (&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;,&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;)&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;All string label pairs match&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;check_pairs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;merge_cifar_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nan&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nan&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merge_cifar_class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# drop old redundant columns&lt;/span&gt;
&lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10_class_name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_dict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    
&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;UC Berkeley MIDS&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;w210_capstone&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;CIFAR-10.1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;overlap_v2.pkl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HIGHEST_PROTOCOL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After analysis of the overlap between our 18k verified images as well as loading and comparing CIFAR10 and CIFAR10.1 datasets, removing the duplicates in the test set - we have the following overlap between our 18k verified images as well as the CIFAR10 training set: &lt;/p&gt;
&lt;p&gt;&lt;img src="cifar102overlap.JPG"&gt;&lt;/p&gt;
&lt;p&gt;As can be seen, roughly 50% of our verified images are contained in the original CIFAR10 training set. In order to minimize overlap, we will first choose images that aren't present in the original CIFAR10 training set, and then fill in the remainder. First we will inspect and remove the 'near' duplicates. &lt;/p&gt;
&lt;h2&gt;Training Dataset Generation - Understand and Inspect 'near' duplicate images&lt;/h2&gt;
&lt;p&gt;We have previously removed duplicate images from the CIFAR10 test set. We now need to inspect and understand 'near' duplicates to remove these as well. The premise behind removing near duplicates is the same as exact duplicates - the training images may be too similar and prohibit the training from properly generalizing to the task. We compute near duplicate by analyzing the structural similarity (SSIM) as well as Euclidean distance between every image in the verified image dataset against every image in the CIFAR10 and CIFAR10.1 test sets, retaining the maximum similarity value for each verified image. We also retain all SSIM and Euclidean distance metrics in order to understand the distribution of these values and define the threshold value to determine 'near' duplicates. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Load Overlap V2 File&lt;/span&gt;
&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Users&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;AOlson&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;Documents&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;UC Berkeley MIDS&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;w210_capstone&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;CIFAR-10.1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;overlap_v2.pkl&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;dict_keys([&amp;#39;img_array&amp;#39;, &amp;#39;tiny_keyword&amp;#39;, &amp;#39;tiny_img_subset&amp;#39;, &amp;#39;cifar10&amp;#39;, &amp;#39;cifar_split&amp;#39;, b&amp;#39;labels&amp;#39;, b&amp;#39;filenames&amp;#39;, b&amp;#39;tinykeyword&amp;#39;, b&amp;#39;localfilename&amp;#39;, &amp;#39;cifar102_10k&amp;#39;, &amp;#39;cifarclass&amp;#39;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Load CIFAR10.1 Dataset&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;load_ext&lt;/span&gt; &lt;span class="n"&gt;autoreload&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;autoreload&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;IPython.display&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;display&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ipywidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Layout&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ipywidgets&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;widgets&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tqdm&lt;/span&gt;

&lt;span class="n"&gt;repo_root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CIFAR101_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;code&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;#os.path.join(os.getcwd(), &amp;#39;../code&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo_root&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cifar10&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;utils&lt;/span&gt;

&lt;span class="n"&gt;cifar_label_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cifar10_label_names&lt;/span&gt;

&lt;span class="n"&gt;version_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;v6&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tinyimage_indices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_new_test_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;load_tinyimage_indices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;num_new_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;reshaped_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_new_images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;reshaped_images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_new_images&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;Loaded version &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; of the new dataset.&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version_string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;There are &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; images in the dataset.&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="c1"&gt;# cifar101 = pd.DataFrame({&amp;#39;data&amp;#39;: images, &amp;#39;labels&amp;#39;: labels})&lt;/span&gt;
&lt;span class="n"&gt;images_flatten&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;im&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;images_flatten&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;cifar101&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images_flatten&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cifar101&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cifar101&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar101&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;cifar101&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Load file to dataframe and rename columns&lt;/span&gt;

&lt;span class="n"&gt;overlap_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar102_10k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img_array&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;filenames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;filenames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tinykeyword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tinykeyword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;localfilename&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localfilename&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Function to convert class string to int based on original CIFAR dictionary - already completed in overlap_v2 dict&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;transform_cifar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;cifar_class_dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;airplane&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;automobile&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;bird&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;cat&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;deer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;dog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;frog&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;horse&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;ship&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="s1"&gt;&amp;#39;truck&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cifar_class_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar101&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;outer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indicator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Merge completed in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Post merge total row count: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_merge&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_merge&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Use SSIM to get maximum SSIM value along with index row looping over all verified images and comparing all cifar10 test images&lt;/span&gt;
&lt;span class="c1"&gt;### Also find minimum euclidean distance&lt;/span&gt;

&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NaN&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ssim_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NaN&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;euclidean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NaN&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;euclidean_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NaN&lt;/span&gt;

&lt;span class="n"&gt;len_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# loop over all verified images&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar102_10k&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterrows&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="c1"&gt;# apply to all rows in cifar10 test&lt;/span&gt;
    &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[((&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar_split&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar101&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ssim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ssim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
    &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ssim_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# apply to all rows in cifar10 test&lt;/span&gt;
    &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[((&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar_split&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar101&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;euclidean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;euclidean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;
    &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;at&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;euclidean_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Total Time in &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; seconds&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; Precent Complete: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;len_overlap&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;


&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unpickle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;

&lt;span class="n"&gt;overlap_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unpickle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR101_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;overlap_V2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.image.AxesImage at 0x215f58518c8&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/output_78_1.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Generate training dataset&lt;/span&gt;
&lt;span class="c1"&gt;# cifar102_first_1k = first 1k images for each CIFAR class&lt;/span&gt;
&lt;span class="c1"&gt;# cifar102_min_overlap = first take images not in CIFAR then take remainder to make 1k images per class&lt;/span&gt;

&lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;min_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifar10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;min_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()[:&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;],:]&lt;/span&gt;
    &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;class_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iterrows&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cifar_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cifar_class&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;class_count&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cifarclass&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;cifar_class&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;class_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
        &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_first_1k&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;10000 19075 10000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Create test/train datasets - allowing class balance (ie 800 images in training per CIFAR class)&lt;/span&gt;

&lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;subset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frac&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#random state is a seed value&lt;/span&gt;
    &lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ignore_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;800&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Rotate images in order to make same orientation as CIFAR for proper training loading - also reshape from 3D array to flattened array&lt;/span&gt;

&lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;filenames&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tinykeyword&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;localfilename&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# cifar102_first_1k = cifar102_first_1k[cols].to_dict()&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_dict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rot90&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asarray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_dict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap_test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rot90&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3072&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap_test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;asarray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cifar102_min_overlap_test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap_test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unpickle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pickle&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bytes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;

&lt;span class="n"&gt;cifar10_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unpickle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR101_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;test_batch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_ssim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;im2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Structural Similarity: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ssim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;im2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rot90&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rot90&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;im2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;plot_ssim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar10_test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;cifar10_test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Structural Similarity: 0.04&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/output_82_1.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Save datasets&lt;/span&gt;

&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CIFAR101_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# outfile = open(filename + &amp;#39;cifar102_first_1k&amp;#39;, &amp;#39;wb&amp;#39;)&lt;/span&gt;
&lt;span class="c1"&gt;# pickle.dump(cifar102_first_1k, outfile)&lt;/span&gt;
&lt;span class="c1"&gt;# outfile.close()&lt;/span&gt;

&lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cifar102_min_overlap_v1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cifar102_min_overlap_test_v1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cifar102_min_overlap_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CIFAR10_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;cifar10&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;batches.meta&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;num_cases_per_batch&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;

&lt;span class="n"&gt;outfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CIFAR10_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;batches.meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dump&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;outfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cells below load images from various parts of the dataset save to ensure iamge can properly be displayed and matches CIFAR orientation. Last image using vstack and transpose mimics CIFAR10 dataset load process in pytorch class to show proper orientation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CIFAR10_Filepath&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;other_data&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;infile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ssim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pickle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;infile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SSIM Distance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.75&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;prop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proportion above threshold &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; is: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/output_86_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;0.0004514723897263169&lt;/span&gt;
&lt;span class="err"&gt;Proportion above threshold 0.75 is: 0.0005%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_near_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ssim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upper_threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;df1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;upper_threshold&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;df1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;upper_threshold&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;ind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;ssim_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df1&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;image2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ssim_index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axarr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Distance: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;ind&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;axarr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;axarr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;uint8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;F&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# df = data[data[&amp;#39;cifar101&amp;#39;].isna()]&lt;/span&gt;
&lt;span class="n"&gt;plot_near_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;overlap_df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;euclidean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;upper_threshold&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Distance&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;7041.4&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/cifar102/output_87_1.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The above code was used as a reference in order to understand SSIM / Euclidean values and the image similarity values in order to better understand the threshold: &lt;/p&gt;
&lt;p&gt;&lt;img src="ssim.JPG"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="euclid.JPG"&gt;&lt;/p&gt;
&lt;p&gt;Because there were inconsistencies in the euclid metric, we chose to prefer SSIM distance metrics and removed anything above the 0.75 threshold. We then generated a 10k dataset minimizing the overlap to the original CIFAR10 training set. From this point we then begin the process of training various models on the CIFAR10, and CIFAR10.2 training sets and comparing accuracy and other metrics amongst the three test sets. &lt;/p&gt;
&lt;h2&gt;Model Training&lt;/h2&gt;
&lt;p&gt;With a dataset compiled, we began by verifying model accuracies against the state of art models that have published results to CIFAR10 training dataset. Verifying performance is a critical step in order to ensure the code and architecture we are using matches the previosuly published accuracy scores. &lt;/p&gt;
&lt;p&gt;We have focused on VGG and ResNet models and will expand to others including AlexNet, Random Features and AutoAugment. After verying model implementation we can then begin to train on the new 10k CIFAR10.2 training dataset and test on CIFAR 10.2 test, CIFAR10.1 and a subset of CIFAR10 test set. We also aim to train on CIFAR10 10k dataset in order to compare accuracy / etc against smaller datasets. Early analysis has shown our 10k dataset tends to have accuracy between 60 and 70% which is in line with prior publications detailing how dataset size impacts model performance&lt;/p&gt;
&lt;h2&gt;Future Work&lt;/h2&gt;
&lt;p&gt;We will contineu to test different models on the smaller 10k dataset inferring ability to generalize. As previously mentioned, we are likely limited to 70% accuracy upper benchmark due to the smaller training dataset size. It is therefore important to continue to verify images throughout the model testing process with the goal of a 60k image dataset size. This larger training dataset will enable higher accuracy metrics and better understanding of model shortfalls as well as how model accuracy is impacted by different images and/or image categories. &lt;/p&gt;
&lt;p&gt;When a 60k dataset is compiled we will continue to test model performance with the implementations that have already been verified to better understand model generalizability. &lt;/p&gt;</content><category term="posts"></category><category term="python"></category><category term="gradient boost"></category><category term="decision tree"></category><category term="spark"></category><category term="pyspark"></category></entry><entry><title>Identifying Edible Plants</title><link href="https://aaron-j-olson.com/edibleplants.html" rel="alternate"></link><published>2019-12-08T20:00:00-05:00</published><updated>2019-12-08T20:00:00-05:00</updated><author><name>Scott Xu, Divya Babu, Aaron Olson</name></author><id>tag:aaron-j-olson.com,2019-12-08:/edibleplants.html</id><summary type="html">&lt;p&gt;Combination of cloud computing and edge device for inference utilizing tensforflow image categorization model&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Intent of this final project is to develop an image recognition program that can accurately identify edible and/or poisonous plants in the wild. This endeavor has been attempted by several apps and other programs - however all of these realize an edge architecture that relies on a remote server connection in order to upload the file and run through the model. &lt;/p&gt;
&lt;p&gt;This paper explores the difference performance options in order to arrive at the best performing model. We then work to reduce the model size in order to fit on an edge device for real time diagnosis. &lt;/p&gt;
&lt;p&gt;In order to get a baseline model for image recognition, we used a transfer learning technique where the model weights and architecture of ResNet50 was applied. ResNet50 was chosen for its performance as well as its size. Training on the volume of images for the duration that ResNet50 was done would not be reasonable - therefore we have used this baseline model to improve the baseline prediction. On top of this we explore different model architectures in order to define which architecture performs the best.&lt;/p&gt;
&lt;p&gt;In order to get the best performing model we needed to remember to balance model performance with edge device performance. In the case of poisonous plants the consequences of a bad prediction can be high - however the utility of an app that takes 60 min to make a prediction is impacted. Therefore at the end of this notebook we examine the relationship with building the model on a virtual machine (for training) vs inference on the edge device (time to predict vs accuracy). The overall training and model structure is defined below - the larger resources consuming actions will be conducted in the cloud enabling inference at the edge - which provides an advantage to prior work as no active network is required for inference: &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Final Model/ModelStructure.JPG" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This paper can be broken down into the following sections: 
1. Exploratory Data Analysis &amp;amp; Understanding of the Training Dataset
2. Image Augmentation - impacts of different augmentation techniques and best performing augmentation
3. Discussion of Base Model choice
4. Model Architecture
5. Image Classification on VM - Model Peformance
6. Binary Classification on VM - Model Performance
7. Model Transfer to Edge Device and discussion of performance vs inference time &amp;amp; resource constraints
8. Conclusion&lt;/p&gt;
&lt;p&gt;We begin by examining the training dataset:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;
&lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ModelStructure.jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="output_1_0.png"&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Section 1: Exploratory Data Analysis&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Our traning datasets were downloaded from Kaggle [https://www.kaggle.com/gverzea/edible-wild-plants, https://www.kaggle.com/nitron/poisonous-plants-images]. The datasets are comprised of:
- Total of 6962 pictures:
    - 6552 of these pictures are of edible wild plants
    - 410 pictures are of poisonous plants. 
- There are:
    - 62 categories of edible plants
    - 8 categories of poisonous plants&lt;/p&gt;
&lt;p&gt;From this data it is evident that our dataset is skewed (more edible pictures and categories than poisonous). Additionally, the dataset does not comprise all wild plants - and is only a rather small subset of wild plants. We will treat this dataset as our primary for training purposes. We do have two other datasets that can be utlized for further training on a larger array of edible plant types. The average number of images per category is 99 - however we can see in the plot below that the mean count of image per category is closer to 50 with some categories having a large number of images.  &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/CountbyCateogry.JPG" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Having 50 images per class does indicate that there is hopefully some variability in terms of image orientation, quality, etc. Having this variety will have a beneficial impact on the training process. We can further improve the variety of images by utilizing image augmentation. &lt;/p&gt;
&lt;p&gt;In addition to increasing image variety, augmentation also helps to increase the trianing dataset size. Because we have a limited dataset (considering we will be training on Dense, CNN or ReLu layers) we can utilize augmentation and increase both the variety and total number of images in order to improve our trianing process. Furthermore, In the latter portion of our analysis, we attempt to make a prediction of poisonous or edible (rather than plant category). Because we have a biased training set for the binary label problem - we will increase image count of the poisonous images by utilizing image augmentation - explained in the next section. &lt;/p&gt;
&lt;p&gt;Depicted below are a few sample images taken from the datasets. &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/How-To-Grow-Rhubarb.jpg" alt="Drawing" style="width: 250px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Chicory20.jpg" alt="Drawing" style="width: 350px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/asparagus8.jpg" alt="Drawing" style="width: 350px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h2&gt;&lt;strong&gt;Section 2: Image Augmentation&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;With the baseline model established, we understand that there will likely be a difference in the cleanliness of the images taken for the training dataset, vs the images taken in the field when a user wants to succesfully identify a plant. We therefore utilize image augmentation, to achieve a couple of tasks: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Affect the image quality, orientation, etc in order to make the model more versatile &lt;/li&gt;
&lt;li&gt;Create more training images in order to train the model.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data augmentation encompasses a wide range of techniques used to generate new training samples from the original ones by randomly transforming the original image via a series of random translations, rotations, changing brightness levels of the image etc. Keras deep learning library provides the capability to use data augmentation when training a model.&lt;/p&gt;
&lt;p&gt;Image data augmentation is supported in the Keras via the ImageDataGenerator class. This class generates batches of tensor image data with real-time data augmentation. The ImageDataGenerator class is instantiated and the configuration for different types of data augmentation are passed in the form of arguments to the class constructor.&lt;/p&gt;
&lt;p&gt;ImageDataGenerator supports a range of data augmentation techniques as well as pixel scaling methods.
We have focused on the below techniques for our dataset&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Width_shift_range and height_shift_range arguments - Image shifts horizontally and vertically&lt;/li&gt;
&lt;li&gt;horizontal_flip and vertical_flip arguments- Image flips horizontally and vertically&lt;/li&gt;
&lt;li&gt;rotation_range argument - Image rotates by specified degrees&lt;/li&gt;
&lt;li&gt;brightness_range argument - Image brightness levels are modified&lt;/li&gt;
&lt;li&gt;zoom_range argument - Image zoom levels are altered&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's the original image:       &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.preprocessing.image&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;augmented_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nrows&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;augmented_images&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;asparagus2.jpg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Show the original image&lt;/span&gt;
&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_4_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Examples of images after Data Augmentation&lt;/h3&gt;
&lt;h4&gt;Horizontal and Vertical Shift Augmentation&lt;/h4&gt;
&lt;p&gt;The ImageDataGenerator constructor control the amount of horizontal and vertical shift using the arguments The width_shift_range and height_shift_range respectively, a number of pixels can be specified to shift the image. &lt;/p&gt;
&lt;p&gt;A shift to an image means moving all pixels of the image in one direction, either horizontally or vertically, while keeping the image dimensions the same. The shift clips off some of the pixels from the image and there will be a region of the image where empty pixel values will have to be specified, by default the closest pixel value is chosen and repeated for all the empty values.&lt;/p&gt;
&lt;h4&gt;Horizontal Shift Augmentation&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width_shift_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_80.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Vertical Shift Augmentation&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;height_shift_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_10_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Horizontal and Vertical Flip Augmentation&lt;/h4&gt;
&lt;p&gt;An image flip means reversing the rows or columns of pixels in the case of a vertical or horizontal flip respectively.&lt;/p&gt;
&lt;p&gt;The flip augmentation is specified by a boolean horizontal_flip or vertical_flip argument to the ImageDataGenerator class constructor.&lt;/p&gt;
&lt;h4&gt;Horizontal Flip Augmentation&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;horizontal_flip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_13_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Vertical Flip Augmentation&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vertical_flip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_15_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Rotation Augmentation&lt;/h4&gt;
&lt;p&gt;A rotation augmentation randomly rotates the image clockwise by a specified number of degrees from 0 to 360.
The rotation will likely rotate pixels out of the image frame and leave areas of the frame with no pixel data that must be filled in, by default the closest pixel value is chosen and repeated for all the empty values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rotation_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_17_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Brightness Augmentation&lt;/h4&gt;
&lt;p&gt;The brightness of the image can be augmented by either randomly changing the brightness levels of the image.
generated images could be dark or light or both.&lt;/p&gt;
&lt;p&gt;This helps the model to generalize across images captured in different lighting levels.
brightness_range argument is passed to the ImageDataGenerator() constructor that specifies min and max range as a floating point number representing the percentage for selecting the brightness levels.
1.0 has no effect on brightness, Values less than 1.0 darken the image, e.g. [0.5, 1.0], whereas values larger than 1.0 brighten the image, e.g. [1.0, 1.5].&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;brightness_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_19_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;Zoom Augmentation&lt;/h4&gt;
&lt;p&gt;Zoom augmentation randomly zooms the image in and out, either adds new pixel values around the image or interpolates pixel values respectively.&lt;/p&gt;
&lt;p&gt;zoom_range argument is passed to the ImageDataGenerator constructor to enable Image zooming. You can specify the percentage of the zoom as a single float or a range.&lt;/p&gt;
&lt;p&gt;If a float is specified, then the range for the zoom will be [1-value, 1+value]. 
For example, if you specify 0.3, then the range will be [0.7, 1.3], or between 70% (zoom in) and 130% (zoom out).&lt;/p&gt;
&lt;p&gt;As seen below, random zoom in is different on both the width and height dimensions as well as the aspect ratio of the object in the image.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zoom_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plot_images&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_augmentor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_21_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Data augmentation makes the model more robust to slight variations, and hence prevents the model from overfitting.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below we explore different effects of image augmentation and show below the effects of model performance:&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Section 3: Base Model - ResNet Model Choice&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;With the problem of image classification we understood that utilizing transfer learning would speed the training process. We chose to utilize the ResNet50 model due to its: 
- Accuracy proven on the ImageNet dataset
- Overall size (50 ReLu layers)&lt;/p&gt;
&lt;p&gt;The ResNet50 dataset was trained on the ImageNet dataset which is a large volume dataset with classes associated with common everyday items (broccoli, horse, etc). Reviewing the categories the model has already been trained on, it currently doesn't have any that match the classes in our training dataset - however it has been trained on many plant and food related items. &lt;/p&gt;
&lt;p&gt;ResNet is a model built upon the Residual layer structure. It has been noted in literature where deeper networks tend to have lower accuracy compared to it's shallower counterpart. This is essentially because it can be hard for a dense layer to learn the y = x relationship when the training has become saturated. A Residual Layer has an impliminatation similar to  y = F(x) + x where the function F(x) can reduce to 0 and bypass the degradation problem. &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/ResidualLayer.JPG" alt="Drawing" style="width: 500px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Picture above is one layer of a residual layer which shows how the input can bypass the learned weights and become the output. This type of layer has shown high accuracy in image classification problems. He, K., Zhang, X., Ren, S., &amp;amp; Sun, J. (2015). Deep Residual Leraning for Image Recognition. Cornell University.&lt;/p&gt;
&lt;p&gt;In addition to a well trained model we also needed to control the size and the inference time of the model. The intent of this paper is to train in a data center (where volume of data and computing power can be large) in order to bring the model to an edge device for inference. We therefore need to ensure the model is sufficiently small (such that the memory requirements won't exhaust the hardware of an edge device), fit on a limited storage device, and provide image inference at a reasonable time. Because of this constraint we chose to use ResNet50 as our baselayer vs ResNet 100, 1000 for example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load ResNet50 baseline model&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.applications.resnet50&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ResNet50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;preprocess_input&lt;/span&gt;

&lt;span class="n"&gt;HEIGHT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;span class="n"&gt;WIDTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;

&lt;span class="n"&gt;base_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ResNet50&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;weights&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;imagenet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                      &lt;span class="n"&gt;include_top&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                      &lt;span class="n"&gt;input_shape&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HEIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WIDTH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Image Classification Model Analysis&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;glob&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;

&lt;span class="n"&gt;IMAGECLASS_TRAIN_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;train&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IMAGECLASS_VALIDATION_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;validation&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;IMAGECLASS_TEST_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;walk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IMAGECLASS_TRAIN_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;glob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;span class="n"&gt;classes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;span class="n"&gt;HEIGHT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;span class="n"&gt;WIDTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;
&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Train Data Generator&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Image augmentation&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.preprocessing.image&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;

&lt;span class="n"&gt;imageClass_train_datagen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;preprocessing_function&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;preprocess_input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;rescale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;width_shift_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;height_shift_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;horizontal_flip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;vertical_flip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;rotation_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;zoom_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;brightness_range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;imageClass_train_generator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_train_datagen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flow_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IMAGECLASS_TRAIN_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                                    &lt;span class="n"&gt;target_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HEIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WIDTH&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                                                    &lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                    &lt;span class="n"&gt;class_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categorical&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Found 8000 images belonging to 70 classes.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Validation data generator&lt;/h3&gt;
&lt;p&gt;Generally, only apply data augmentation to the training examples. In this case, only rescale the validation images and convert them into batches using ImageDataGenerator.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;imageClass_val_datagen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rescale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;imageClass_validation_generator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_val_datagen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flow_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                 &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IMAGECLASS_VALIDATION_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                 &lt;span class="n"&gt;target_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HEIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WIDTH&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                                 &lt;span class="n"&gt;class_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categorical&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Found 479 images belonging to 70 classes.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;strong&gt;Section 4: Model Architecture - Predicting Plant Class&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Building on the baseline model, we have explored adding different layers (size, type, etc) in order to produce the 'best' performing model. See above and later discussions as to how we define 'best' model. For this paper we explored both accurately predicting the class of the plant in an image - which would help users understand more information about the specific plant they have taken the picture of, as well as predicting whether a plant is poisonous or not without the context of exact plant type. &lt;/p&gt;
&lt;p&gt;We first explored keeping all the base model layers static (no change to the model weights) and only training on the additional layers - we explore the following layer architecture: 
- Dense layers (different nodes and depths)
- CNN with pooling layers given the image classification problem
- Residual layer based on our chosen base model architecture&lt;/p&gt;
&lt;p&gt;In order to narrow model choice we chose to train for 100 epochs on 15,000 images with a batch size of 64. Our specific trials are captured and analyzed below. Below we show the code that was used during model training (both for image classification as well as binary classification (poison yes/no)). Below the model architecture we detail performance of varying model architectures.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;base_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;TensorShape([Dimension(None), Dimension(10), Dimension(10), Dimension(2048)])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.layers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Activation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dropout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Conv2D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MaxPooling2D&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Sequential&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;build_finetune_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fc_layers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_classes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;base_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;layer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trainable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;

    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;base_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;

&lt;span class="c1"&gt;#     x = Conv2D(32, kernel_size=(3, 3),&lt;/span&gt;
&lt;span class="c1"&gt;#                  activation=&amp;#39;relu&amp;#39;,&lt;/span&gt;
&lt;span class="c1"&gt;#                  input_shape=base_model.output.shape)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     #x = Conv2D(64, (3, 3), activation=&amp;#39;relu&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     x = MaxPooling2D(pool_size=(2, 2))(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Dropout(dropout)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     #x.add(Flatten())&lt;/span&gt;

&lt;span class="c1"&gt;# Add CNN&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Conv2D(32, kernel_size=(3, 3),&lt;/span&gt;
&lt;span class="c1"&gt;#              activation=&amp;#39;relu&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Conv2D(64, (3, 3), activation=&amp;#39;relu&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     x = MaxPooling2D(pool_size=(2, 2))(x)&lt;/span&gt;

&lt;span class="c1"&gt;# Add Residual Layers&lt;/span&gt;
&lt;span class="c1"&gt;#     conv1 = Conv2D(64, (3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;relu&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv2 = Conv2D(2048,(3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;linear&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(conv1)&lt;/span&gt;
&lt;span class="c1"&gt;#     layer_out = add([conv2, x])&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Activation(&amp;#39;relu&amp;#39;)(layer_out)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv1 = Conv2D(64, (3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;relu&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv2 = Conv2D(2048,(3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;linear&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(conv1)&lt;/span&gt;
&lt;span class="c1"&gt;#     layer_out = add([conv2, x])&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Activation(&amp;#39;relu&amp;#39;)(layer_out)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv1 = Conv2D(64, (3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;relu&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv2 = Conv2D(2048,(3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;linear&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(conv1)&lt;/span&gt;
&lt;span class="c1"&gt;#     layer_out = add([conv2, x])&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Activation(&amp;#39;relu&amp;#39;)(layer_out)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv1 = Conv2D(64, (3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;relu&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv2 = Conv2D(2048,(3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;linear&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(conv1)&lt;/span&gt;
&lt;span class="c1"&gt;#     layer_out = add([conv2, x])&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Activation(&amp;#39;relu&amp;#39;)(layer_out)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv1 = Conv2D(64, (3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;relu&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(x)&lt;/span&gt;
&lt;span class="c1"&gt;#     conv2 = Conv2D(2048,(3,3), padding = &amp;#39;same&amp;#39;, activation = &amp;#39;linear&amp;#39;, kernel_initializer=&amp;#39;he_normal&amp;#39;)(conv1)&lt;/span&gt;
&lt;span class="c1"&gt;#     layer_out = add([conv2, x])&lt;/span&gt;
&lt;span class="c1"&gt;#     x = Activation(&amp;#39;relu&amp;#39;)(layer_out)&lt;/span&gt;

    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flatten&lt;/span&gt;&lt;span class="p"&gt;()(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fc&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fc_layers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# Can look here if adding different types of layers has an effect&lt;/span&gt;
        &lt;span class="c1"&gt;# Also explore differences in changing activation function&lt;/span&gt;
        &lt;span class="c1"&gt;# Can also iterate on droupout amount&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;relu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dropout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# New softmax layer&lt;/span&gt;
    &lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Dense&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;activation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;softmax&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

    &lt;span class="n"&gt;finetune_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;base_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;finetune_model&lt;/span&gt;

&lt;span class="c1"&gt;# Can change the model architecture here&lt;/span&gt;
&lt;span class="n"&gt;FC_LAYERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;128&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;dropout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.3&lt;/span&gt;

&lt;span class="n"&gt;imageClass_finetune_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build_finetune_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                      &lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dropout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                      &lt;span class="n"&gt;fc_layers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FC_LAYERS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                      &lt;span class="n"&gt;num_classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;layers&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;143&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calling&lt;/span&gt; &lt;span class="nf"&gt;dropout&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn_ops&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;keep_prob&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="ss"&gt;`rate`&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="ss"&gt;`keep_prob`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Rate&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="kt"&gt;set&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="ss"&gt;`rate = 1 - keep_prob`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.optimizers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SGD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Adam&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.callbacks&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ModelCheckpoint&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt;   

&lt;span class="c1"&gt;# For the baseline model will use 100 epochs and 15000 images to test model performance&lt;/span&gt;
&lt;span class="c1"&gt;# Will then use &amp;#39;optimized&amp;#39; model parameters to train for longer time and explore&lt;/span&gt;
&lt;span class="c1"&gt;# Size vs Accuracy for edge compute purposes&lt;/span&gt;
&lt;span class="n"&gt;NUM_EPOCHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;
&lt;span class="n"&gt;num_train_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;15000&lt;/span&gt;
&lt;span class="n"&gt;num_val_images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;479&lt;/span&gt;

&lt;span class="n"&gt;adam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Adam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.00001&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Can look into whether &lt;/span&gt;
&lt;span class="c1"&gt;#finetune_model.compile(adam, loss=&amp;#39;categorical_crossentropy&amp;#39;, metrics=[&amp;#39;accuracy&amp;#39;])&lt;/span&gt;

&lt;span class="n"&gt;imageClass_finetune_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;adam&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categorical_crossentropy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categorical_accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;# Checkpoin is overwritten at each epoch - can look at line below where datetime is used to create time based file names&lt;/span&gt;
&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/root/w251_finalproject/checkpoint/model&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;checkpoint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ModelCheckpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;monitor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;categorical_accuracy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# history = finetune_model.fit_generator(train_generator, epochs=NUM_EPOCHS, &lt;/span&gt;
&lt;span class="c1"&gt;#                                        steps_per_epoch=num_train_images // BATCH_SIZE, &lt;/span&gt;
&lt;span class="c1"&gt;#                                        shuffle=True)# , callbacks=[checkpoint])&lt;/span&gt;

&lt;span class="n"&gt;imageClass_history&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_finetune_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit_generator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;imageClass_train_generator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;steps_per_epoch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num_train_images&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;epochs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;NUM_EPOCHS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;validation_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;imageClass_validation_generator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;validation_steps&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;num_val_images&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;BATCH_SIZE&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;From&lt;/span&gt; &lt;span class="sr"&gt;/opt/conda/lib/python3.6/site-packages/tensorflow/python/ops/&lt;/span&gt;&lt;span class="n"&gt;math_ops&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;py&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3066&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;to_int32&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;python&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;math_ops&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;cast&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 16s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.6113&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0021&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 275s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0240&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0878&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.6113&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0021&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 917ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4534&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0146&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5324&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1896&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4534&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.0146&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 971ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0701&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1065&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.3367&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2323&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0701&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1065&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 967ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9508&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1211&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.2017&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2606&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9508&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1211&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 965ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0411&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1148&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.1179&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2804&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0411&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1148&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 946ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2681&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1065&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.9306&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3212&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2681&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1065&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 968ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9663&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1378&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.8664&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3361&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9663&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1378&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 964ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9804&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1608&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.7547&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3501&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9804&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1608&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7974&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1670&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.6922&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3721&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7974&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1670&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 921ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8230&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1816&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.6142&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3760&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8230&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1816&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 967ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7753&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1858&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.5413&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3975&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7753&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1858&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 965ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6889&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1921&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.4730&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4126&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6889&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1921&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 939ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6455&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2276&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.3795&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4391&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6455&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2276&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 965ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6641&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2234&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.3306&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4415&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6641&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2234&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 948ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7792&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1942&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.2660&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4557&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7792&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.1942&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 941ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6185&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2589&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.2083&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4675&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6185&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2589&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 967ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6167&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2463&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.1713&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4840&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6167&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2463&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 993ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5697&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2401&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.1389&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4877&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5697&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2401&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5496&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2568&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;2.0664&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5042&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5496&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2568&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5511&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2484&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.9967&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5138&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5511&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2484&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 969ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5397&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2484&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 254s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.9682&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5229&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5397&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2484&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 981ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5904&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2025&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 253s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.9404&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5297&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5904&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2025&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 950ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5082&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2881&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.8630&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5409&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5082&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2881&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 924ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5616&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2317&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.8223&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5524&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5616&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2317&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 913ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5328&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2672&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.7936&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5583&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5328&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2672&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 13s 888ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5321&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2672&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.7634&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5666&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5321&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2672&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 966ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5500&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2777&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.7230&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5836&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5500&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2777&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 906ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4617&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2818&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.6478&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5955&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4617&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2818&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 986ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6146&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2651&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 262s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.6235&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6016&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6146&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2651&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 997ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4886&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3027&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 261s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.5974&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6085&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4886&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3027&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 968ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5459&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2839&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.5677&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6140&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5459&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2839&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 983ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5736&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3006&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.5307&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6216&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5736&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3006&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 908ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4280&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3027&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.4952&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6324&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4280&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3027&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 998ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4712&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2881&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.4786&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6285&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4712&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2881&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4030&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2965&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.4276&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6444&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4030&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2965&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 952ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5726&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2944&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.3896&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6544&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5726&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2944&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 956ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4549&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3027&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.3655&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6545&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.4549&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3027&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 943ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5666&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3173&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.3410&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6658&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5666&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3173&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 966ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6170&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3048&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.3112&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6714&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6170&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3048&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5953&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3319&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2718&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6812&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5953&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3319&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 931ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5098&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3194&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2447&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6844&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5098&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3194&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 971ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6556&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3152&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2331&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6902&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6556&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3152&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1000ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5623&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2130&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6959&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5623&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 978ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6266&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2125&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6986&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6266&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6584&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.1844&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6992&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6584&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 937ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5813&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2881&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.1422&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7136&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.5813&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2881&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 985ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8531&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2797&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.1035&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7182&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8531&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.2797&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 13s 899ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6830&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3111&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 254s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.0691&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7261&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6830&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3111&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 918ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6863&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3340&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.0809&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7249&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.6863&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3340&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 937ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7512&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3486&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.0247&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7364&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7512&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3486&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 913ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9033&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 261s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9978&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7473&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9033&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7908&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3299&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9881&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7496&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7908&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3299&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 966ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0360&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 262s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9534&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7566&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0360&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 930ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8476&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3507&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9511&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7573&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8476&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3507&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 958ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9393&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3299&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9410&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7561&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9393&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3299&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 985ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7561&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8995&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7704&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.7561&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 937ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8762&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3194&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8891&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7661&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8762&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3194&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 970ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8328&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8770&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7700&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8328&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;61&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 945ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9193&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8926&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7691&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9193&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3215&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;62&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 940ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8608&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3236&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 261s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8651&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7757&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8608&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3236&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 963ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8405&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3570&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8078&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7897&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8405&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3570&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 923ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8981&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3382&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8157&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7897&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8981&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3382&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 933ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8738&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7686&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7964&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8738&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 952ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9339&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3507&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7749&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7993&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9339&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3507&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 946ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9571&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7536&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8021&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9571&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 969ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8007&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7473&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8030&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.8007&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 952ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9706&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3236&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7411&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8111&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9706&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3236&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 992ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0217&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3090&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7040&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8175&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0217&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3090&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 984ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2207&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3236&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.7035&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8163&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2207&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3236&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0939&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3424&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 261s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6778&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8236&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0939&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3424&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 948ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2614&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3048&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6627&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8261&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2614&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3048&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 964ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1499&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6598&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8281&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1499&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3466&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;77&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 955ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0080&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6407&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8349&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0080&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;78&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9263&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3779&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6510&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8344&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9263&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3779&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;79&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 16s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1673&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3570&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6200&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8320&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1673&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3570&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 924ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9761&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3841&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 254s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6182&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8349&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9761&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3841&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 952ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0217&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3653&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6103&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8404&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0217&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3653&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;82&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 951ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1091&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3695&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.6012&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8440&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1091&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3695&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;83&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 936ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3138&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5759&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8465&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3138&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 993ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2785&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 263s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5842&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8461&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2785&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 942ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4895&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3507&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5625&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8519&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4895&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3507&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 946ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0008&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3841&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5547&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8559&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.0008&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3841&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;87&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 924ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3086&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3591&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5477&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8593&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3086&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3591&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;88&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 932ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1903&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5408&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8590&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1903&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 983ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9609&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3925&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 262s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5284&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8569&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;3.9609&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3925&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 969ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3176&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3319&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5195&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8571&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3176&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3319&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3151&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4904&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8698&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3151&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;92&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 967ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1877&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 257s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5116&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8645&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.1877&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3612&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;93&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 982ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2800&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4985&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8670&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2800&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 923ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2524&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 256s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5113&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8652&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.2524&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 987ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3309&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4773&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8708&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3309&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3633&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;96&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 926ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3465&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 255s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4611&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8808&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3465&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 14s 925ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3581&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3820&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4688&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8735&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3581&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3820&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 990ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3597&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3779&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 260s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4677&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8754&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.3597&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3779&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 973ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.5483&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 258s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4481&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8826&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.5483&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="n"&gt;Epoch&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="sr"&gt;/15 [==============================] - 15s 971ms/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4849&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="sr"&gt;/250 [==============================] - 259s 1s/s&lt;/span&gt;&lt;span class="n"&gt;tep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4404&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8810&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;4.4849&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;val_categorical_accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.3674&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Save model performance in order to plot / compare later&lt;/span&gt;
&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savetxt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ImageClass_loss_history.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageClass_history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;delimiter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;savetxt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ImageClass_acc_history.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
              &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageClass_history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categorical_accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;delimiter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;strong&gt;Section 5: Image classification model Inference in VM before deploying to TX2&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The code below depicts the training run for the code provided above. The code base for both image classification (plant type) as well as binary classification (poison vs edible) is the same and won't be duplicated. The only differences between the two are the accuracy (categorical vs binary) - and the chosen optimum model. The following discussion details the training of an image classification model - followed by the binary model.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Visualize model performance&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="n"&gt;acc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;categorical_accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;val_acc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;val_categorical_accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;val_loss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_history&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;history&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;val_loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;epochs_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NUM_EPOCHS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epochs_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Training Accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epochs_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val_acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Validation Accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lower right&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Training and Validation Accuracy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epochs_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;loss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Training Loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;epochs_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val_loss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Validation Loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;upper right&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Training and Validation Loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_37_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The accuracy and loss plots above suggest that we are potentially over-fitting our model towards the training dataset. We can see that high accuracy is achieved in the image classification - which is typically hard given the number of classes we are trying to predict. After 100 epochs we are achieving &amp;gt;90% accuracy on the training set, but &amp;lt;40% accuracy on the validation set. Additionally, validation accuracy appears to have plateaued at this level.&lt;/p&gt;
&lt;p&gt;Similarly if we analyze the loss graph, we can see that loss is minimized for the validation dataset near 40 epochs and begins to rise - while the training loss continues to decrease. This structure was similar amongst the models that were analyzed using different layer and node architectures as well as activation functions. &lt;/p&gt;
&lt;p&gt;In the future we would like to:
- Change the dropout rate - perhaps 0.3 is too low and allows the deep model to over-fit
- Use larger datasets. Perhaps there is a feature contained within the image augmented photos that the model is fitting to - whereby the validation dataset doesn't have augmented photos. The purpose of image augmentation is to increase the training dataset size as well as improve model performance to a variety of photos. This will need further investigation to prove whether this assumption is true.&lt;/p&gt;
&lt;p&gt;It should be noted that our best performance was found when we enabled training on the base model layers (ResNet50). Presumably the residual layer architecture helped improve training inference above and beyond what the additional layers on top of the base model could provide. While this did impact training time on the VM (~36sec per epoch vs ~24 sec/epoch) the increase is marginal. Since training is done offline (only model inference at the edge needs to be performant) the tradeoff in training time vs accuracy is worthwhile. &lt;/p&gt;
&lt;p&gt;While this model can further be optimized in order to increase validation accuracy - we understand that image classification - especially given the dataset similarity (all pictures of plants), can be difficult. We have chosen to move forward with this model which is lean (only uses 2 dense layers on top of the ResNet50 base model). This should help with model performance on the edge device. Future work will continue to improve model performance while also retaining a small network size. &lt;/p&gt;
&lt;h3&gt;Save Model for deployment&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;imageClass_finetune_model&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;tensorflow.python.keras.engine.training.Model at 0x7facc022eef0&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;makedirs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exist_ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;imageClass_finetune_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./model/imageclass_model2.h5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;keras&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;  &lt;span class="nn"&gt;tensorflow.python.keras.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_model&lt;/span&gt;
&lt;span class="c1"&gt;# This line must be executed before loading Keras model.&lt;/span&gt;
&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_learning_phase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Using TensorFlow backend.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;imageClass_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./model/imageclass_model2.h5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;imageClass_model&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;tensorflow.python.keras.engine.training.Model at 0x7fd41c59eda0&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;imageClass_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;Layer (type)                    Output Shape         Param #     Connected to                     &lt;/span&gt;
&lt;span class="err"&gt;==================================================================================================&lt;/span&gt;
&lt;span class="err"&gt;input_1 (InputLayer)            (None, 300, 300, 3)  0                                            &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;conv1_pad (ZeroPadding2D)       (None, 306, 306, 3)  0           input_1[0][0]                    &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;conv1 (Conv2D)                  (None, 150, 150, 64) 9472        conv1_pad[0][0]                  &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn_conv1 (BatchNormalizationV1) (None, 150, 150, 64) 256         conv1[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation (Activation)         (None, 150, 150, 64) 0           bn_conv1[0][0]                   &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;pool1_pad (ZeroPadding2D)       (None, 152, 152, 64) 0           activation[0][0]                 &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;max_pooling2d (MaxPooling2D)    (None, 75, 75, 64)   0           pool1_pad[0][0]                  &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2a_branch2a (Conv2D)         (None, 75, 75, 64)   4160        max_pooling2d[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2a_branch2a (BatchNormalizati (None, 75, 75, 64)   256         res2a_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_1 (Activation)       (None, 75, 75, 64)   0           bn2a_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2a_branch2b (Conv2D)         (None, 75, 75, 64)   36928       activation_1[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2a_branch2b (BatchNormalizati (None, 75, 75, 64)   256         res2a_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_2 (Activation)       (None, 75, 75, 64)   0           bn2a_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2a_branch2c (Conv2D)         (None, 75, 75, 256)  16640       activation_2[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2a_branch1 (Conv2D)          (None, 75, 75, 256)  16640       max_pooling2d[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2a_branch2c (BatchNormalizati (None, 75, 75, 256)  1024        res2a_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2a_branch1 (BatchNormalizatio (None, 75, 75, 256)  1024        res2a_branch1[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add (Add)                       (None, 75, 75, 256)  0           bn2a_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 bn2a_branch1[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_3 (Activation)       (None, 75, 75, 256)  0           add[0][0]                        &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2b_branch2a (Conv2D)         (None, 75, 75, 64)   16448       activation_3[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2b_branch2a (BatchNormalizati (None, 75, 75, 64)   256         res2b_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_4 (Activation)       (None, 75, 75, 64)   0           bn2b_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2b_branch2b (Conv2D)         (None, 75, 75, 64)   36928       activation_4[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2b_branch2b (BatchNormalizati (None, 75, 75, 64)   256         res2b_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_5 (Activation)       (None, 75, 75, 64)   0           bn2b_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2b_branch2c (Conv2D)         (None, 75, 75, 256)  16640       activation_5[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2b_branch2c (BatchNormalizati (None, 75, 75, 256)  1024        res2b_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_1 (Add)                     (None, 75, 75, 256)  0           bn2b_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_3[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_6 (Activation)       (None, 75, 75, 256)  0           add_1[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2c_branch2a (Conv2D)         (None, 75, 75, 64)   16448       activation_6[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2c_branch2a (BatchNormalizati (None, 75, 75, 64)   256         res2c_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_7 (Activation)       (None, 75, 75, 64)   0           bn2c_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2c_branch2b (Conv2D)         (None, 75, 75, 64)   36928       activation_7[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2c_branch2b (BatchNormalizati (None, 75, 75, 64)   256         res2c_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_8 (Activation)       (None, 75, 75, 64)   0           bn2c_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res2c_branch2c (Conv2D)         (None, 75, 75, 256)  16640       activation_8[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn2c_branch2c (BatchNormalizati (None, 75, 75, 256)  1024        res2c_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_2 (Add)                     (None, 75, 75, 256)  0           bn2c_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_6[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_9 (Activation)       (None, 75, 75, 256)  0           add_2[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3a_branch2a (Conv2D)         (None, 38, 38, 128)  32896       activation_9[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3a_branch2a (BatchNormalizati (None, 38, 38, 128)  512         res3a_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_10 (Activation)      (None, 38, 38, 128)  0           bn3a_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3a_branch2b (Conv2D)         (None, 38, 38, 128)  147584      activation_10[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3a_branch2b (BatchNormalizati (None, 38, 38, 128)  512         res3a_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_11 (Activation)      (None, 38, 38, 128)  0           bn3a_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3a_branch2c (Conv2D)         (None, 38, 38, 512)  66048       activation_11[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3a_branch1 (Conv2D)          (None, 38, 38, 512)  131584      activation_9[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3a_branch2c (BatchNormalizati (None, 38, 38, 512)  2048        res3a_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3a_branch1 (BatchNormalizatio (None, 38, 38, 512)  2048        res3a_branch1[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_3 (Add)                     (None, 38, 38, 512)  0           bn3a_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 bn3a_branch1[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_12 (Activation)      (None, 38, 38, 512)  0           add_3[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3b_branch2a (Conv2D)         (None, 38, 38, 128)  65664       activation_12[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3b_branch2a (BatchNormalizati (None, 38, 38, 128)  512         res3b_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_13 (Activation)      (None, 38, 38, 128)  0           bn3b_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3b_branch2b (Conv2D)         (None, 38, 38, 128)  147584      activation_13[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3b_branch2b (BatchNormalizati (None, 38, 38, 128)  512         res3b_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_14 (Activation)      (None, 38, 38, 128)  0           bn3b_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3b_branch2c (Conv2D)         (None, 38, 38, 512)  66048       activation_14[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3b_branch2c (BatchNormalizati (None, 38, 38, 512)  2048        res3b_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_4 (Add)                     (None, 38, 38, 512)  0           bn3b_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_12[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_15 (Activation)      (None, 38, 38, 512)  0           add_4[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3c_branch2a (Conv2D)         (None, 38, 38, 128)  65664       activation_15[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3c_branch2a (BatchNormalizati (None, 38, 38, 128)  512         res3c_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_16 (Activation)      (None, 38, 38, 128)  0           bn3c_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3c_branch2b (Conv2D)         (None, 38, 38, 128)  147584      activation_16[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3c_branch2b (BatchNormalizati (None, 38, 38, 128)  512         res3c_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_17 (Activation)      (None, 38, 38, 128)  0           bn3c_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3c_branch2c (Conv2D)         (None, 38, 38, 512)  66048       activation_17[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3c_branch2c (BatchNormalizati (None, 38, 38, 512)  2048        res3c_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_5 (Add)                     (None, 38, 38, 512)  0           bn3c_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_15[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_18 (Activation)      (None, 38, 38, 512)  0           add_5[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3d_branch2a (Conv2D)         (None, 38, 38, 128)  65664       activation_18[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3d_branch2a (BatchNormalizati (None, 38, 38, 128)  512         res3d_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_19 (Activation)      (None, 38, 38, 128)  0           bn3d_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3d_branch2b (Conv2D)         (None, 38, 38, 128)  147584      activation_19[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3d_branch2b (BatchNormalizati (None, 38, 38, 128)  512         res3d_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_20 (Activation)      (None, 38, 38, 128)  0           bn3d_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res3d_branch2c (Conv2D)         (None, 38, 38, 512)  66048       activation_20[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn3d_branch2c (BatchNormalizati (None, 38, 38, 512)  2048        res3d_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_6 (Add)                     (None, 38, 38, 512)  0           bn3d_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_18[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_21 (Activation)      (None, 38, 38, 512)  0           add_6[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4a_branch2a (Conv2D)         (None, 19, 19, 256)  131328      activation_21[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4a_branch2a (BatchNormalizati (None, 19, 19, 256)  1024        res4a_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_22 (Activation)      (None, 19, 19, 256)  0           bn4a_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4a_branch2b (Conv2D)         (None, 19, 19, 256)  590080      activation_22[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4a_branch2b (BatchNormalizati (None, 19, 19, 256)  1024        res4a_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_23 (Activation)      (None, 19, 19, 256)  0           bn4a_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4a_branch2c (Conv2D)         (None, 19, 19, 1024) 263168      activation_23[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4a_branch1 (Conv2D)          (None, 19, 19, 1024) 525312      activation_21[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4a_branch2c (BatchNormalizati (None, 19, 19, 1024) 4096        res4a_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4a_branch1 (BatchNormalizatio (None, 19, 19, 1024) 4096        res4a_branch1[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_7 (Add)                     (None, 19, 19, 1024) 0           bn4a_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 bn4a_branch1[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_24 (Activation)      (None, 19, 19, 1024) 0           add_7[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4b_branch2a (Conv2D)         (None, 19, 19, 256)  262400      activation_24[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4b_branch2a (BatchNormalizati (None, 19, 19, 256)  1024        res4b_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_25 (Activation)      (None, 19, 19, 256)  0           bn4b_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4b_branch2b (Conv2D)         (None, 19, 19, 256)  590080      activation_25[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4b_branch2b (BatchNormalizati (None, 19, 19, 256)  1024        res4b_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_26 (Activation)      (None, 19, 19, 256)  0           bn4b_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4b_branch2c (Conv2D)         (None, 19, 19, 1024) 263168      activation_26[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4b_branch2c (BatchNormalizati (None, 19, 19, 1024) 4096        res4b_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_8 (Add)                     (None, 19, 19, 1024) 0           bn4b_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_24[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_27 (Activation)      (None, 19, 19, 1024) 0           add_8[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4c_branch2a (Conv2D)         (None, 19, 19, 256)  262400      activation_27[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4c_branch2a (BatchNormalizati (None, 19, 19, 256)  1024        res4c_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_28 (Activation)      (None, 19, 19, 256)  0           bn4c_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4c_branch2b (Conv2D)         (None, 19, 19, 256)  590080      activation_28[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4c_branch2b (BatchNormalizati (None, 19, 19, 256)  1024        res4c_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_29 (Activation)      (None, 19, 19, 256)  0           bn4c_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4c_branch2c (Conv2D)         (None, 19, 19, 1024) 263168      activation_29[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4c_branch2c (BatchNormalizati (None, 19, 19, 1024) 4096        res4c_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_9 (Add)                     (None, 19, 19, 1024) 0           bn4c_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_27[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_30 (Activation)      (None, 19, 19, 1024) 0           add_9[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4d_branch2a (Conv2D)         (None, 19, 19, 256)  262400      activation_30[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4d_branch2a (BatchNormalizati (None, 19, 19, 256)  1024        res4d_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_31 (Activation)      (None, 19, 19, 256)  0           bn4d_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4d_branch2b (Conv2D)         (None, 19, 19, 256)  590080      activation_31[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4d_branch2b (BatchNormalizati (None, 19, 19, 256)  1024        res4d_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_32 (Activation)      (None, 19, 19, 256)  0           bn4d_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4d_branch2c (Conv2D)         (None, 19, 19, 1024) 263168      activation_32[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4d_branch2c (BatchNormalizati (None, 19, 19, 1024) 4096        res4d_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_10 (Add)                    (None, 19, 19, 1024) 0           bn4d_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_30[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_33 (Activation)      (None, 19, 19, 1024) 0           add_10[0][0]                     &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4e_branch2a (Conv2D)         (None, 19, 19, 256)  262400      activation_33[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4e_branch2a (BatchNormalizati (None, 19, 19, 256)  1024        res4e_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_34 (Activation)      (None, 19, 19, 256)  0           bn4e_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4e_branch2b (Conv2D)         (None, 19, 19, 256)  590080      activation_34[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4e_branch2b (BatchNormalizati (None, 19, 19, 256)  1024        res4e_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_35 (Activation)      (None, 19, 19, 256)  0           bn4e_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4e_branch2c (Conv2D)         (None, 19, 19, 1024) 263168      activation_35[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4e_branch2c (BatchNormalizati (None, 19, 19, 1024) 4096        res4e_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_11 (Add)                    (None, 19, 19, 1024) 0           bn4e_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_33[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_36 (Activation)      (None, 19, 19, 1024) 0           add_11[0][0]                     &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4f_branch2a (Conv2D)         (None, 19, 19, 256)  262400      activation_36[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4f_branch2a (BatchNormalizati (None, 19, 19, 256)  1024        res4f_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_37 (Activation)      (None, 19, 19, 256)  0           bn4f_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4f_branch2b (Conv2D)         (None, 19, 19, 256)  590080      activation_37[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4f_branch2b (BatchNormalizati (None, 19, 19, 256)  1024        res4f_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_38 (Activation)      (None, 19, 19, 256)  0           bn4f_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res4f_branch2c (Conv2D)         (None, 19, 19, 1024) 263168      activation_38[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn4f_branch2c (BatchNormalizati (None, 19, 19, 1024) 4096        res4f_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_12 (Add)                    (None, 19, 19, 1024) 0           bn4f_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_36[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_39 (Activation)      (None, 19, 19, 1024) 0           add_12[0][0]                     &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5a_branch2a (Conv2D)         (None, 10, 10, 512)  524800      activation_39[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5a_branch2a (BatchNormalizati (None, 10, 10, 512)  2048        res5a_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_40 (Activation)      (None, 10, 10, 512)  0           bn5a_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5a_branch2b (Conv2D)         (None, 10, 10, 512)  2359808     activation_40[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5a_branch2b (BatchNormalizati (None, 10, 10, 512)  2048        res5a_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_41 (Activation)      (None, 10, 10, 512)  0           bn5a_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5a_branch2c (Conv2D)         (None, 10, 10, 2048) 1050624     activation_41[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5a_branch1 (Conv2D)          (None, 10, 10, 2048) 2099200     activation_39[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5a_branch2c (BatchNormalizati (None, 10, 10, 2048) 8192        res5a_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5a_branch1 (BatchNormalizatio (None, 10, 10, 2048) 8192        res5a_branch1[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_13 (Add)                    (None, 10, 10, 2048) 0           bn5a_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 bn5a_branch1[0][0]               &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_42 (Activation)      (None, 10, 10, 2048) 0           add_13[0][0]                     &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5b_branch2a (Conv2D)         (None, 10, 10, 512)  1049088     activation_42[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5b_branch2a (BatchNormalizati (None, 10, 10, 512)  2048        res5b_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_43 (Activation)      (None, 10, 10, 512)  0           bn5b_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5b_branch2b (Conv2D)         (None, 10, 10, 512)  2359808     activation_43[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5b_branch2b (BatchNormalizati (None, 10, 10, 512)  2048        res5b_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_44 (Activation)      (None, 10, 10, 512)  0           bn5b_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5b_branch2c (Conv2D)         (None, 10, 10, 2048) 1050624     activation_44[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5b_branch2c (BatchNormalizati (None, 10, 10, 2048) 8192        res5b_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_14 (Add)                    (None, 10, 10, 2048) 0           bn5b_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_42[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_45 (Activation)      (None, 10, 10, 2048) 0           add_14[0][0]                     &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5c_branch2a (Conv2D)         (None, 10, 10, 512)  1049088     activation_45[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5c_branch2a (BatchNormalizati (None, 10, 10, 512)  2048        res5c_branch2a[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_46 (Activation)      (None, 10, 10, 512)  0           bn5c_branch2a[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5c_branch2b (Conv2D)         (None, 10, 10, 512)  2359808     activation_46[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5c_branch2b (BatchNormalizati (None, 10, 10, 512)  2048        res5c_branch2b[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_47 (Activation)      (None, 10, 10, 512)  0           bn5c_branch2b[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;res5c_branch2c (Conv2D)         (None, 10, 10, 2048) 1050624     activation_47[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;bn5c_branch2c (BatchNormalizati (None, 10, 10, 2048) 8192        res5c_branch2c[0][0]             &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;add_15 (Add)                    (None, 10, 10, 2048) 0           bn5c_branch2c[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;                                                                 activation_45[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;activation_48 (Activation)      (None, 10, 10, 2048) 0           add_15[0][0]                     &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;flatten (Flatten)               (None, 204800)       0           activation_48[0][0]              &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;dense (Dense)                   (None, 128)          26214528    flatten[0][0]                    &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;dropout (Dropout)               (None, 128)          0           dense[0][0]                      &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;dense_1 (Dense)                 (None, 32)           4128        dropout[0][0]                    &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;dropout_1 (Dropout)             (None, 32)           0           dense_1[0][0]                    &lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;span class="err"&gt;dense_2 (Dense)                 (None, 70)           2310        dropout_1[0][0]                  &lt;/span&gt;
&lt;span class="err"&gt;==================================================================================================&lt;/span&gt;
&lt;span class="err"&gt;Total params: 49,808,678&lt;/span&gt;
&lt;span class="err"&gt;Trainable params: 49,755,558&lt;/span&gt;
&lt;span class="err"&gt;Non-trainable params: 53,120&lt;/span&gt;
&lt;span class="err"&gt;__________________________________________________________________________________________________&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see that, even though we chose ResNet50 as the base model due to its size - there are still a number of parameters that are contained within our overall model (the model summariezed above allows training on many of the ResNet50 layers as this gave better accuracy). In the inference section we will detail model performance both with and without TensorRT optimization and show how a large model such as the one depicted above can be difficult on the resources provided at the edge.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageClass_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imageClass_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[&amp;lt;tf.Tensor &amp;#39;input_1_1:0&amp;#39; shape=(?, 300, 300, 3) dtype=float32&amp;gt;]&lt;/span&gt;
&lt;span class="k"&gt;[&amp;lt;tf.Tensor &amp;#39;dense_2_1/Softmax:0&amp;#39; shape=(?, 70) dtype=float32&amp;gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="c1"&gt;#labels_path = tf.keras.utils.get_file(&amp;#39;cats_dogs_labels.txt&amp;#39;,&amp;#39;http://localhost:8888/edit/cats_dogs/cats_dogs_labels.txt&amp;#39;)&lt;/span&gt;
&lt;span class="n"&gt;labels_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Plant_Class_Labels.txt&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;class_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;class_labels&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;array([&amp;#39;Alfalfa&amp;#39;, &amp;#39;Asparagus&amp;#39;, &amp;#39;Blue_Vervain&amp;#39;, &amp;#39;Broadleaf_Plantain&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Bull_Thistle&amp;#39;, &amp;#39;castor_oil_plant&amp;#39;, &amp;#39;Cattail&amp;#39;, &amp;#39;Chickweed&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Chicory&amp;#39;, &amp;#39;Cleavers&amp;#39;, &amp;#39;Coltsfoot&amp;#39;, &amp;#39;Common_Sow_Thistle&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Common_Yarrow&amp;#39;, &amp;#39;Coneflower&amp;#39;, &amp;#39;Creeping_Charlie&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Crimson_Clover&amp;#39;, &amp;#39;Curly_Dock&amp;#39;, &amp;#39;Daisy_Fleabane&amp;#39;, &amp;#39;Dandellion&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;dieffenbachia&amp;#39;, &amp;#39;Downy_Yellow_Violet&amp;#39;, &amp;#39;Elderberry&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Evening_Primrose&amp;#39;, &amp;#39;Fern_Leaf_Yarrow&amp;#39;, &amp;#39;Field_Pennycress&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Fireweed&amp;#39;, &amp;#39;Forget_Me_Not&amp;#39;, &amp;#39;foxglove&amp;#39;, &amp;#39;Garlic_Mustard&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Harebell&amp;#39;, &amp;#39;Henbit&amp;#39;, &amp;#39;Herb_Robert&amp;#39;, &amp;#39;Japanese_Knotweed&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Joe_Pye_Weed&amp;#39;, &amp;#39;Knapweed&amp;#39;, &amp;#39;Kudzu&amp;#39;, &amp;#39;Lambs_Quarters&amp;#39;, &amp;#39;lilies&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;lily_of_the_valley&amp;#39;, &amp;#39;Mallow&amp;#39;, &amp;#39;Mayapple&amp;#39;, &amp;#39;Meadowsweet&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Milk_Thistle&amp;#39;, &amp;#39;Mullein&amp;#39;, &amp;#39;New_England_Aster&amp;#39;, &amp;#39;oleander&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Partridgeberry&amp;#39;, &amp;#39;Peppergrass&amp;#39;, &amp;#39;Pickerelweed&amp;#39;, &amp;#39;Pineapple_Weed&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Prickly_Pear_Cactus&amp;#39;, &amp;#39;Purple_Deadnettle&amp;#39;, &amp;#39;Queen_Annes_Lace&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Red_Clover&amp;#39;, &amp;#39;rhubarb&amp;#39;, &amp;#39;Sheep_Sorrel&amp;#39;, &amp;#39;Shepherds_Purse&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Spring_Beauty&amp;#39;, &amp;#39;Sunflower&amp;#39;, &amp;#39;Supplejack_Vine&amp;#39;, &amp;#39;Tea_Plant&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Teasel&amp;#39;, &amp;#39;Toothwort&amp;#39;, &amp;#39;Vervain_Mallow&amp;#39;, &amp;#39;Wild_Bee_Balm&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Wild_Black_Cherry&amp;#39;, &amp;#39;Wild_Grape_Vine&amp;#39;, &amp;#39;Wild_Leek&amp;#39;, &amp;#39;wisteria&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Wood_Sorrel&amp;#39;], dtype=&amp;#39;&amp;lt;U19&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.keras.preprocessing.image&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;
&lt;span class="n"&gt;IMAGECLASS_TEST_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;image_generator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ImageDataGenerator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rescale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;image_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;image_generator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flow_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;IMAGECLASS_TEST_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                 &lt;span class="n"&gt;target_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HEIGHT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;WIDTH&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Found 157 images belonging to 70 classes.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;image_batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label_batch&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;image_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Image batch shape: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image_batch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Label batch shape: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label_batch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Image batch shape:  (32, 300, 300, 3)&lt;/span&gt;
&lt;span class="err"&gt;Label batch shape:  (32, 70)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;result_batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;imageClass_model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_batch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;result_batch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;(32, 70)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;predicted_class_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;class_labels&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result_batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;predicted_class_names&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;array([&amp;#39;Vervain_Mallow&amp;#39;, &amp;#39;Daisy_Fleabane&amp;#39;, &amp;#39;Purple_Deadnettle&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Wild_Bee_Balm&amp;#39;, &amp;#39;lilies&amp;#39;, &amp;#39;Vervain_Mallow&amp;#39;, &amp;#39;Daisy_Fleabane&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Knapweed&amp;#39;, &amp;#39;Red_Clover&amp;#39;, &amp;#39;Toothwort&amp;#39;, &amp;#39;Meadowsweet&amp;#39;, &amp;#39;Knapweed&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;rhubarb&amp;#39;, &amp;#39;Common_Sow_Thistle&amp;#39;, &amp;#39;Alfalfa&amp;#39;, &amp;#39;Wild_Leek&amp;#39;, &amp;#39;Alfalfa&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Elderberry&amp;#39;, &amp;#39;Wild_Bee_Balm&amp;#39;, &amp;#39;Fern_Leaf_Yarrow&amp;#39;, &amp;#39;Spring_Beauty&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Mallow&amp;#39;, &amp;#39;Wild_Bee_Balm&amp;#39;, &amp;#39;Asparagus&amp;#39;, &amp;#39;Joe_Pye_Weed&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;Joe_Pye_Weed&amp;#39;, &amp;#39;Curly_Dock&amp;#39;, &amp;#39;Wood_Sorrel&amp;#39;, &amp;#39;Field_Pennycress&amp;#39;,&lt;/span&gt;
&lt;span class="err"&gt;       &amp;#39;dieffenbachia&amp;#39;, &amp;#39;Wood_Sorrel&amp;#39;, &amp;#39;Herb_Robert&amp;#39;], dtype=&amp;#39;&amp;lt;U19&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots_adjust&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hspace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_batch&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted_class_names&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;off&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;suptitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ImageNet predictions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/output_53_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In general many of the predicted image labels were correct. As can be seen above - the nuances in plant images in order to assign a class from over 70 total classes is a difficult problem. While our training accuracy gave good results - further model development will be needed in order to improve validation accuracy. &lt;/p&gt;
&lt;p&gt;As stated in the introduction - we understood that image classification was likely a difficult problem to obtain high accuracy. While it is optimal to have the specific plant species depicted in the photo (in order to not only obtain edible/poison information - but also plant background/and other facts), we also need to optimize the solution of whether the plant is edible or poisonous. Having &amp;lt;40% accuracy on the validation datset does not lend enoguh confidence to utlize the model at the edge if debating to eat a plant based on the model prediction. &lt;/p&gt;
&lt;p&gt;We therefore developed another model (binary model) in order to obtain higher accuracy to provide confidence to the user whether or not a plant is edible or poisonous. &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Section 6: Binary Poison Detection Model Analysis&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;While having the ability to reveal plant identification via image classification provides a richer context of the plant background (name, species, description, etc) - we have seen that the model cannot predict with a high accuracy (&amp;gt;90%) whether or not a plant is poisonous. From a users perspective, this lack of confidence likely isn't worthwhile to utilize the model as the consequences of a wrong prediction are severe. &lt;/p&gt;
&lt;p&gt;In addition to the image classification problem described above we also explored whether or not features contained in the images of poisonous and edible plants could be extracted in order to predict whether or not a plant was poisonous (without regard to the specific species or genome of the plant). We similarly started with ResNet50 as this provides a good starting point for model architecture as well as the image classification problem. &lt;/p&gt;
&lt;p&gt;Similar to image classification - we attempted different model architectures in order to obtain the best performing model. In the first iteration of model performance we examined:
- Training on an imbalanced training set (remember we have &amp;gt;6k images of edible plants and only 410 of poisonous plants)
- Using image augmentation on the poisonous plants dataset in order to balance the training dataset
- Different model depths (baseline model contains layers with [128,64,32,16] nodes). Expanded to six different layers containing up to 1024 nodes. All layers were Dense in the original round of training
- Changing dropout rate - generally performed worse (perhaps needed longer training time) - performance not shown below
- Different activation functions (specifically tanh) 
- Training the entire model (including the ResNet50 base model)
- Different layer architecture (Dense, CNN, Pooling, Residual)&lt;/p&gt;
&lt;p&gt;Depicted below is the performance of these different training episodes:
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Binary_Accuracy.JPG" alt="Drawing" style="width: 500px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p&gt;In the legend, equal infers the training set is balanced, tanh refers to a different activation function (default was relu), trainentiremodel refers to un-freezing the base ResNet50 model for training. As can be seen, while certain model architecture changes did impact performance in the earlier training epochs - the best performing model by far was the model that trained all layers (including ResNet50) as well as having additional dense layers above. Presumably this showcases the improved accuracy that the residual layers have in terms of the image classification/detection problem over and above a series of dense layers. &lt;/p&gt;
&lt;p&gt;Surprisingly training the entire model did not have a large effect on training time. For 100 epochs training on only the dense layers we averaged 24sec per epoch training on a P100 GPU with a batch size of 64. When expanding and training on the entire model our average epoch time was 32sec. &lt;/p&gt;
&lt;p&gt;In terms of other model performance - there wasn't very much of a performance boost by equalizing the dataset. The blue and green lines show approximately similar performance across the training epochs. This is likely due to the image augmentation that's already taking place during training in order to increase our total image size to 15,000. Increasing the depth of the model didn't show significant model performance improvement. This may be due to a small change in overall model architecture - moving from a layer configuration of [128,64,32,16] to [512,256,128,64,32,16]. This also may be due to the aforementioned degradation problem with deeper networks. &lt;/p&gt;
&lt;p&gt;In order to explore different layer architectures - we also varied the types of layers as depicted below. Dense, CNN and Residual layers were all tested. During the early training periods we noticed that these different types of architectures likely required longer training periods to infer the appropriate weights. We therefore expanded our analysis to 500 epochs. &lt;/p&gt;
&lt;p&gt;As the training periods depicted above plateaued around 96% accuracy, we wanted to analyze whether different layers could produce better results. We attempted three different model architectures on top of the base ResNet50 model: 
- Dense layers: similar to what has previously been trained
- CNN layer with Pooling: has been shown to be useful for image classification and detection problems
- Residual layers (2): this is the model architecture for ResNet50 - we wanted to determine if a similar architecture would help improve model performance&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Binary_Accuracy_ModelLayer.JPG" alt="Drawing" style="width: 350px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Binary_Precision_ModelLayer.JPG" alt="Drawing" style="width: 350px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Binary_Recall_ModelLayer.JPG" alt="Drawing" style="width: 350px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;As previously mentioned, accuracy isn't the only metric in which we need to track for the binary detection problem. While a accuracy of 100% would be phenomenal, it isn't likely. However we also need to be cognizant that a model that can predict 100% of the time correctly when there is a poisonous plant is very important. This is because the consequences of predicting a plant is poisonous when it isn't (false positive) is much less severe than predicting a plant is edible when it's poisonous (false negative). We therefore also track recall, precision and F1 scores. Of these scores recall is likely the most important since it tracks true positives vs the number of poisonous plants in the dataset. &lt;/p&gt;
&lt;p&gt;The graphs above depict accuracy, precision and recall in that order. In general all three match each other. From the plots we can see that CNN was the best performing model. The model that trained the entire ResNet50 along with two additional Residual layers may have outperformed - however the training time was significantly longer for this model. &lt;/p&gt;
&lt;p&gt;During validation testing we noted that overall performance was lower for many models compared to training accuracy ~50-85% compared to &amp;gt;90% on all models for training. This may be a consequence of over-fitting the model. We therefore attempted to train with a higher dropout (0.7 vs 0.3). As can be seen in the plots above this caused the model to fail to improve - perhaps because there was too much dropout. Further iterations would include refining the choice of dropout hyperparameter. Below is depicted a confusion matrix based on the final binary model: &lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/ConfusionMatrix.JPG" alt="Drawing" style="width: 500px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;We can see that overall performance on the validation dataset is fairly good (accuracy 97.5% and recall 100%). The biggest benefit is the recall is 100% - so in no case did the model predict an edible plant when it was in fact poisonous. &lt;/p&gt;
&lt;p&gt;While training it was noted that the best performing model in terms of training and validation accuracy &amp;amp; recall was using the model that enabled training for all layers and included an additional CNN + pooling layer, coupled with 4 additional dense layers. Future work may iterate over different nuanced design choices to develop the best performing model with the smallest footprint. This would not only hopefully help improve accuracy and recall - but also improve inference time and resources on the edge device. &lt;/p&gt;
&lt;p&gt;While this model architecutre is fairly large - we will use TensorRT in order to reduce the model size and improve inference. This is detailed in the sections below. &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Section 7: Inference on TX2 (Edge Device)&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Initially we wanted to see whether inference is possible on an edge device. We utilized a TX2 - which is more powerful than a typical edge device (smartphone / etc). When loading the model and attempting to make inference we found that most models wouldn't even load to memory. The larger model (detailed above with CNN and dense layers) frequently gave OOM errors indicating this model (without the benefit of TensorRT isn't applicable for edge devices). When the models would load we would frequently see nearly 100% memory utilization as depicted below:&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/Memory_Inference2.png" alt="Drawing" style="width: 500px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;It is therefore important that we utilize TensorRT in order to improve model performance on lower powered edge devices. &lt;/p&gt;
&lt;h3&gt;TensorRT vs TensorFlow&lt;/h3&gt;
&lt;p&gt;In order to get the best inference performance on TX2, we utilized the TensorRT.&lt;/p&gt;
&lt;p&gt;TensorRT is a platform that optimizes neural network models and speeds up for inference across GPU-accelerated platforms. It optimizes the neural network by the following way 1) eliminate the unused output layers to save the computation. 2) fuse the convolution layer, Relu layer and bias as one single layer 3) Aggregate the layers horizontally. It also leverages FP16 precision to lower the memory requirement on the GPU. It can go further to INT8 but it requires more calibartion when convert/freeze the model in TensorFlow while the precision is still FP32. For this exercise, we plan to use FP16. Others worth mentioning: better integrate with TensorFlow 2.0 (our model is under TensorFlow 1.x) and TensorBoard. And it only optimized from a freeze inteference graph. &lt;/p&gt;
&lt;p&gt;The benchmark on ResNet50 is that TensorRT is 8x faster than TensorFlow on interference.&lt;/p&gt;
&lt;h3&gt;Convert Keras model to TensorFlow PB file&lt;/h3&gt;
&lt;p&gt;As first step, We will need to convert Keras model(.h5) to tensorflow pb file. at same time freeze the graph so that TensorRT can use that. The graph is a plan to excute the computation which covers varibles and connections.&lt;/p&gt;
&lt;p&gt;Then we will be able to save the freeze model into PB file so that model can be loaded in TX2. The overall structure is detailed in the image below: 
&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/edibleplants/tensorrt.JPG" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load model from .h5 file and convert to Tensorflow&lt;/span&gt;
&lt;span class="c1"&gt;# Adapted from https://github.com/ardianumam/Tensorflow-TensorRT&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;keras&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;
&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_learning_phase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;possible_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;possible_positives&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;recall&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;predicted_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;precision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted_positives&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;precision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;precision_m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recall_m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;fbeta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;precision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;precision_m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;recall_m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recall_m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;possible_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;possible_positives&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;recall&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;precision_m&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_true&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;predicted_positives&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;precision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true_positives&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predicted_positives&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;epsilon&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;

&lt;span class="c1"&gt;# Load model without TensorRT improvement&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;keras.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_model&lt;/span&gt;
&lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./model_params/binary_equal_trainentiremodel_50kimage_300epoch_model_weights.h5&amp;#39;&lt;/span&gt; 

&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;custom_objects&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;precision&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;recall&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fbeta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;fbeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                            &lt;span class="s1"&gt;&amp;#39;precision_m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;precision_m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;recall_m&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;recall_m&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;model_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Logging&lt;/span&gt; &lt;span class="k"&gt;before&lt;/span&gt; &lt;span class="n"&gt;flag&lt;/span&gt; &lt;span class="n"&gt;parsing&lt;/span&gt; &lt;span class="n"&gt;goes&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;527824&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;541&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;placeholder&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;placeholder&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;644511&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4479&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truncated_normal&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truncated_normal&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;770972&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_graph&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_graph&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;774623&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;190&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_session&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_default_session&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;777615&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;197&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigProto&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigProto&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;494961&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2041&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fused_batch_norm&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fused_batch_norm&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;51&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;732384&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4267&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_pool&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_pool2d&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;064690&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;506&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow_backend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3733&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calling&lt;/span&gt; &lt;span class="nf"&gt;dropout&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nn_ops&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;keep_prob&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="ss"&gt;`rate`&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="ss"&gt;`keep_prob`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Rate&lt;/span&gt; &lt;span class="n"&gt;should&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="kt"&gt;set&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="ss"&gt;`rate = 1 - keep_prob`&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;412646&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation_wrapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;keras&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;optimizers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;793&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Optimizer&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Optimizer&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;449203&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nn_impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;add_dispatch_support&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;locals&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;wrapper&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array_ops&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;same&lt;/span&gt; &lt;span class="n"&gt;broadcast&lt;/span&gt; &lt;span class="n"&gt;rule&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;





&lt;span class="s1"&gt;&amp;#39;binary_equal_trainentiremodel_50kimage_300epoch_model_weights&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Convert keras model to Tensorflow and Save Frozen Graph&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# import the needed libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.contrib.tensorrt&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;trt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.python.platform&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;gfile&lt;/span&gt;


&lt;span class="n"&gt;output_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_15/Softmax&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;input_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;input_2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;freeze_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;keep_var_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;clear_devices&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Freezes the state of a session into a pruned computation graph.&lt;/span&gt;

&lt;span class="sd"&gt;    Creates a new computation graph where variable nodes are replaced by&lt;/span&gt;
&lt;span class="sd"&gt;    constants taking their current value in the session. The new graph will be&lt;/span&gt;
&lt;span class="sd"&gt;    pruned so subgraphs that are not necessary to compute the requested&lt;/span&gt;
&lt;span class="sd"&gt;    outputs are removed.&lt;/span&gt;
&lt;span class="sd"&gt;    @param session The TensorFlow session to be frozen.&lt;/span&gt;
&lt;span class="sd"&gt;    @param keep_var_names A list of variable names that should not be frozen,&lt;/span&gt;
&lt;span class="sd"&gt;                          or None to freeze all the variables in the graph.&lt;/span&gt;
&lt;span class="sd"&gt;    @param output_names Names of the relevant graph outputs.&lt;/span&gt;
&lt;span class="sd"&gt;    @param clear_devices Remove the device directives from the graph for better portability.&lt;/span&gt;
&lt;span class="sd"&gt;    @return The frozen graph definition.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_default&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;freeze_var_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;global_variables&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;difference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keep_var_names&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;[]))&lt;/span&gt;
        &lt;span class="n"&gt;output_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output_names&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="n"&gt;output_names&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;global_variables&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
        &lt;span class="n"&gt;input_graph_def&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_graph_def&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;clear_devices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;input_graph_def&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;frozen_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph_util&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_variables_to_constants&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_graph_def&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;freeze_var_names&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;frozen_graph&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;keras&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;backend&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;K&lt;/span&gt;

&lt;span class="c1"&gt;# Create, compile and train model...&lt;/span&gt;

&lt;span class="n"&gt;frozen_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;freeze_session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_session&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
                              &lt;span class="n"&gt;output_names&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write_graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frozen_graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;../../model_params&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;frozen_&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.pb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;866091&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;e01e96d2692&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;convert_variables_to_constants&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;framework&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph_util_impl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="k"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph_util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_variables_to_constants&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;874302&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;usr&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;local&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;framework&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;graph_util_impl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;extract_sub_graph&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;framework&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph_util_impl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="k"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph_util&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extract_sub_graph&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;





&lt;span class="s1"&gt;&amp;#39;../../model_params/frozen_binary_equal_trainentiremodel_50kimage_300epoch_model_weights.pb&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Optimize Using TensorRT&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.contrib.tensorrt&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;trt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.python.platform&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;gfile&lt;/span&gt;

&lt;span class="n"&gt;your_outputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;# convert (optimize) frozen model to TensorRT model&lt;/span&gt;
&lt;span class="n"&gt;trt_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_inference_graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;input_graph_def&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;frozen_graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# frozen model&lt;/span&gt;
    &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;your_outputs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;max_batch_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="c1"&gt;# specify your max batch size&lt;/span&gt;
    &lt;span class="n"&gt;max_workspace_size_bytes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="c1"&gt;# specify the max workspace&lt;/span&gt;
    &lt;span class="n"&gt;precision_mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FP32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# precision, can be &amp;quot;FP32&amp;quot; (32 floating point precision) or &amp;quot;FP16&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#write the TensorRT model to be used later for inference&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FastGFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../../model_params/tensort_&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.pb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trt_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SerializeToString&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TensorRT model is successfully stored!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;W1209&lt;/span&gt; &lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;449128&lt;/span&gt; &lt;span class="mi"&gt;548146294800&lt;/span&gt; &lt;span class="n"&gt;deprecation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;323&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cc4bab4a24b5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;FastGFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;tensorflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;platform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="k"&gt;version&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Instructions&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;updating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gfile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;


&lt;span class="n"&gt;TensorRT&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt; &lt;span class="n"&gt;stored&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Compare Models&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# check how many ops of the original frozen model&lt;/span&gt;
&lt;span class="n"&gt;all_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;frozen_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numb. of all_nodes in frozen graph:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;all_nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# check how many ops that is converted to TensorRT engine&lt;/span&gt;
&lt;span class="n"&gt;trt_engine_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;trt_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;TRTEngineOp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numb. of trt_engine_nodes in TensorRT graph:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trt_engine_nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;all_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;trt_graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;numb. of all_nodes in TensorRT graph:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;all_nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;numb. of all_nodes in frozen graph: 2475&lt;/span&gt;
&lt;span class="err"&gt;numb. of trt_engine_nodes in TensorRT graph: 59&lt;/span&gt;
&lt;span class="err"&gt;numb. of all_nodes in TensorRT graph: 990&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above we can see that the model structure is smaller by utilizing tensorrt. This will help improve inference time on the edge device. &lt;/p&gt;
&lt;h3&gt;Inference on TX2&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# import the needed libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;tf&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.contrib.tensorrt&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;trt&lt;/span&gt; &lt;span class="c1"&gt;# must import this although we will not use it explicitly&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;tensorflow.python.platform&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;gfile&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;keras.preprocessing.image&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_img&lt;/span&gt;

&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_img&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;roasted-asparagus-horiz-a-1600.jpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;target_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;input_img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expand_dims&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# function to read a &amp;quot;.pb&amp;quot; model &lt;/span&gt;
&lt;span class="c1"&gt;# (can be used to read frozen model or TensorRT model)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_pb_graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;gfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FastGFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;graph_def&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GraphDef&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;graph_def&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParseFromString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;graph_def&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;TensorRT Model&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# variable&lt;/span&gt;
&lt;span class="n"&gt;TENSORRT_MODEL_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;model_params/tensort_&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.pb&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_default&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigProto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gpu_options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GPUOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;per_process_gpu_memory_fraction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.50&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# read TensorRT model&lt;/span&gt;
        &lt;span class="n"&gt;trt_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_pb_graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TENSORRT_MODEL_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# obtain the corresponding input-output tensor&lt;/span&gt;
        &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;import_graph_def&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trt_graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tensor_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;input_1:0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tensor_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_10/Softmax:0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# in this case, it demonstrates to perform inference for 50 times&lt;/span&gt;
        &lt;span class="n"&gt;total_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n_time_inference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
        &lt;span class="n"&gt;out_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feed_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;input_img&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_time_inference&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;out_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feed_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;input_img&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;delta_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
            &lt;span class="n"&gt;total_time&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;delta_time&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;needed time in inference-&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;delta_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;avg_time_tensorRT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total_time&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;n_time_inference&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;average inference time: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avg_time_tensorRT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;needed time in inference-0:  0.27154040336608887&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-1:  0.12302851676940918&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-2:  0.11561846733093262&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-3:  0.11101841926574707&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-4:  0.1113739013671875&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-5:  0.11808514595031738&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-6:  0.11187052726745605&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-7:  0.11685538291931152&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-8:  0.10785388946533203&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-9:  0.0915677547454834&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-10:  0.11743283271789551&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-11:  0.11315226554870605&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-12:  0.11051702499389648&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-13:  0.10962986946105957&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-14:  0.11177444458007812&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-15:  0.11580991744995117&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-16:  0.1156463623046875&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-17:  0.1150197982788086&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-18:  0.11693429946899414&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-19:  0.10866832733154297&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-20:  0.11803007125854492&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-21:  0.11182045936584473&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-22:  0.11361956596374512&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-23:  0.10678911209106445&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-24:  0.11087584495544434&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-25:  0.10926699638366699&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-26:  0.1163034439086914&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-27:  0.11024737358093262&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-28:  0.11595368385314941&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-29:  0.11124372482299805&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-30:  0.11583399772644043&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-31:  0.11264348030090332&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-32:  0.10711812973022461&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-33:  0.10518836975097656&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-34:  0.11161422729492188&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-35:  0.11660170555114746&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-36:  0.12221097946166992&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-37:  0.11357808113098145&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-38:  0.1165313720703125&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-39:  0.11625814437866211&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-40:  0.11170506477355957&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-41:  0.12175679206848145&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-42:  0.11755537986755371&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-43:  0.11252164840698242&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-44:  0.11235952377319336&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-45:  0.11363649368286133&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-46:  0.11793255805969238&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-47:  0.1100304126739502&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-48:  0.11511778831481934&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-49:  0.11052775382995605&lt;/span&gt;
&lt;span class="err"&gt;average inference time:  0.11636539459228516&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Non Optimized Model&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# variable&lt;/span&gt;
&lt;span class="n"&gt;FROZEN_MODEL_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;model_params/frozen_&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.pb&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Graph&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_default&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# read TensorRT model&lt;/span&gt;
        &lt;span class="n"&gt;frozen_graph&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_pb_graph&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FROZEN_MODEL_PATH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# obtain the corresponding input-output tensor&lt;/span&gt;
        &lt;span class="n"&gt;tf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;import_graph_def&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;frozen_graph&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tensor_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;input_1:0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;graph&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_tensor_by_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dense_10/Softmax:0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# in this case, it demonstrates to perform inference for 50 times&lt;/span&gt;
        &lt;span class="n"&gt;total_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;n_time_inference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
        &lt;span class="n"&gt;out_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feed_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;input_img&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_time_inference&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;out_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feed_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;input_img&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;delta_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;
            &lt;span class="n"&gt;total_time&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;delta_time&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;needed time in inference-&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;delta_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;avg_time_original_model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;total_time&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;n_time_inference&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;average inference time: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avg_time_original_model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TensorRT improvement compared to the original model:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;avg_time_original_model&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;avg_time_tensorRT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;needed time in inference-0:  0.2708280086517334&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-1:  0.14234304428100586&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-2:  0.15391850471496582&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-3:  0.1341855525970459&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-4:  0.18431854248046875&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-5:  0.15240883827209473&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-6:  0.13216447830200195&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-7:  0.13918542861938477&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-8:  0.13611197471618652&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-9:  0.310025691986084&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-10:  0.13527488708496094&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-11:  0.13274240493774414&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-12:  0.13806581497192383&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-13:  0.13801264762878418&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-14:  0.13357114791870117&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-15:  0.13676691055297852&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-16:  0.13688015937805176&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-17:  0.13867568969726562&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-18:  0.14066481590270996&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-19:  0.13436508178710938&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-20:  0.13262057304382324&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-21:  0.1535184383392334&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-22:  0.13952279090881348&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-23:  0.16269540786743164&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-24:  0.14333367347717285&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-25:  0.14168095588684082&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-26:  0.1430208683013916&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-27:  0.1438302993774414&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-28:  0.1404411792755127&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-29:  0.14186882972717285&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-30:  0.14541316032409668&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-31:  0.14401459693908691&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-32:  0.13475871086120605&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-33:  0.13991355895996094&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-34:  0.1361076831817627&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-35:  0.13427162170410156&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-36:  0.1427154541015625&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-37:  0.13839292526245117&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-38:  0.1392209529876709&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-39:  0.13820719718933105&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-40:  0.13931012153625488&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-41:  0.1406848430633545&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-42:  0.13588500022888184&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-43:  0.13520193099975586&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-44:  0.14149022102355957&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-45:  0.13609766960144043&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-46:  0.13965892791748047&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-47:  0.13794231414794922&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-48:  0.18619012832641602&lt;/span&gt;
&lt;span class="err"&gt;needed time in inference-49:  0.1392371654510498&lt;/span&gt;
&lt;span class="err"&gt;average inference time:  0.14775513648986816&lt;/span&gt;
&lt;span class="err"&gt;TensorRT improvement compared to the original model: 1.2697515185469417&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above output shows that the tensorrt model has achieved moderate improvement in inference time compared to the non-optimized model. What isn't captured in these statistics however is the resource constraints that are required for inference and model loading. In both the cases where the model was loaded via keras load_model module as well as loading from a .pb graph file - the resource constraints were nearly maxed out for the edge device. &lt;/p&gt;
&lt;p&gt;The TensorRT optimized model did also require heavy resources - but more reliably ran the inference without crashing due to memory constraints. &lt;/p&gt;
&lt;p&gt;In a production environment we will: 
- Utilize a larger training dataset
- Train the model periodically in the cloud and compare performance
- Write the pb file and optimize using tensorrt on a cloud device
- Copy the pb file to an edge device for inference&lt;/p&gt;
&lt;p&gt;During the testing on the edge - we have found that loading and infering with the tensorrt model provided the most stable inference environment. Further model reduction would be beneficial in order to improve performance on a lower powered device than the TX2. &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Section 8: Conclusion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In this paper we successfully: 
- Used image augmentation to provide variety and bulk to the training dataset
- Utilized transfer learning in order to apply a base model (ResNet50) to a different dataset but similar problem
- Added to the model in order to learn the specific image classification tasks given our plant dataset
- Used different model architectures in order to balance accuracy and performance with model size
- Optimized the best performing model for inference at the edge
- Deployed to an edge device (TX2) and compared inference time along with discussion of memory/resource constraints&lt;/p&gt;
&lt;p&gt;While our validation accuracy on the image classification problem was not optimal and requires additional model tuning and optimally larger dataset (with more classes/etc) in order to improve model performance. We did however achieve &amp;gt;97% accuracy on the binary model (poison vs edible) and in the validation dataset observed recall of 100% meaning there were no predictions that wrongfully predicted the plant was edible when it was in fact poisonous. &lt;/p&gt;
&lt;p&gt;The benefit of our model architecture is that it doesn't require a data network in order to upload an image to the cloud for inference - inference is achieved at the edge, something not achieved in the available plant identification apps/models. Our model sizes range from 100MB to 600MB so we must ensure both inference, resource and size constraints are met for lower powered devices. &lt;/p&gt;
&lt;p&gt;Future Work: Given the model architecture laid out in this paper - we would like to improve model performance by exploring the following: 
- Larger training set: the USDA has a plant dataset [https://plants.sc.egov.usda.gov/gallery.html]. We have scraped from this site and would like to train on this datset which contains &amp;gt;50k images and many more classes of plants found in the US
- Continue to optimize model performance and size - primarily in order to improve validation and test set performance
- Testing on lower powered edge devices. In this analysis we used a TX2 - however we would ideally like this model to be contained within an app for a smartphone so the user can take pictures with their device and determine the species of plant in the wild&lt;/p&gt;</content><category term="posts"></category><category term="python tensorflow"></category><category term="tensorrt"></category><category term="edge device"></category><category term="cloud computing"></category></entry><entry><title>Click Through Rate Prediction</title><link href="https://aaron-j-olson.com/clickthroughrate.html" rel="alternate"></link><published>2019-06-08T20:00:00-04:00</published><updated>2019-06-08T20:00:00-04:00</updated><author><name>Aaron Olson, Daniel Elkin &amp; Roger Leung</name></author><id>tag:aaron-j-olson.com,2019-06-08:/clickthroughrate.html</id><summary type="html">&lt;p&gt;Utilization of big data workflows in Spark to implement gradient boosted tree algorithm to predict CTR&lt;/p&gt;</summary><content type="html">&lt;p&gt;Table of Contents
Section 1 - Question Formulation
Section 3 - EDA &amp;amp; Challenges
Section 1 - Question Formulation 
In this notebook, we build a model to perform clickthrough rate prediction using a public dataset from CriteoLabs, which is available here: https://www.kaggle.com/c/criteo-display-ad-challenge/data.&lt;/p&gt;
&lt;p&gt;Clickthrough rate, or CTR, is a metric used by advertisers to determine how effectively their ads are attracting visitors to their websites or products and is the ratio of the number of times an ad has been clicked to the number of times an ad has been shown (https://support.google.com/google-ads/answer/2615875?hl=en). A relatively high CTR means that users are being show relevant ads, and advertisers and ad publishers thus want to maximize CTR in order to attract the most possible users and maximize profits.&lt;/p&gt;
&lt;p&gt;The dataset used here contains seven days of data from Criteo, an ad targeting company. There is one target column for each row that indicates whether or not an ad was clicked and 39 feature columns. While we are not told what each feature represents, we know that they are data related to the publisher, the advertiser, the user and interactions between the user and the advertiser (https://www.kaggle.com/c/criteo-display-ad-challenge/discussion/9568#49738). The task is then to use these features to predict whether or not an ad was clicked.&lt;/p&gt;
&lt;p&gt;In general, the average CTR is less than two percent across industries, so a model that achieves better performance would be practically useful (https://blog.hubspot.com/agency/google-adwords-benchmark-data). As we'll see below, this particular dataset has a mean CTR of about 25%. The baseline accuracy we'll seek to exceed is thus 75%, as this would be the accuracy a model would achieve by simply predicting the negative class in all cases. The model we'll use here is a decision tree.&lt;/p&gt;
&lt;h3&gt;Decision Tree and Gradient Boosting in Python&lt;/h3&gt;
&lt;p&gt;In our analysis for click through rate we will implement the gradient boosting algorithm in order to fit a number of decision trees to the feature space. With the goal of predicting the proportion of clicks in order to determine the most beneficial add space, we will need to properly assess whether or no a user is likely to click on an add given the 38 features we have in our dataset. &lt;/p&gt;
&lt;p&gt;First we will discuss the method to fit a single decision tree in python, we will then expand this to the basis of gradient boost which will be the algorithm we will utilize on our full CTR dataset. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Single Decision Tree&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The goal of a decision tree is to split up the rows into pure samples by splitting up based on a feature value. We take a number of splits in order to do so. For example, if our decision tree were attempting to determine whether a sign is a stop sign (amongst examples of signs), one decision could be whether the sign was red or not. Presumably this would make the sample space more pure as all stop signs are red, whereas if a sign isn't red it won't be in the true split (our negative split is 100% pure for non-stop sign). We would then ask further questions of our true split to continue to filter down. Because we can presumably develop trees until there is a single example in each leaf (terminating node) decision trees are prone to overfitting. To prevent a tree from overfitting, we can set a minimum number of examples in a leaf node, if a returned branch is smaller than this value we cannot split make the split, this is the same as early termination in other machine learning routines. &lt;/p&gt;
&lt;p&gt;To make the most judicious split we have to sample at every potential split (greedy algorithm). In the case of categorical features we can make use of the Brieman technique where we divide the feature by value and sort by mean target variable. For example, if our feature has values a, b and c and the means of the target variable (binary coded as 0 / 1) is 0.1, 0.8, 0.3 respectively, we would order our values a, c and b. We can then walk through the splits sequentially to reduce the number of total splits required. &lt;/p&gt;
&lt;p&gt;By iterating over each feature / column and each value in each feature we compute the best score metric and keep track of which feature and value produces the best score. There are a number of score metrics that can be used, in the example below we use the gini score. &lt;/p&gt;
&lt;p&gt;The gini score is defined as: $\sum_{k}^{K} = p_{mk} * (1-p_{mk})$ where $p_{mk} =$ proportion of class k in partition m $ = \frac{1}{N_m} \sum I(y_i = k)$&lt;/p&gt;
&lt;p&gt;The Gini score takes the proportion that are correctly classified and multiply by the proportion that isn't correctly classified, summing over all classes of the target variable. A Gini index score of 0 means perfect segregation given the data. Gini allows us a more complex method to compute error for a classification target variable. &lt;/p&gt;
&lt;p&gt;We compute the gini index for a potential split point for a specific variable and then compute the information gained. Our best split point is defined as the split that gives us the most information gained. Information gain is defined as: $Gain = Current Uncertainty - (\frac{n_{LHS}}{N} Gini_{LHS} + (1-\frac{n_{LHS}}{N}) Gini_{RHS})$. After iterating across all potential variables and split points we choose the split that generates the highest information gain. We then recursively call the algorithm until the entire tree structure is defined. &lt;/p&gt;
&lt;p&gt;The goal of a single decision tree is to create branch points that have the highest purity of outcome variable possible as mentioned earlier. Below we represent the python code and build a tree for a toy dataset. There are limitations with a single decision tree which will be discussed down below when we address gradient boost techniques. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# imports&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql.functions&lt;/span&gt;

&lt;span class="c1"&gt;# start Spark Session&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;
&lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hw3_notebook&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;local[*]&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sparkContext&lt;/span&gt;

&lt;span class="c1"&gt;# create RDDs&lt;/span&gt;
&lt;span class="n"&gt;trainRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./data/train.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./data/test.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;toytrainRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./data/toy_train.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TOY_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./data/train.tiny.csv&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TOY_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
      &lt;th&gt;I1&lt;/th&gt;
      &lt;th&gt;I2&lt;/th&gt;
      &lt;th&gt;I3&lt;/th&gt;
      &lt;th&gt;I4&lt;/th&gt;
      &lt;th&gt;I5&lt;/th&gt;
      &lt;th&gt;I6&lt;/th&gt;
      &lt;th&gt;I7&lt;/th&gt;
      &lt;th&gt;I8&lt;/th&gt;
      &lt;th&gt;I9&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;C17&lt;/th&gt;
      &lt;th&gt;C18&lt;/th&gt;
      &lt;th&gt;C19&lt;/th&gt;
      &lt;th&gt;C20&lt;/th&gt;
      &lt;th&gt;C21&lt;/th&gt;
      &lt;th&gt;C22&lt;/th&gt;
      &lt;th&gt;C23&lt;/th&gt;
      &lt;th&gt;C24&lt;/th&gt;
      &lt;th&gt;C25&lt;/th&gt;
      &lt;th&gt;C26&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1382.0&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;15.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;181.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;e5ba7672&lt;/td&gt;
      &lt;td&gt;f54016b9&lt;/td&gt;
      &lt;td&gt;21ddcdc9&lt;/td&gt;
      &lt;td&gt;b1252a9d&lt;/td&gt;
      &lt;td&gt;07b5194c&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;3a171ecb&lt;/td&gt;
      &lt;td&gt;c5c50484&lt;/td&gt;
      &lt;td&gt;e8b83407&lt;/td&gt;
      &lt;td&gt;9727dd16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;44.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;102.0&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;07c540c4&lt;/td&gt;
      &lt;td&gt;b04e4670&lt;/td&gt;
      &lt;td&gt;21ddcdc9&lt;/td&gt;
      &lt;td&gt;5840adea&lt;/td&gt;
      &lt;td&gt;60f6221e&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;3a171ecb&lt;/td&gt;
      &lt;td&gt;43f13e8b&lt;/td&gt;
      &lt;td&gt;e8b83407&lt;/td&gt;
      &lt;td&gt;731c3655&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;14.0&lt;/td&gt;
      &lt;td&gt;767.0&lt;/td&gt;
      &lt;td&gt;89.0&lt;/td&gt;
      &lt;td&gt;4.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;245.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;8efede7f&lt;/td&gt;
      &lt;td&gt;3412118d&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;e587c466&lt;/td&gt;
      &lt;td&gt;ad3062eb&lt;/td&gt;
      &lt;td&gt;3a171ecb&lt;/td&gt;
      &lt;td&gt;3b183c5c&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;4392.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;1e88c74f&lt;/td&gt;
      &lt;td&gt;74ef3502&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6b3a5ca6&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;3a171ecb&lt;/td&gt;
      &lt;td&gt;9117a34a&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;3.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;1e88c74f&lt;/td&gt;
      &lt;td&gt;26b3c7a7&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;21c9516a&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;32c7478e&lt;/td&gt;
      &lt;td&gt;b34f3128&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows × 40 columns&lt;/p&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;gini_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gini_df&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Compute the gini index for categorical features/variables&lt;/span&gt;
&lt;span class="sd"&gt;    Input: &lt;/span&gt;
&lt;span class="sd"&gt;        gini_df: pandas dataframe used to compute gini index&lt;/span&gt;
&lt;span class="sd"&gt;    Returns: &lt;/span&gt;
&lt;span class="sd"&gt;        impurity: gini index score of the dataframe&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;total_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
    &lt;span class="n"&gt;gini&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
    &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gini_df&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;counts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gini_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# score the group based on the score for each class&lt;/span&gt;
    &lt;span class="n"&gt;impurity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;prob_of_lbl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gini_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;gini_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gini_df&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;impurity&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;prob_of_lbl&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;impurity&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Split a dataframe on a condition in order to  represent a node on a tree&lt;/span&gt;
&lt;span class="sd"&gt;    Input: &lt;/span&gt;
&lt;span class="sd"&gt;        index: column name of feature/variable to perform split&lt;/span&gt;
&lt;span class="sd"&gt;        value: value of feature value to split at&lt;/span&gt;
&lt;span class="sd"&gt;        dataset: dataset to be split&lt;/span&gt;
&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;        left: dataset that is less than or equal to value if numeri or equal to value if categorical&lt;/span&gt;
&lt;span class="sd"&gt;        right: dataset that is greater than or not equal to the value&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# test if variable is numeric or categorical&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;info_gain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;current_uncertainty&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Using the Gini index, compute the information gain to quantify the best split point&lt;/span&gt;
&lt;span class="sd"&gt;    Inputs: &lt;/span&gt;
&lt;span class="sd"&gt;        left: pandas dataframe of true branch from previous split&lt;/span&gt;
&lt;span class="sd"&gt;        right: pandas dataframe of right branch from previous split&lt;/span&gt;
&lt;span class="sd"&gt;        current_uncertainty: the gini-index of the parent node&lt;/span&gt;

&lt;span class="sd"&gt;    Returns: &lt;/span&gt;
&lt;span class="sd"&gt;        In information gained based on the tree splits and previous gini-index&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;current_uncertainty&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;gini_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;gini_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;find_best_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Uses the Brieman method for categorical variables and each split point for numeric variables&lt;/span&gt;
&lt;span class="sd"&gt;    to test at every potential split point across the feature space to compute the gini index and information &lt;/span&gt;
&lt;span class="sd"&gt;    gain in order to determine the optimal split point and splitting value given the present state&lt;/span&gt;

&lt;span class="sd"&gt;    Inputs: &lt;/span&gt;
&lt;span class="sd"&gt;        dataset: pandas dataframe consisting of the variables and data&lt;/span&gt;
&lt;span class="sd"&gt;    Returns: &lt;/span&gt;
&lt;span class="sd"&gt;        best_gain: the best gain score given the optimal split point&lt;/span&gt;
&lt;span class="sd"&gt;        best_var_split: the variable and value that produces the best split&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;best_gain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;  
    &lt;span class="n"&gt;best_var_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;  
    &lt;span class="n"&gt;current_uncertainty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gini_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;numpy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;())]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tolist&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# for each value&lt;/span&gt;
            &lt;span class="c1"&gt;# try splitting the dataset&lt;/span&gt;
            &lt;span class="n"&gt;true_rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Skip this split if it doesn&amp;#39;t divide the&lt;/span&gt;
            &lt;span class="c1"&gt;# dataset.&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;continue&lt;/span&gt;

            &lt;span class="c1"&gt;# Calculate the information gain from this split&lt;/span&gt;
            &lt;span class="n"&gt;gain&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;info_gain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true_rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false_rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;current_uncertainty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="n"&gt;best_gain&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;best_gain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best_var_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best_gain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best_var_split&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;class_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    function to return the average proportion of results belonging to a particular class&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;build_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    Fucntion that is called recursively to build a single tree&lt;/span&gt;
&lt;span class="sd"&gt;    Inputs: &lt;/span&gt;
&lt;span class="sd"&gt;        dataset: dataset to perform tree building on&lt;/span&gt;
&lt;span class="sd"&gt;    Retruns: &lt;/span&gt;
&lt;span class="sd"&gt;        best_var_split: tuple containing feature adn value to perform split&lt;/span&gt;
&lt;span class="sd"&gt;        left: dataset for left branch&lt;/span&gt;
&lt;span class="sd"&gt;        right: dataset for right branch&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;class_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;gain&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;best_var_split&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;find_best_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;best_var_split&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Base case: no further info gain&lt;/span&gt;
    &lt;span class="c1"&gt;# Since we can ask no further questions,&lt;/span&gt;
    &lt;span class="c1"&gt;# we&amp;#39;ll return a leaf.&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;gain&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;class_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# If we reach here, we have found a useful feature / value&lt;/span&gt;
    &lt;span class="c1"&gt;# to partition on.&lt;/span&gt;
    &lt;span class="n"&gt;true_rows&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;true_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true_rows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;false_rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;false_rows&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Recursively build the true branch.&lt;/span&gt;
    &lt;span class="n"&gt;true_branch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;true_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Recursively build the false branch.&lt;/span&gt;
    &lt;span class="n"&gt;false_branch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;build_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;false_rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Return a Question node.&lt;/span&gt;
    &lt;span class="c1"&gt;# This records the best feature / value to ask at this point,&lt;/span&gt;
    &lt;span class="c1"&gt;# as well as the branches to follow&lt;/span&gt;
    &lt;span class="c1"&gt;# dependingo on the answer.&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;best_var_split&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true_branch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false_branch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;build_tree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;I13&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;014507766889948148&lt;/span&gt;
&lt;span class="n"&gt;C20&lt;/span&gt; &lt;span class="mi"&gt;5840&lt;/span&gt;&lt;span class="n"&gt;adea&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1007317969990627&lt;/span&gt;
&lt;span class="n"&gt;C22&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;ec974f4&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;35123966942148765&lt;/span&gt;
&lt;span class="n"&gt;I12&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;42603550295857984&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;d14e41ff&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;I5&lt;/span&gt; &lt;span class="mi"&gt;1782&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;008934190851493162&lt;/span&gt;
&lt;span class="n"&gt;I7&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;013055620095586487&lt;/span&gt;
&lt;span class="n"&gt;C13&lt;/span&gt; &lt;span class="mi"&gt;605&lt;/span&gt;&lt;span class="n"&gt;bbc24&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;010911706067455007&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;cc7a24ff&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;24489795918367355&lt;/span&gt;
&lt;span class="n"&gt;I12&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;018828690566566025&lt;/span&gt;
&lt;span class="n"&gt;C22&lt;/span&gt; &lt;span class="n"&gt;ad3062eb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12180573839966816&lt;/span&gt;
&lt;span class="n"&gt;C23&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="n"&gt;dd3565&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;21875&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;f6f86eb4&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;C13&lt;/span&gt; &lt;span class="n"&gt;e40e52ae&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;06946786752305406&lt;/span&gt;
&lt;span class="n"&gt;C2&lt;/span&gt; &lt;span class="mi"&gt;207&lt;/span&gt;&lt;span class="n"&gt;b2d81&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;085260051966354&lt;/span&gt;
&lt;span class="n"&gt;C23&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;c7478e&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0738630368259999&lt;/span&gt;
&lt;span class="n"&gt;I8&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;22721893491124273&lt;/span&gt;
&lt;span class="n"&gt;I6&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;15333333333333318&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;b4aa4b3d&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;c84c4aec&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;C22&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;ec974f4&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;05001017772076438&lt;/span&gt;
&lt;span class="n"&gt;C1&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;cf07265&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1115255981476716&lt;/span&gt;
&lt;span class="n"&gt;I11&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;11165121373060899&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;bb4e2505&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;13265306122448978&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;f159b6cb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;I6&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;31604938271604943&lt;/span&gt;
&lt;span class="n"&gt;C24&lt;/span&gt; &lt;span class="n"&gt;b34f3128&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;31999999999999984&lt;/span&gt;
&lt;span class="n"&gt;I12&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;01674185695113256&lt;/span&gt;
&lt;span class="n"&gt;C19&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;ec8d23c&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;037680719462679674&lt;/span&gt;
&lt;span class="n"&gt;C22&lt;/span&gt; &lt;span class="n"&gt;ad3062eb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;15277777777777787&lt;/span&gt;
&lt;span class="n"&gt;C26&lt;/span&gt; &lt;span class="n"&gt;eb9a9610&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;C25&lt;/span&gt; &lt;span class="mi"&gt;001&lt;/span&gt;&lt;span class="n"&gt;f3601&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;





&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
 &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5840adea&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C22&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8ec974f4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
 &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1782&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;605bbc24&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C26&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cc7a24ff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
     &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C22&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ad3062eb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C23&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;55dd3565&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
     &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e40e52ae&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;207b2d81&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C23&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;32c7478e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))))),&lt;/span&gt;
   &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C22&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8ec974f4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8cf07265&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
     &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C26&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bb4e2505&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C24&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b34f3128&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)))))),&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C19&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0ec8d23c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C22&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ad3062eb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
   &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C25&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;001f3601&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Gradient Boost&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have shown above how to fit a single decision tree. As mentioned, single trees can frequently overfit the data - and generally don't have the best performance. For this reason a common method to use is gradient boost, where we iteratively fit additional trees based on the residual error of the last tree - in this way it is a sequential model. The theory behind this approach is to focus and improve on the 'difficult' datapoints to learn by our current model. We then proceed to iteratively develop trees using the residual error to improve the performance compared to a combination of all previous trees. &lt;/p&gt;
&lt;p&gt;Utlimately, by sequentially building trees we have a well fit model. There are a couple of caveats to a gradient boosting approach that should be known prior to implementation and methods to reduce potential error: 
 - Can be prone to over-fitting: As we are sequentially building a model, the model will fine tune towards more niche datapoints and can become over-fit when running the created series of trees on the test set. 
 - Can take a long time to generate given the sequential nature of building trees and depth of each tree
 - In general, have higher performance as compared to a random forest approach with the same number of trees and tree dpeth&lt;/p&gt;
&lt;p&gt;The gradient boost algorithm follows the routine listed below: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Initialize the model with a constant value: $$F_0(x) = argmin \sum{i = 1}^{n} L(y_i, \gamma)$$ For binary classification we use the log loss probability function as our loss function $$L = y_i * log(p_i) + (1-y_i) * log(1-p_i)$$ For the first initialization we can compute the log-odds as $$log odds = \frac{# of true observations}{# of false observations}$$ in order to map this value into a probability we apply the logistic function $$probability = \frac{e^{-log-odds}}{1+e^{-log-odds}}$$ to get probability values. The model will then be initialized with the same value for all n data-points&lt;/li&gt;
&lt;li&gt;Start a loop iterating the number of desired trees desired for gradient boost&lt;ul&gt;
&lt;li&gt;Compute the pseudo-residuals using the following equation: $$\frac{dL}{dF} = \frac{y_i - (1-y_i)&lt;em&gt;e^{y_i}}{1+e^{y_i}}$$ Using the log-loss function this equation equals the observed - predicted values. &lt;/em&gt;*&lt;em&gt; We use observed - predicted as it is the first derivative of our loss function defined above: $$\frac{dL}{dF} = \frac{y_i - (1-y_i)&lt;/em&gt;e^{y_i}}{1+e^{y_i}} = \frac{y_i * (1+e^{-y_i})}{1+e^{-y_i}} - \frac{1}{1+e^{y_i}}= y_i - p$$&lt;/li&gt;
&lt;li&gt;Fit a tree using the pseudo-residuals as the target variable. &lt;/li&gt;
&lt;li&gt;In our log-loss scenario, the output values at the leaf node for this second tree are defined using the following equation: $$\gamma_m = argmin \sum{i = 1}^{n} L(y, F_{m-1}(x_i) + \gamma h_m(x_i))$$ Freidman suggested that rather than computing a gamma value for the entire tree, it is more optimal to compute a gamma for each leaf node - this method is more frequently called TreeBoost. Implementing TreeBoost we get the following value at each leaf: $$\gamma_{jm} = Leaf-Node Value = \frac{\sum Residual_i}{\sum {Previous Probability_i * (1-Previous Probability_i)}$$ We cannot add the previous and the residual because the first is in terms of probabilty and the second is in terms of log odds&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update the model using the leaf node value and a learning rate $\alpha$: $log-odds prediction = previous prediction + \alpha * leaf node value$ Above the probability is defined using the logistic regression equation. Implementation of the algorithm can be done using logistic regression or exponential&lt;/li&gt;
&lt;li&gt;Iterate the loop building additional trees based on the new pseudo-residual values&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This implimentation follows Friedman's 'Algorithm 1' routine as noted in the article 'Greedy Function Approximation: A Gradient Boosting Machine'. [Friedman, J. (1999). Greedy Function Approximation: A Gradient Boosting Machine. Stanford: Stanford University.] Note in the implementation below the workflow is simplified by using the decision tree regressor and working in probabilities rather than log-odds and probabilities. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.tree&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DecisionTreeRegressor&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OneHotEncoder&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;preprocessing&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;log_loss&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;

&lt;span class="n"&gt;TOY_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;./data/train.tiny.csv&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TOY_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;train_error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;test_error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;# Assemble features and labels&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_dummies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;x_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Learning Rate&lt;/span&gt;
&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.05&lt;/span&gt;

&lt;span class="c1"&gt;# Copy Labels over to dataframe&lt;/span&gt;
&lt;span class="n"&gt;residual_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c1"&gt;# Compute log-odds based on proportion of true/false&lt;/span&gt;
&lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;# Convert log-odds to probability using logistic function&lt;/span&gt;
&lt;span class="n"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;prob_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;&lt;span class="c1"&gt;#np.exp(np.log(len(y_test.values == 1) / len(y_test.values == 0))) / (1 + np.exp(np.log(len(y_test.values == 1) / len(y_test.values == 0))))&lt;/span&gt;
&lt;span class="c1"&gt;# Copy over prediction and residuals&lt;/span&gt;
&lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;residual&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;
&lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pred&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;dtr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DecisionTreeRegressor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_samples_leaf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# set desired value to residual&lt;/span&gt;
    &lt;span class="n"&gt;y_train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;residual&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;# fit the decision tree&lt;/span&gt;
    &lt;span class="n"&gt;dtr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# copmute probability as the prior probability + learning-rate * prediction&lt;/span&gt;
    &lt;span class="n"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dtr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;prob_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob_test&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dtr&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x_test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# update residual_df dataframe&lt;/span&gt;
    &lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;residual&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;
    &lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;prob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;
    &lt;span class="c1"&gt;# print score based on log-loss&lt;/span&gt;
    &lt;span class="n"&gt;train_error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_loss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;residual_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;prob&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;test_error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_loss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prob_test&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#     print(&amp;quot;Train Error: &amp;quot; + str(log_loss(residual_df[&amp;#39;Label&amp;#39;], prob)))&lt;/span&gt;
&lt;span class="c1"&gt;#     print(&amp;quot;Test Error: &amp;quot; + str(log_loss(y_test, prob_test)))&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;train_error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                      &lt;span class="s1"&gt;&amp;#39;Test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;test_error&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Train&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Train Error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Test Error&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Log Loss&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Loss for Gradient Boost Algorithm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Text(0.5,1,&amp;#39;Loss for Gradient Boost Algorithm&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/clickthrough/output_8_1.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Data Gathering and EDA&lt;/h3&gt;
&lt;p&gt;Download and unpack the dataset&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# !curl -L -o criteo.tar.gz https://s3-eu-west-1.amazonaws.com/kaggle-display-advertising-challenge-dataset/dac.tar.gz&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;  &lt;span class="c"&gt;% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&lt;/span&gt;
                                 &lt;span class="n"&gt;Dload&lt;/span&gt;  &lt;span class="s"&gt;Upload&lt;/span&gt;   &lt;span class="s"&gt;Total&lt;/span&gt;   &lt;span class="s"&gt;Spent&lt;/span&gt;    &lt;span class="s"&gt;Left&lt;/span&gt;  &lt;span class="s"&gt;Speed&lt;/span&gt;
  &lt;span class="n"&gt;4&lt;/span&gt; &lt;span class="s"&gt;4364M&lt;/span&gt;    &lt;span class="s"&gt;4&lt;/span&gt;  &lt;span class="s"&gt;217M&lt;/span&gt;    &lt;span class="s"&gt;0&lt;/span&gt;     &lt;span class="s"&gt;0&lt;/span&gt;   &lt;span class="s"&gt;349k&lt;/span&gt;      &lt;span class="s"&gt;0&lt;/span&gt;  &lt;span class="s"&gt;3:33:15&lt;/span&gt;  &lt;span class="s"&gt;0:10:38&lt;/span&gt;  &lt;span class="s"&gt;3:22:37&lt;/span&gt;  &lt;span class="s"&gt;327k^C&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# !mkdir -p data&lt;/span&gt;
&lt;span class="c1"&gt;# !tar -xvzf criteo.tar.gz -C ./data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ignoring&lt;/span&gt; &lt;span class="n"&gt;unknown&lt;/span&gt; &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;SCHILY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dev&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;tar: Ignoring unknown extended header keyword `SCHILY.ino&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ignoring&lt;/span&gt; &lt;span class="n"&gt;unknown&lt;/span&gt; &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;SCHILY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nlink&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;readme.txt&lt;/span&gt;
&lt;span class="s1"&gt;tar: Ignoring unknown extended header keyword `LIBARCHIVE.creationtime&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ignoring&lt;/span&gt; &lt;span class="n"&gt;unknown&lt;/span&gt; &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;SCHILY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dev&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;tar: Ignoring unknown extended header keyword `SCHILY.ino&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Ignoring&lt;/span&gt; &lt;span class="n"&gt;unknown&lt;/span&gt; &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;SCHILY&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;nlink&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;txt&lt;/span&gt;

&lt;span class="n"&gt;gzip&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unexpected&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Unexpected&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;archive&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Error&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;recoverable&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;exiting&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Inspect the file that contains the training data&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;TRAIN_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./data/train.txt&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;First line: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;TRAIN_FILE&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;Number of columns: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;TRAIN_FILE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;

&lt;span class="c1"&gt;# print(&amp;quot;\nNumber of rows: &amp;quot;)&lt;/span&gt;
&lt;span class="c1"&gt;# !wc -l &amp;lt; $TRAIN_FILE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;First&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;5&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1382&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;181&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;       &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="n"&gt;fd1e64&lt;/span&gt;    &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="n"&gt;e26c9b&lt;/span&gt;    &lt;span class="n"&gt;fb936136&lt;/span&gt;    &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;b4723c4&lt;/span&gt;    &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;c83c98&lt;/span&gt;    &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;e0ccccf&lt;/span&gt;    &lt;span class="n"&gt;de7995b8&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;f89b562&lt;/span&gt;    &lt;span class="n"&gt;a73ee510&lt;/span&gt;    &lt;span class="n"&gt;a8cd5504&lt;/span&gt;    &lt;span class="n"&gt;b2cb9c98&lt;/span&gt;    &lt;span class="mi"&gt;37&lt;/span&gt;&lt;span class="n"&gt;c9c164&lt;/span&gt;    &lt;span class="mi"&gt;2824&lt;/span&gt;&lt;span class="n"&gt;a5f6&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;adce6ef&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;ba8b39a&lt;/span&gt;    &lt;span class="mi"&gt;891&lt;/span&gt;&lt;span class="n"&gt;b62e7&lt;/span&gt;    &lt;span class="n"&gt;e5ba7672&lt;/span&gt;    &lt;span class="n"&gt;f54016b9&lt;/span&gt;    &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="n"&gt;ddcdc9&lt;/span&gt;    &lt;span class="n"&gt;b1252a9d&lt;/span&gt;    &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="n"&gt;b5194c&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;a171ecb&lt;/span&gt;    &lt;span class="n"&gt;c5c50484&lt;/span&gt;    &lt;span class="n"&gt;e8b83407&lt;/span&gt;    &lt;span class="mi"&gt;9727&lt;/span&gt;&lt;span class="n"&gt;dd16&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;44&lt;/span&gt;  &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;102&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="n"&gt;fd1e64&lt;/span&gt;    &lt;span class="n"&gt;f0cf0024&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;f67f7e5&lt;/span&gt;    &lt;span class="mi"&gt;41274&lt;/span&gt;&lt;span class="n"&gt;cd7&lt;/span&gt;    &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;c83c98&lt;/span&gt;    &lt;span class="n"&gt;fe6b92e5&lt;/span&gt;    &lt;span class="mi"&gt;922&lt;/span&gt;&lt;span class="n"&gt;afcc0&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b153874&lt;/span&gt;    &lt;span class="n"&gt;a73ee510&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;b53e5fb&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;f1b46f3&lt;/span&gt;    &lt;span class="mi"&gt;623049&lt;/span&gt;&lt;span class="n"&gt;e6&lt;/span&gt;    &lt;span class="n"&gt;d7020589&lt;/span&gt;    &lt;span class="n"&gt;b28479f6&lt;/span&gt;    &lt;span class="n"&gt;e6c5b5cd&lt;/span&gt;    &lt;span class="n"&gt;c92f3b61&lt;/span&gt;    &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="n"&gt;c540c4&lt;/span&gt;    &lt;span class="n"&gt;b04e4670&lt;/span&gt;    &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="n"&gt;ddcdc9&lt;/span&gt;    &lt;span class="mi"&gt;5840&lt;/span&gt;&lt;span class="n"&gt;adea&lt;/span&gt;    &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="n"&gt;f6221e&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;a171ecb&lt;/span&gt;    &lt;span class="mi"&gt;43&lt;/span&gt;&lt;span class="n"&gt;f13e8b&lt;/span&gt;    &lt;span class="n"&gt;e8b83407&lt;/span&gt;    &lt;span class="mi"&gt;731&lt;/span&gt;&lt;span class="n"&gt;c3655&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;14&lt;/span&gt;  &lt;span class="mi"&gt;767&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;  &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;245&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mi"&gt;45&lt;/span&gt;  &lt;span class="mi"&gt;287&lt;/span&gt;&lt;span class="n"&gt;e684f&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;a519c5c&lt;/span&gt;    &lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="n"&gt;cf9876&lt;/span&gt;    &lt;span class="n"&gt;c18be181&lt;/span&gt;    &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;c83c98&lt;/span&gt;    &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;e0ccccf&lt;/span&gt;    &lt;span class="n"&gt;c78204a1&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b153874&lt;/span&gt;    &lt;span class="n"&gt;a73ee510&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;b08e48b&lt;/span&gt;    &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;f5e6091&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;fe001f4&lt;/span&gt;    &lt;span class="n"&gt;aa655a2f&lt;/span&gt;    &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="n"&gt;d13a8f&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;dc710ed&lt;/span&gt;    &lt;span class="mi"&gt;36103458&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;efede7f&lt;/span&gt;    &lt;span class="mi"&gt;3412118&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;            &lt;span class="n"&gt;e587c466&lt;/span&gt;    &lt;span class="n"&gt;ad3062eb&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;a171ecb&lt;/span&gt;    &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;b183c5c&lt;/span&gt;        
&lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;893&lt;/span&gt;         &lt;span class="mi"&gt;4392&lt;/span&gt;        &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;           &lt;span class="mi"&gt;68&lt;/span&gt;&lt;span class="n"&gt;fd1e64&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;c16a946&lt;/span&gt;    &lt;span class="n"&gt;a9a87e68&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;e17d6f6&lt;/span&gt;    &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;c83c98&lt;/span&gt;    &lt;span class="n"&gt;fe6b92e5&lt;/span&gt;    &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;e8a689b&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b153874&lt;/span&gt;    &lt;span class="n"&gt;a73ee510&lt;/span&gt;    &lt;span class="n"&gt;efea433b&lt;/span&gt;    &lt;span class="n"&gt;e51ddf94&lt;/span&gt;    &lt;span class="n"&gt;a30567ca&lt;/span&gt;    &lt;span class="mi"&gt;3516&lt;/span&gt;&lt;span class="n"&gt;f6e6&lt;/span&gt;    &lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="n"&gt;d13a8f&lt;/span&gt;    &lt;span class="mi"&gt;18231224&lt;/span&gt;    &lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="n"&gt;b8680f&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;e88c74f&lt;/span&gt;    &lt;span class="mi"&gt;74&lt;/span&gt;&lt;span class="n"&gt;ef3502&lt;/span&gt;            &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;b3a5ca6&lt;/span&gt;        &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;a171ecb&lt;/span&gt;    &lt;span class="mi"&gt;9117&lt;/span&gt;&lt;span class="n"&gt;a34a&lt;/span&gt;        
&lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;cf07265&lt;/span&gt;    &lt;span class="n"&gt;ae46a29d&lt;/span&gt;    &lt;span class="n"&gt;c81688bb&lt;/span&gt;    &lt;span class="n"&gt;f922efad&lt;/span&gt;    &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;c83c98&lt;/span&gt;    &lt;span class="mi"&gt;13718&lt;/span&gt;&lt;span class="n"&gt;bbd&lt;/span&gt;    &lt;span class="n"&gt;ad9fa255&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;b153874&lt;/span&gt;    &lt;span class="n"&gt;a73ee510&lt;/span&gt;    &lt;span class="mi"&gt;5282&lt;/span&gt;&lt;span class="n"&gt;c137&lt;/span&gt;    &lt;span class="n"&gt;e5d8af57&lt;/span&gt;    &lt;span class="mi"&gt;66&lt;/span&gt;&lt;span class="n"&gt;a76a26&lt;/span&gt;    &lt;span class="n"&gt;f06c53ac&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;adce6ef&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;ff4b403&lt;/span&gt;    &lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="n"&gt;adbab4&lt;/span&gt;    &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;e88c74f&lt;/span&gt;    &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="n"&gt;b3c7a7&lt;/span&gt;            &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="n"&gt;c9516a&lt;/span&gt;        &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="n"&gt;c7478e&lt;/span&gt;    &lt;span class="n"&gt;b34f3128&lt;/span&gt;

&lt;span class="nb"&gt;Number&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
&lt;span class="mi"&gt;38&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create RDDs from the parsed input files and &lt;em&gt;cache&lt;/em&gt; them so that the parsing has to occur only once.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# imports&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql.functions&lt;/span&gt;

&lt;span class="c1"&gt;# start Spark Session&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;
&lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hw3_notebook&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;local[*]&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;spark&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SparkSession&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;appName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;\
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOrCreate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sparkContext&lt;/span&gt;

&lt;span class="c1"&gt;# create RDDs&lt;/span&gt;
&lt;span class="n"&gt;trainRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./data/train.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./data/test.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;toytrainRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;./data/toy_train.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# store path to notebook&lt;/span&gt;
&lt;span class="n"&gt;PWD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;pwd&lt;/span&gt;
&lt;span class="n"&gt;PWD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PWD&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;FIELDS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C14&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;C15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C16&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C17&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C18&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C19&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C21&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C22&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C23&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C24&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C25&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C26&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Generate 80/20 (pseudo)random train/test split &lt;/span&gt;
&lt;span class="n"&gt;trainRDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;heldOutRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fullRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randomSplit&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;... leaving out &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;heldOutRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; records for evaluation and assigning &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;trainRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; records for training.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;toyRDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data/toy1000.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Number of records in toy data: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;toyRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;toytrainRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;[&amp;#39;0\t1.0\t1\t5.0\t0.0\t1382.0\t4.0\t15.0\t2.0\t181.0\t1.0\t2.0\t\t2.0\t68fd1e64\t80e26c9b\tfb936136\t7b4723c4\t25c83c98\t7e0ccccf\tde7995b8\t1f89b562\ta73ee510\ta8cd5504\tb2cb9c98\t37c9c164\t2824a5f6\t1adce6ef\t8ba8b39a\t891b62e7\te5ba7672\tf54016b9\t21ddcdc9\tb1252a9d\t07b5194c\t\t3a171ecb\tc5c50484\te8b83407\t9727dd16&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_feature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="c1"&gt;# remove empty features introduced by extra tabs&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse_empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="c1"&gt;# remove empty features introduced by extra tabs&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# helper functions&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Map line --&amp;gt; tuple of (features, label)&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;edit_data_types&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Map tuple of (features, label) --&amp;gt; tuple of (formated features, label)&lt;/span&gt;

&lt;span class="sd"&gt;    * &amp;#39;&amp;#39; is replaced with &amp;#39;null&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;    * numerical fields are converted to integers&lt;/span&gt;
&lt;span class="sd"&gt;    * make label column numeric&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;formated_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;trainRDDCached&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;trainRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;testRDDCached&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# Parsing, making &amp;#39;&amp;#39; as np.nan and converting numerical features and output label to int&lt;/span&gt;
&lt;span class="c1"&gt;# trainRDDCached = trainRDD.map(parse).map(edit_data_types).cache()&lt;/span&gt;
&lt;span class="n"&gt;toyRDDCached&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toyRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;edit_data_types&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We would expect there to be a class imbalance with many more unclicked ads than clicked ads, but let's see how extreme it is. We can perform this counting with a &lt;em&gt;map&lt;/em&gt; operation that emits the value of the label and a count of 1 and a &lt;em&gt;reduce&lt;/em&gt; operation that sums the count. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;trainRDDCached&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduceByKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;[(0, 34095179), (1, 11745438)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So approximately 74.4% of the data is the negative class.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;TRAIN_FILE&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;
&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;TRAIN_FILE&lt;/span&gt;
&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;num_unique&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;num_nan&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;RDD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toytrainRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse_feature&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduceByKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;unique&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;num_unique&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;blank&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toytrainRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatMap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parse_empty&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;num_nan&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Unique values in column &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; Number of empty values in column: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Unique values in column 1: 344 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 2: 148 Number of empty values in column: 449&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 3: 56 Number of empty values in column: 420&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 4: 1431 Number of empty values in column: 93&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 5: 408 Number of empty values in column: 493&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 6: 119 Number of empty values in column: 93&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 7: 56 Number of empty values in column: 2&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 8: 422 Number of empty values in column: 93&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 9: 6 Number of empty values in column: 889&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 10: 31 Number of empty values in column: 93&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 11: 16 Number of empty values in column: 1554&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 12: 84 Number of empty values in column: 420&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 13: 79 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 14: 252 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 15: 1293 Number of empty values in column: 66&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 16: 1043 Number of empty values in column: 66&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 17: 30 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 18: 7 Number of empty values in column: 251&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 19: 1164 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 20: 39 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 21: 2 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 22: 908 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 23: 926 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 24: 1239 Number of empty values in column: 66&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 25: 824 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 26: 20 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 27: 819 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 28: 1159 Number of empty values in column: 66&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 29: 9 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 30: 534 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 31: 201 Number of empty values in column: 965&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 32: 4 Number of empty values in column: 965&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 33: 1204 Number of empty values in column: 66&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 34: 7 Number of empty values in column: 1631&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 35: 12 Number of empty values in column: 0&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 36: 729 Number of empty values in column: 66&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 37: 33 Number of empty values in column: 965&lt;/span&gt;
&lt;span class="err"&gt;Unique values in column 38: 554 Number of empty values in column: 965&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# helper function &amp;#39;null&amp;#39; to np.nan for pandas df &lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;null_to_nan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    converts &amp;quot;null&amp;quot; to np.nan in RDD&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;formated_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nan&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;formated_features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# put the toy RDD into a pandas dataframe for EDA charting&lt;/span&gt;
&lt;span class="n"&gt;trainRDDtoPandas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toyRDDCached&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null_to_nan&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; \
                                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]))&lt;/span&gt; \
                                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;FIELDS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;C1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C14&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="s1"&gt;&amp;#39;C15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C16&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C17&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C18&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C19&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C21&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C22&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C23&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C24&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C25&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C26&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;toy_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trainRDDtoPandas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;FIELDS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;toy_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;I1&lt;/th&gt;
      &lt;th&gt;I2&lt;/th&gt;
      &lt;th&gt;I3&lt;/th&gt;
      &lt;th&gt;I4&lt;/th&gt;
      &lt;th&gt;I5&lt;/th&gt;
      &lt;th&gt;I6&lt;/th&gt;
      &lt;th&gt;I7&lt;/th&gt;
      &lt;th&gt;I8&lt;/th&gt;
      &lt;th&gt;I9&lt;/th&gt;
      &lt;th&gt;I10&lt;/th&gt;
      &lt;th&gt;...&lt;/th&gt;
      &lt;th&gt;C18&lt;/th&gt;
      &lt;th&gt;C19&lt;/th&gt;
      &lt;th&gt;C20&lt;/th&gt;
      &lt;th&gt;C21&lt;/th&gt;
      &lt;th&gt;C22&lt;/th&gt;
      &lt;th&gt;C23&lt;/th&gt;
      &lt;th&gt;C24&lt;/th&gt;
      &lt;th&gt;C25&lt;/th&gt;
      &lt;th&gt;C26&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;478.0&lt;/td&gt;
      &lt;td&gt;13.0&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;3396.0&lt;/td&gt;
      &lt;td&gt;194.0&lt;/td&gt;
      &lt;td&gt;11.0&lt;/td&gt;
      &lt;td&gt;13.0&lt;/td&gt;
      &lt;td&gt;312.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;395856b0&lt;/td&gt;
      &lt;td&gt;21ddcdc9&lt;/td&gt;
      &lt;td&gt;b1252a9d&lt;/td&gt;
      &lt;td&gt;8e4884c0&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;423fab69&lt;/td&gt;
      &lt;td&gt;b936bfbe&lt;/td&gt;
      &lt;td&gt;001f3601&lt;/td&gt;
      &lt;td&gt;f2fc1d6e&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;1209.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;526e8765&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;8b7fb864&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;32c7478e&lt;/td&gt;
      &lt;td&gt;45b2acf4&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
      &lt;td&gt;489.0&lt;/td&gt;
      &lt;td&gt;66.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;11.0&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;8f9b4e88&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;050a23dc&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;32c7478e&lt;/td&gt;
      &lt;td&gt;8a3cfad4&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;179.0&lt;/td&gt;
      &lt;td&gt;7.0&lt;/td&gt;
      &lt;td&gt;8.0&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;67.0&lt;/td&gt;
      &lt;td&gt;6.0&lt;/td&gt;
      &lt;td&gt;44.0&lt;/td&gt;
      &lt;td&gt;344.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;2804effd&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;723b4dfd&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;32c7478e&lt;/td&gt;
      &lt;td&gt;b34f3128&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;nan&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;2.0&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;27.0&lt;/td&gt;
      &lt;td&gt;1101.0&lt;/td&gt;
      &lt;td&gt;29.0&lt;/td&gt;
      &lt;td&gt;11.0&lt;/td&gt;
      &lt;td&gt;42.0&lt;/td&gt;
      &lt;td&gt;241.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;...&lt;/td&gt;
      &lt;td&gt;e88ffc9d&lt;/td&gt;
      &lt;td&gt;21ddcdc9&lt;/td&gt;
      &lt;td&gt;b1252a9d&lt;/td&gt;
      &lt;td&gt;dca9a28d&lt;/td&gt;
      &lt;td&gt;ad3062eb&lt;/td&gt;
      &lt;td&gt;bcdee96c&lt;/td&gt;
      &lt;td&gt;3fdb382b&lt;/td&gt;
      &lt;td&gt;cb079c2d&lt;/td&gt;
      &lt;td&gt;1c2df582&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;5 rows × 40 columns&lt;/p&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# TOY DATA&lt;/span&gt;
&lt;span class="c1"&gt;# counting records for each class &lt;/span&gt;
&lt;span class="n"&gt;count_label_0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toyRDDCached&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;count_label_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toyRDDCached&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count_label_0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;count_label_1&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count_label_0&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; % of the records have label=0 and &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count_label_1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; % have label=1...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;72.3 % of the records have label=0 and 27.7 % have label=1...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_pct_nulls_in_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Counts the % nulls in a column &lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;null_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; \
                             &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;total_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;null_count&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;total_count&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# TOY DATA&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FIELDS&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;null_pct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_pct_nulls_in_column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toyRDDCached&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FEATURE &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;{}% i&lt;/span&gt;&lt;span class="s2"&gt;s null&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;null_pct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;FEATURE I1: 43.2% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I2: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I3: 21.3% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I4: 22.1% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I5: 2.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I6: 23.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I7: 3.7% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I8: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I9: 3.7% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I10: 43.2% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I11: 3.7% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I12: 77.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I13: 22.1% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C1: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C2: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C3: 3.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C4: 3.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C5: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C6: 13.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C7: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C8: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C9: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C10: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C11: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C12: 3.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C13: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C14: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C15: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C16: 3.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C17: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C18: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C19: 42.2% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C20: 42.2% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C21: 3.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C22: 74.5% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C23: 0.0% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C24: 3.4% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C25: 42.2% is null&lt;/span&gt;
&lt;span class="err"&gt;FEATURE C26: 42.2% is null&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# RDD version &lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_stats&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Get statistics for numeric variables &lt;/span&gt;
&lt;span class="sd"&gt;    stats: mean, median, variance, min, max &lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="n"&gt;variance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="n"&gt;minimum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;min&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
    &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;null&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minimum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# save the means in a dictionary&lt;/span&gt;
&lt;span class="n"&gt;mean_dict_toy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;st_dev_dict_toy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;# get summary stats with RDDs&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FIELDS&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;minimum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_stats&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toyRDDCached&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;FEATURE &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; mean=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; variance=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; min=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt; max=&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;minimum&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;mean_dict_toy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;
        &lt;span class="n"&gt;st_dev_dict_toy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;FEATURE I1:      mean=3.17,      variance=33.98,     min=0.0,    max=55.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I2:      mean=114.72,    variance=179230.84,     min=-2.0,   max=5123.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I3:      mean=18.78,     variance=2026.69,   min=0.0,    max=648.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I4:      mean=7.43,      variance=86.02,     min=0.0,    max=77.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I5:      mean=18392.77,      variance=4908735552.87,     min=0.0,    max=1002457.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I6:      mean=95.23,     variance=65007.31,      min=0.0,    max=4304.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I7:      mean=17.94,     variance=8794.35,   min=0.0,    max=2614.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I8:      mean=12.96,     variance=183.6,     min=0.0,    max=49.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I9:      mean=102.42,    variance=38152.34,      min=0.0,    max=2711.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I10:     mean=0.64,      variance=0.5,   min=0.0,    max=4.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I11:     mean=2.78,      variance=23.83,     min=0.0,    max=60.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I12:     mean=1.19,      variance=40.19,     min=0.0,    max=84.0&lt;/span&gt;
&lt;span class="err"&gt;FEATURE I13:     mean=7.99,      variance=116.35,    min=0.0,    max=97.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Pandas version &lt;/span&gt;
&lt;span class="n"&gt;num_columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I9&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I10&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I11&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I12&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I13&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;toy_df_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toy_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;num_columns&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;toy_df_num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;I1&lt;/th&gt;
      &lt;th&gt;I2&lt;/th&gt;
      &lt;th&gt;I3&lt;/th&gt;
      &lt;th&gt;I4&lt;/th&gt;
      &lt;th&gt;I5&lt;/th&gt;
      &lt;th&gt;I6&lt;/th&gt;
      &lt;th&gt;I7&lt;/th&gt;
      &lt;th&gt;I8&lt;/th&gt;
      &lt;th&gt;I9&lt;/th&gt;
      &lt;th&gt;I10&lt;/th&gt;
      &lt;th&gt;I11&lt;/th&gt;
      &lt;th&gt;I12&lt;/th&gt;
      &lt;th&gt;I13&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;568.000000&lt;/td&gt;
      &lt;td&gt;1000.000000&lt;/td&gt;
      &lt;td&gt;787.000000&lt;/td&gt;
      &lt;td&gt;779.000000&lt;/td&gt;
      &lt;td&gt;9.760000e+02&lt;/td&gt;
      &lt;td&gt;770.000000&lt;/td&gt;
      &lt;td&gt;963.000000&lt;/td&gt;
      &lt;td&gt;1000.000000&lt;/td&gt;
      &lt;td&gt;963.000000&lt;/td&gt;
      &lt;td&gt;568.000000&lt;/td&gt;
      &lt;td&gt;963.000000&lt;/td&gt;
      &lt;td&gt;226.000000&lt;/td&gt;
      &lt;td&gt;779.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;3.167254&lt;/td&gt;
      &lt;td&gt;114.719000&lt;/td&gt;
      &lt;td&gt;18.780178&lt;/td&gt;
      &lt;td&gt;7.427471&lt;/td&gt;
      &lt;td&gt;1.839277e+04&lt;/td&gt;
      &lt;td&gt;95.231169&lt;/td&gt;
      &lt;td&gt;17.942887&lt;/td&gt;
      &lt;td&gt;12.961000&lt;/td&gt;
      &lt;td&gt;102.419522&lt;/td&gt;
      &lt;td&gt;0.642606&lt;/td&gt;
      &lt;td&gt;2.778816&lt;/td&gt;
      &lt;td&gt;1.194690&lt;/td&gt;
      &lt;td&gt;7.993582&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;5.834144&lt;/td&gt;
      &lt;td&gt;423.568469&lt;/td&gt;
      &lt;td&gt;45.047402&lt;/td&gt;
      &lt;td&gt;9.280591&lt;/td&gt;
      &lt;td&gt;7.009829e+04&lt;/td&gt;
      &lt;td&gt;255.131025&lt;/td&gt;
      &lt;td&gt;93.826907&lt;/td&gt;
      &lt;td&gt;13.556669&lt;/td&gt;
      &lt;td&gt;195.427732&lt;/td&gt;
      &lt;td&gt;0.705795&lt;/td&gt;
      &lt;td&gt;4.884305&lt;/td&gt;
      &lt;td&gt;6.353803&lt;/td&gt;
      &lt;td&gt;10.793634&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-2.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000e+00&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;3.032500e+02&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;10.500000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;2.696000e+03&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;39.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;32.000000&lt;/td&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;9.703500e+03&lt;/td&gt;
      &lt;td&gt;92.750000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;101.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;55.000000&lt;/td&gt;
      &lt;td&gt;5123.000000&lt;/td&gt;
      &lt;td&gt;648.000000&lt;/td&gt;
      &lt;td&gt;77.000000&lt;/td&gt;
      &lt;td&gt;1.002457e+06&lt;/td&gt;
      &lt;td&gt;4304.000000&lt;/td&gt;
      &lt;td&gt;2614.000000&lt;/td&gt;
      &lt;td&gt;49.000000&lt;/td&gt;
      &lt;td&gt;2711.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;60.000000&lt;/td&gt;
      &lt;td&gt;84.000000&lt;/td&gt;
      &lt;td&gt;97.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Take a look at histograms for each numeric feature &lt;/span&gt;
&lt;span class="n"&gt;toy_df_num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/clickthrough/output_36_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# plot boxplots of each feature vs. the outcome&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax_grid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toy_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feature&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toy_df_num&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;boxplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax_grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;h&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linewidth&lt;/span&gt;&lt;span class="o"&gt;=.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax_grid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;invert_yaxis&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;suptitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BoxPlots by Label&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fontsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/clickthrough/output_37_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Correlation between numerical features&lt;/span&gt;
&lt;span class="n"&gt;corr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toy_df_num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triu_indices_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;cmap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;diverging_palette&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;linewidths&lt;/span&gt;&lt;span class="o"&gt;=.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Correlations between features&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/clickthrough/output_38_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;count_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    input: RDD, name and position of a categorical variable &lt;/span&gt;

&lt;span class="sd"&gt;    output: &lt;/span&gt;
&lt;span class="sd"&gt;    * number of unique categories in the variable&lt;/span&gt;
&lt;span class="sd"&gt;    * counts of each category occurance by label&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# counting category occurance within each categorical feature &lt;/span&gt;
    &lt;span class="n"&gt;count_per_category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dataRDD&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; \
                                           &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reduceByKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; \
                                           &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sortBy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

    &lt;span class="c1"&gt;# counting number of unique values within the categorical variable&lt;/span&gt;
    &lt;span class="n"&gt;num_unique_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count_per_category&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distinct&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Unique values within the category:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;num_unique_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;top_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;count_per_category&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Top &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt; categories by count:&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;top_x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Category: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;; Count: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# TOY DATA&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FIELDS&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;VARIABLE &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;count_categories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toyRDDCached&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;var_position&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C1&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;57&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;05db9164&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;485&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;68fd1e64&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;146&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5a9ed9b0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;103&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8cf07265&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;51&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;be589b51&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;41&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5bfa8ab5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;27&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f473b8dc&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;87552397&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;39af2607&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9a89b36c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C2&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;193&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;38a947a1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;114&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1cfdf714&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;50&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;287130e0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;46&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;38d50e09&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;46&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;207b2d81&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;37&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;09e68b86&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;33&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;421b43cd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;33&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4f25e98b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;29&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;89ddfee8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;27&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;58e67aaf&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;27&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C3&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;771&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;34&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d032c263&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;02cf9876&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b00d1501&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;77f2f2e5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;aa8c1539&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2cbec47f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7da86e4b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9143c832&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b1ecc6c4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C4&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;660&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;34&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;29998ed1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c18be181&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d16679b9&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;25&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;85dd697c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;17&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13508380&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f922efad&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e3cc371a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3e2bfbda&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b733e495&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C5&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;26&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;25c83c98&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;653&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4cf72387&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;170&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;43b19349&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;56&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;384874ce&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;41&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0942e0a7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;17&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;30903e74&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;17&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f281d2a7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b0530c50&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b2241560&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;26eb6185&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C6&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7e0ccccf&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;388&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;fbad5c96&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;207&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;fe6b92e5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;185&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;134&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6f6d9be8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;37&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13718bbd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3bf701e7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;21&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C7&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;723&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1c86e0eb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;30&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7195046d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;90a2c015&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;81bb0302&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;468a0854&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dc7659bd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5e64ce5f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d2dbdfe6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f00bddf8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;88002ee1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C8&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;35&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0b153874&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;597&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5b392875&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;163&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1f89b562&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;69&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;37e4aa92&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;37&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;51d76abe&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;25&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;062b5529&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c8ddd494&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6c41e35e&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;985e3fcb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;64523cfa&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C9&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;a73ee510&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;900&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7cc72ec2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;100&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C10&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;613&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3b08e48b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;216&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;fbbf2c95&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5ba575e7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;efea433b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;67eea4ef&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;49d1ad89&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;03e48276&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;474773a7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f9065d00&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;935a36f0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C11&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;601&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;755e4a50&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;36&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4d8549da&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7f8ffe57&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e51ddf94&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b7094596&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1054ae5c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;a7b606c4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8b94178b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0f736a0c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7e40f08a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C12&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;736&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;34&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6aaba33c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dfbb09fb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8fe001f4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e0d76380&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9f32b866&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d8c29807&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;21a23bfe&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;ed397d6b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;ae1bb660&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C13&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;549&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5978055e&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;36&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3516f6e6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;51b97b8f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1aa94af3&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;46f42a63&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;740c210d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;025225f2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1f9d2c38&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6e5da64f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;eae197fd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C14&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;18&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b28479f6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;367&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;07d13a8f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;320&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1adce6ef&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;156&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;64c94865&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;47&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;cfef1c29&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;31&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;051219e6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;26&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d2dfe871&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8ceecbc8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f862f261&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;ad1cc976&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C15&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;553&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2d0bb053&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;21&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d345b1a0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;310d155b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;14&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;42b3012c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;52baadf5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10040656&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f3002fbd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10935a85&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e1ac77f7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3628a186&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C16&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;707&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;34&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b041b04a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;84898b2a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;36103458&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1203a270&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;31ca40b6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c64d548f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;587267a3&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c4de5bba&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;01adbab4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C17&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e5ba7672&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;497&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;d4bb7bd8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;115&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;07c540c4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;109&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3486227d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;67&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1e88c74f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;53&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;776ce399&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;51&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8efede7f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;44&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;27c07bd6&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;40&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2005abd1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;24&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C18&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;392&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e88ffc9d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;43&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;891589e7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;37&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2804effd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;33&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c21c3e4c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;27&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5bb2ec8e&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;23&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;582152eb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;22&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5aed7436&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;22&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7ef5affa&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;18&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;395856b0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;fffe2a63&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C19&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;128&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;422&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;21ddcdc9&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;358&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;55dd3565&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;712d530c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5b885066&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9437f62f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;cf99e5de&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;04de9d96&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3014a4b1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1d1eb838&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C20&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;4&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;422&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;a458ea53&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;209&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b1252a9d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;187&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5840adea&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;182&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C21&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;724&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;34&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;723b4dfd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0014c32a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e587c466&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;13&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;73d06dde&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5f957280&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dfcfc3fa&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c2a93b37&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;deaf6b52&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;0429f84b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C22&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;745&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;ad3062eb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;145&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c9d4222a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;94&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8ec974f4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;78e2e389&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c0061c6d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C23&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;12&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;32c7478e&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;447&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3a171ecb&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;199&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;423fab69&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;111&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;bcdee96c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;81&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;be7c41b4&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;63&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c7dc6720&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;47&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;55dd3565&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;20&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dbb486d7&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c3dc6cef&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;93bad2c0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C24&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;489&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3fdb382b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;56&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b34f3128&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;50&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;1793a828&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;49&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;34&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;3b183c5c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;31&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;aee52b6f&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;25&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;45ab94c8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;22&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9117a34a&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;19&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;df487a73&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;8fc66e78&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C25&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;30&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;422&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;001f3601&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;135&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;e8b83407&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;112&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;ea9a246c&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;84&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;cb079c2d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;44&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;f0f449dd&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;35&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;445bbe3b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;30&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;010f6491&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;29&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2bf691b1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9b3e8820&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;28&lt;/span&gt;


&lt;span class="nt"&gt;VARIABLE&lt;/span&gt; &lt;span class="nt"&gt;C26&lt;/span&gt;

&lt;span class="nt"&gt;Unique&lt;/span&gt; &lt;span class="nt"&gt;values&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;375&lt;/span&gt;

&lt;span class="nt"&gt;Top&lt;/span&gt; &lt;span class="nt"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;categories&lt;/span&gt; &lt;span class="nt"&gt;by&lt;/span&gt; &lt;span class="nt"&gt;count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;null&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;422&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;49d68486&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;38&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;2fede552&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;22&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c27f155b&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;19&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;c84c4aec&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;15&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;984e0db0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;aa5f0a15&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;b7d9c3bc&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;9&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6c27a535&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;7&lt;/span&gt;
&lt;span class="nt"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;56be3401&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="nt"&gt;Count&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Bar graphs of category counts within each categorical variable by label&lt;/span&gt;
&lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;fno&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="c1"&gt;# axes are in a two-dimensional array, indexed by [row, col]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;fno&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;countplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Label&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;toy_df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;palette&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Greens_d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="n"&gt;order&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;toy_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value_counts&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Count By C&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; Label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images/clickthrough/output_41_0.png" alt="Drawing" style="width: 750px;"/&gt; &lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Section 4 - Algorithm Implementation&lt;/h3&gt;
&lt;p&gt;In this section we build a gradient-boosted decision tree using Spark ML. The spark implementation follows the Friedman algorithm routine previously discussed in section 2. The documentation, along with a link to the API, can be found here: https://spark.apache.org/docs/latest/ml-classification-regression.html#gradient-boosted-tree-classifier.&lt;/p&gt;
&lt;p&gt;A lengthier tutorial for building pipelines and models using Spark can be found here: https://towardsdatascience.com/machine-learning-with-pyspark-and-mllib-solving-a-binary-classification-problem-96396065d2aa. That tutorial borrows from another notebook located here: https://docs.databricks.com/spark/latest/mllib/binary-classification-mllib-pipelines.html.&lt;/p&gt;
&lt;p&gt;Because Gradient Boost is a sequential model (need tree_1 to compute tree_2) it is not as prone to parallel implementation as random forests are. In the Spark implementation the individual tree building tasks are parallelized. This notion causes the training times in Gradient Boost to exceed those of Random Forest. Parallelizing individual tree building in Spark follows the PLANET model as outlined by Google [Panda, B., Herbach, J., Basu, S., &amp;amp; Bayardo, R. (2009). PLANET: Massively Parallel Learning of Tree Ensembles with MapReduce. Lyon: ACM.]. This technique uses a central controller that provides the tree structure and decides on the optimum split given the information gain from various split points. As detailed in section 2, tree learning is a greedy algorithm in which all split points across all variables must be considered to determine the optimum split (Brieman's technique aids in this greedy approach slightly for unordered variables). It is at this step that parallel processing can help in order to analyze all potential splits and determine the best. Listed below is a detail of the map and reduce phase broken up by ordered or unordered variables. &lt;/p&gt;
&lt;p&gt;Controller: The controller lies outside of a map-reduce job and keeps track of the overall tree structure, along with the training set for each node (to compute the split decision) and the size of the splits. The controller proceeds throughout the training set calling map-reduce jobs at each node in order to find the most viable split point&lt;/p&gt;
&lt;p&gt;Map Phase: 
 - Ordered lists: From before we know that we need to split at every point along an ordered list in order to find the true optimum split point. Because MapReduce breaks up the input data - it isn't possible to assess where the split point lies. Therefore PLANET simplifies the process slightly by (prior to the distributed job) computing equi-distant histogram for every ordered feature. The splits are then taken at the histogram buckets. While there is a tradeoff using this approach for absolute best split point - the computational cost savings are generally worth it. The map phase then splits at each feature and each value and emits a key, value pair of the form ((node, feature, split point), (sum of y values, sum of squared y values, total length that have value less than s)). 
 - Unordered lists: The map phase outputs key, value pairs of the form ((node, feature), (value, ((sum of y values, sum of squared y values, total length that have value less than s))). The key difference between these two scenarios is that the split value is located in the value for unordered lists and in the key for ordered lists. This falls back to Brieman's technique and requiring unordered lists to be sorted by y value to determine split points. 
 - The aggregated tuple (sum of y values, sum of squared y values, total length that have value less than s) is also output with a key value of node in order for the reducer phase to compare information gain on the various splits&lt;/p&gt;
&lt;p&gt;Reduce Phase: 
 - The reducer is split into a series of summations based on the key value format: node, (node, feature), (node, feature, split point). Based on this data it then sums over the aggregated tuple format emitted in all three scenarios in order to determine the optimum split point
 - The output of the reducer is the best split it has seen for each node. This information along with the average y value and size of left and right branches is emited to the controller to further build the tree structure&lt;/p&gt;
&lt;p&gt;Mentioned above, for Gradient Boosted Trees Frieman recommended a technique he called TreeBoost in which each leaf was given a different optimum constant update, rather than an average for the overall tree [Friedman, J. (1999). Greedy Function Approximation: A Gradient Boosting Machine. Stanford: Stanford University.]. In the current Spark GradientBoost algorithm, this approach is not utilized and a single parameter is used for the entire tree structure. Implementing TreeBoost is likely to improve overall model accuracy and is saved for a later step. &lt;/p&gt;
&lt;p&gt;Below we utilize the Spark ML library in order to fit a gradient boosted tree on the CLR dataset. &lt;/p&gt;
&lt;h4&gt;Preprocessing&lt;/h4&gt;
&lt;p&gt;First, we import the modules we'll need and read the data into a dataframe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pyspark.sql.functions&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.ml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.ml.classification&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GBTClassifier&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.ml.feature&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OneHotEncoderEstimator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StringIndexer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;VectorAssembler&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.ml.evaluation&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BinaryClassificationEvaluator&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pyspark.ml.tuning&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CrossValidator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ParamGridBuilder&lt;/span&gt;

&lt;span class="n"&gt;ON_CLUSTER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt; &lt;span class="c1"&gt;# flag to determine whether to read from a GCP bucket&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ON_CLUSTER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gs://w61-ucb2/data/train.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inferSchema&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;./data/train.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inferSchema&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# create a small sample for local work&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0001&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we need to transform the data into a format suitable for a GBTClassifier. We'll do this by creating a pipeline of transformations.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;stages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="c1"&gt;# the stages in the pipeline&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We first convert the categorical features into one-hot encoded vectors. However, as we saw in the EDA above, some features have many millions of unique values. It is infeasible to one-hot encode all of these due to memory constraints, and these features would likely make for poor split points in any case. Thus, we'll initially use only the categorical features that have fewer than 32 unique values, which is the default number of maximum bins used by the GBTClassifier.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;categoricalColumns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_c&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;countsByCol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;# get approximate distinct counts for each of the categorical features&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;categoricalColumns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;agg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;pyspark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;functions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;approx_count_distinct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;collect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# store the columns name and the count&lt;/span&gt;
    &lt;span class="n"&gt;countsByCol&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cnt&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# get features that have fewer than 50 unique values&lt;/span&gt;
&lt;span class="n"&gt;categoricalColumnsToEncode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;countsByCol&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;categoricalColumnsToEncode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;[&amp;#39;_c19&amp;#39;, &amp;#39;_c22&amp;#39;, &amp;#39;_c27&amp;#39;, &amp;#39;_c30&amp;#39;, &amp;#39;_c33&amp;#39;, &amp;#39;_c35&amp;#39;, &amp;#39;_c36&amp;#39;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# encode the subset of categorical columns&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;categoricalCol&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;categoricalColumnsToEncode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="c1"&gt;# index the categories&lt;/span&gt;
    &lt;span class="n"&gt;stringIndexer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIndexer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;inputCol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;categoricalCol&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="n"&gt;outputCol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;categoricalCol&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;handleInvalid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;keep&amp;quot;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# convert the indices into binary SparseVectors&lt;/span&gt;
    &lt;span class="n"&gt;encoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OneHotEncoderEstimator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;inputCols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;stringIndexer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getOutputCol&lt;/span&gt;&lt;span class="p"&gt;()],&lt;/span&gt; 
        &lt;span class="n"&gt;outputCols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;categoricalCol&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;classVec&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# add the stage&lt;/span&gt;
    &lt;span class="n"&gt;stages&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;stringIndexer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoder&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We then combine the categorical and numeric columns into a feature vector.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# extract the encoded categorical features from the dataframe &lt;/span&gt;
&lt;span class="c1"&gt;# and combine with the continuous features&lt;/span&gt;
&lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;classVec&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;categoricalColumnsToEncode&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_c&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="c1"&gt;# create the feature vector, preserving rows that contain missing data.&lt;/span&gt;
&lt;span class="n"&gt;assembler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VectorAssembler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;inputCols&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;outputCol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;handleInvalid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;keep&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# add the assembler to the stages of the pipeline&lt;/span&gt;
&lt;span class="n"&gt;stages&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;assembler&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, we convert the dataset labels into label indices.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# convert label into indices&lt;/span&gt;
&lt;span class="n"&gt;labelIndexer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIndexer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputCol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;_c0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputCol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stages&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;labelIndexer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All of the transformations that we need to perform to build a GBT now exist as stages, which we'll next evaluate in a pipeline.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;preppedDF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setStages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stages&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Initial GBT model&lt;/h4&gt;
&lt;p&gt;We'll next perform a single split of the data into training and test sets, fit a GBT to the training data using the default parameters and evaluate the performance on the test data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# split the data&lt;/span&gt;
&lt;span class="n"&gt;trainData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;preppedDF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randomSplit&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;seed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create and train the classifier&lt;/span&gt;
&lt;span class="n"&gt;gbtModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GBTClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trainData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# make predictions on the test data&lt;/span&gt;
&lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gbtModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order to compare this initial model to future iterations, get the AUROC score.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# get the auroc for the default model&lt;/span&gt;
&lt;span class="n"&gt;evaluator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BinaryClassificationEvaluator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labelCol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;auroc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evaluator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;evaluator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;metricName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;areaUnderROC&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test Area Under ROC: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;auroc&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Test Area Under ROC: 0.7073676650780636&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We'll also create a function to give a better sense of the model's performance.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Get the counts of label and prediction agreement &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;# split the dataframe into correct and incorrect predictions&lt;/span&gt;
    &lt;span class="n"&gt;correct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;incorrect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prediction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# get the various counts needed to calculate metrics&lt;/span&gt;
    &lt;span class="n"&gt;true_positives_cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;true_negatives_cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;correct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;false_positives_cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;incorrect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;incorrect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;false_negatives_cnt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;incorrect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;incorrect&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;true_positives_cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;true_negatives_cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false_positives_cnt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;false_negatives_cnt&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_scores&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Get the evaluation scores &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;tp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# calculate the metrics &lt;/span&gt;
    &lt;span class="n"&gt;accuracy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;tn&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;precision&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;f1_score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f1_score&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;print_eval_metrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Print performance metrics.&lt;/span&gt;

&lt;span class="sd"&gt;        Args:&lt;/span&gt;
&lt;span class="sd"&gt;            predictions - a DataFrame with model predictions&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f1_score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_scores&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# print the results&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test accuracy: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;accuracy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test precision: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test recall: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recall&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Test F1 score: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f1_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print_eval_metrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Test accuracy: 0.76&lt;/span&gt;
&lt;span class="err"&gt;Test precision: 0.598&lt;/span&gt;
&lt;span class="err"&gt;Test recall: 0.191&lt;/span&gt;
&lt;span class="err"&gt;Test F1 score: 0.289&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gbtModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;gs://w61-ucb2/data/gbtModel&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Further Model Improvements&lt;/h4&gt;
&lt;p&gt;There are a number of potential issues with out initial model. First, although we used a random split to create the training and test sets, it is always possible with a single split that there will be anomalies that cause the two sets to differ in ways that cause us to misestimate the model's performance on the test data. To address this problem, we will use 3-fold cross validation below in order to evaluate the model using 3 different splits.&lt;/p&gt;
&lt;p&gt;Second, it is possible that the default hyperparameters are not the best hyperparameters for this data. In particular, the model above trains 20 trees (maxIter), with a height of 5 or  $2^5=32$ maximum leaves (maxDepth), and uses a learning rate of 0.1. Below, we'll experiment with different permutations of these parameters and select the best model.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# specify the parameters over which to search&lt;/span&gt;
&lt;span class="n"&gt;gbt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GBTClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;paramGrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;ParamGridBuilder&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addGrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gbt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maxIter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addGrid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gbt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maxDepth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# setup 3-fold cross-validation for each model&lt;/span&gt;
&lt;span class="n"&gt;crossVal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CrossValidator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GBTClassifier&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; 
    &lt;span class="n"&gt;estimatorParamMaps&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;paramGrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;evaluator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;BinaryClassificationEvaluator&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="n"&gt;numFolds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Having initialized the objects we need, we train the models and select the one with the highest score.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cvModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crossVal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trainData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cvModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;print_eval_metrics&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Test accuracy: 0.761&lt;/span&gt;
&lt;span class="err"&gt;Test precision: 0.603&lt;/span&gt;
&lt;span class="err"&gt;Test recall: 0.196&lt;/span&gt;
&lt;span class="err"&gt;Test F1 score: 0.296&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;evaluator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;0.710653928067178&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see a slight improvement in the AUROC score ($0.710 - 0.707 = 0.003$), the test accuracy $(0.761 - 0.76 = 0.001)$ and the f1 score ($0.296 - 0.289 = 0.007$) with this model.&lt;/p&gt;
&lt;p&gt;We'll now inspect the parameters that correspond to the best model.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bestModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cvModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bestModel&lt;/span&gt;
&lt;span class="n"&gt;param_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bestModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extractParamMap&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;num_trees&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;param_map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bestModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;maxIter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;max_depth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;param_map&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bestModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;maxDepth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Number of trees: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num_trees&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Maximum height of tree: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;max_depth&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Number of trees: 20&lt;/span&gt;
&lt;span class="err"&gt;Maximum height of tree: 5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see that the maximum depth of the tree is 5 and the number of iterations (i.e. the height of the tree) is 20. The results indicate that adding more trees resulted in overfitting the model for this dataset. The parameters for the best model in fact match those used in the default model above, so the improved scores are actually a result of using cross-validation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# save the model for future use&lt;/span&gt;
&lt;span class="n"&gt;cvModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bestModel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gs://w61-ucb2/data/gbtModelBest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Gradient Boost Results and Discussion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Methods to Implement in Future Work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Gradient boost techniques are a very popular machine learning implementation and have observed very good results in some of the data science competition sites. There has therefore been a number of improvements and iterations on the gradient boost techniques presented here that could aid in the development of a more accurate gradient boost model: 
 - Handling of sparse data / matrix: As shown in the EDA section and as generally accepted with CTR data, many of the features are sparse (empty) or missing (NAN). When building a decision tree, we use an encoding routine to separate categorical features into n_unique features. This causes the feature space to get very large (especially when there are a number of categories as was the case in this dataset (1293 unique values in one feature space)). If a one-hot encoding routine is utilized this causes the feature space to become very sparse (number of zero values) as most datapoints won't contain any data. There is also the problem of training on NAN values which isn't possible. In this example we either: (a) imputed the mean of a numeric vector and used that to fill NAN values (b) assumed the value of zero for all missing data in categorical features. One common method for addressing the sparsity issue is to encode a category into a series of bins rather than one-hot encoding. In this CTR data our categorical features were hash values rather than the original dataset. Because of this, we did not choose to employ a binning technique as we were uncertain of the algorithm to create the hash and whether there was validity in binning values based on their hash value. Given another training set where we had access to the raw value and can bin by value this is a worthy technique. XG-Boost specifically handles sparse data well by performing what the authors entitled 'sparsity-aware split finding'. The basic premise used in XG-boost is to utilize a default direction when encountering NAN or zero values for a particular feature. This default direction is determined by analyzing all missing values for that feature and determining the most appropriate direction [Chen, T., &amp;amp; Guestrin, C. (2016). XGBoost: A Scalable Tree Boosting System. Cornell University.]. 
 - Alternatives to One-Hot-Encoding: We've already mentioned the potential to use binning rather than one-hot encoding. Another popular technique is to use a target statistic - such as the expected value of the output parameter based on the category value or alternatively for the bin. The technique is similar to binning except the value is replaced with a target statistic. There are a number of alternative methods to compute the target statistic that have been utilized to optimize training and prevent target leakage [Prokhorenkova, L., Gusev, G., Vorobev, A., Dorogush, A. V., &amp;amp; Gulin, A. (2019). CatBoost: unbiased boosting with categorical features.]. 
 - TreeBoost: As mentioned prior to implementing gradient boost in Spark. The current library doesn't make use of separate multiplier values for each leaf node as recommended by Friedman. Implementing TreeBoost has been shown to increase the accuracy of gradient boost models 
 - Individual Tree Optimization: Gradient boost relies on a number of weak estimators to create a good prediction in aggregate. There are a number of methods we can employ to allow our weak estimator to more accurately assess each problem and therefore optimize the ensemble: 
     - Depth of the trees: This can lead to overfitting but can also improve individual prediction which can benefit the aggregate model
     - Minimum number of examples per leaf: Similar to depth of the tree, can lead to overfitting and or model improvement depending on the problem
 - Shrinkage: In the Spark ML implementation we chose a learning rate that tempered the adjustments made on sequential models fit to the residuals. We can further refine this value to optimize model performance
 - Regularization: Use L1 and L2 regularization techniques to penalize complex models. This is assessed in the loss functino by adding regularization terms to the end of the loss function corresponding to L1 and L2 regularization: $$L = loss function + \frac{1}{2} \lambda \sum w_j^2 + \alpha \sum |w_j|$$ Where $\lambda$ and $\alpha$ are the L2 and L1 regularization terms respectively. &lt;/p&gt;</content><category term="posts"></category><category term="python"></category><category term="gradient boost"></category><category term="decision tree"></category><category term="spark"></category><category term="pyspark"></category></entry><entry><title>Music Churn Prediction</title><link href="https://aaron-j-olson.com/churnprediction.html" rel="alternate"></link><published>2018-09-08T20:00:00-04:00</published><updated>2018-09-08T20:00:00-04:00</updated><author><name>Cameron Kennedy, Gaurav Khanna, Aaron Olson</name></author><id>tag:aaron-j-olson.com,2018-09-08:/churnprediction.html</id><summary type="html">&lt;p&gt;Handle large dataset &amp;gt;30GB in order to predict music churn&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Overview of Notebooks&lt;/h2&gt;
&lt;p&gt;For this project, the team created 3 separate Jupyter Notebooks to document its work:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1) Data Preparation / Feature Extraction Notebook:&lt;/strong&gt;  This notebook gives an overview of the project, and then takes the raw data, performs some initial exploration, and generates features for the predictive models.  It also performs a brief exploratory data analysis on the feature set.  The output this notebook output a .pkl file of features for the second notebook to read, which saves considerable time when building the models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Predictive Modeling Notebook:&lt;/strong&gt;  This notebook reads the .pkl file, builds machine learning models to predict user churn, calculates and calibrates churn probabilities, and generates a projected economic impact of users who leave.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) Initial Data Sourcing and Validation Notebook (HTML file):&lt;/strong&gt;  This is a static notebook (uploaded as HTML file - not intended for executing code) that documents two other aspects of the project that don't logically fit in either of the first two notebooks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First, it contains the initial data extraction code used in Google BigQuery to reduce the data set from ~30GB down to ~1.6GB, to enable it to run on local machines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Second, it contains some code that performs data integrity checks, validating that the items extracted in our smaller data set approximately match those in the full data set (e.g., same level of churn, the same timeframe, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Table of Contents (this notebook only)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Project Overview&lt;/li&gt;
&lt;li&gt;Data Set Overview&lt;/li&gt;
&lt;li&gt;Initial Data Loading&lt;/li&gt;
&lt;li&gt;User Logs Data: Preparation and Feature Extraction&lt;/li&gt;
&lt;li&gt;Transaction Data: Preparation and Feature Extraction&lt;/li&gt;
&lt;li&gt;Joining Features and Data Manipulation&lt;/li&gt;
&lt;li&gt;Quick Exploratory Data Analysis&lt;/li&gt;
&lt;li&gt;Writing Output&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;1. Project Overview&lt;/h1&gt;
&lt;p&gt;This dataset is comprised of data collected by WSDM regarding a music streaming subscription available through KKBOX.&lt;/p&gt;
&lt;h2&gt;Project Goals:&lt;/h2&gt;
&lt;p&gt;The project aims to accomplish the following goals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a model to predict customer churn from usage and transaction data&lt;/li&gt;
&lt;li&gt;Create an economic model for retention&lt;/li&gt;
&lt;li&gt;Recommend a process for keeping the churn and economic retention models updated with latest information&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;2. Data Set Overview&lt;/h1&gt;
&lt;p&gt;The initial data set contains 24 variables (25 input variables and 1 variable to predict), these are spread across 4 tables.  Additional details:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Original format:&lt;/strong&gt; csv&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Total Size:&lt;/strong&gt; 31.14 GB, reduced to 1.6GB for analysis on local machines.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt; User Count:&lt;/strong&gt; 1.02 million labeled users contained in the Train table (88,544 users after reduction)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Date Range:&lt;/strong&gt; The data of customer usage and trasactions with the service spans 26 months, from Jan. 2015 to Feb. 2017.  However, one of the data fields is initial date users joined the service, with dates ranging from 2004 to 2017.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Balance:&lt;/strong&gt; Approximately 6% of users in the data churned (positive labels); the remaining 94% stayed (negative labels).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Listed below are the tables and variables or features available for study:&lt;/p&gt;
&lt;h2&gt;Table: Transactions&lt;/h2&gt;
&lt;p&gt;This table contains transaction data for each user. Each row is a payment transaction.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data Shape:&lt;/strong&gt; 21.5M rows X 9 columns&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Size:&lt;/strong&gt; 1.6GB&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Data Fields:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Msno:&lt;/strong&gt; User ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Payment_method_id:&lt;/strong&gt; Payment Method&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Payment_plan_days:&lt;/strong&gt; Length of plan&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plan_list_price:&lt;/strong&gt; Price for the plan&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Actual_amount_paid:&lt;/strong&gt; Amount paid &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is_auto_renew:&lt;/strong&gt; T/F flag determining whether membership is auto-renew or not&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transaction Date:&lt;/strong&gt; Date of purchase&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Membership_expire_date:&lt;/strong&gt; Expiry date&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is_cancel:&lt;/strong&gt; T/F flag determining whether or not the user canceled service. This field is correlated with the is_churn category, though it isn’t identical, as it also captures users who change service.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Table: User Logs&lt;/h2&gt;
&lt;p&gt;This table lists who, how, and when users used the service.  Each row is a unique user-date combination.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data Shape:&lt;/strong&gt; 392M rows X 9 columns&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Size:&lt;/strong&gt; 29.1GB&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Data Fields:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Msno:&lt;/strong&gt; User ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Date:&lt;/strong&gt; Date of the logged activity &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Num_25:&lt;/strong&gt; Number of songs played &amp;lt; 25% of song length&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Num_50:&lt;/strong&gt; Number of songs played between 25% and 50%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Num_75:&lt;/strong&gt; Number of songs played between 50% and 75%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Num_985:&lt;/strong&gt; Number of songs played between 75% and 98.5%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Num_100:&lt;/strong&gt; Number of songs played between 98.5% and 100%&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Num_unq:&lt;/strong&gt; Number of unique songs played&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Total_secs:&lt;/strong&gt; Total seconds played&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Table: Members&lt;/h2&gt;
&lt;p&gt;Demographic data on each user.  Each row represents a unique user.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Data Shape:&lt;/strong&gt; 6.8M rows X 6 columns&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Size:&lt;/strong&gt; 0.4GB&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Data Fields:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Msno:&lt;/strong&gt; User ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;City:&lt;/strong&gt; City of the user&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BD:&lt;/strong&gt; Age of the user&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gender:&lt;/strong&gt; Male, Female or Blank&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Registered_via:&lt;/strong&gt; Registration method&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Registration_init_time:&lt;/strong&gt; Initial time of registration&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expiration_date:&lt;/strong&gt; Expiration of membership&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Table: Train&lt;/h2&gt;
&lt;p&gt;Labels of which users churned.  Each row represents a unique user.
* &lt;strong&gt;Data Shape:&lt;/strong&gt; 1.0M rows X 2 columns
* &lt;strong&gt;Data Size:&lt;/strong&gt; 45MB&lt;/p&gt;
&lt;h3&gt;Data Fields:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Msno:&lt;/strong&gt; User ID&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is_churn:&lt;/strong&gt;  T/F flag variable we are trying to predict.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;3. Initial Data Loading&lt;/h1&gt;
&lt;p&gt;This analysis is performed in the cells below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Import Required Libraries&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="c1"&gt;#Set initial parameter(s)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display.max_rows&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Loading the data indexing with the primary key (MSNO: String like/Object, represents the user)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Load the data&lt;/span&gt;
&lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;members_filtered.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;transactions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transactions_filtered.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;user_logs_filtered.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;labels_filtered.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Set indices&lt;/span&gt;
&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;num_25&lt;/th&gt;
      &lt;th&gt;num_50&lt;/th&gt;
      &lt;th&gt;num_75&lt;/th&gt;
      &lt;th&gt;num_985&lt;/th&gt;
      &lt;th&gt;num_100&lt;/th&gt;
      &lt;th&gt;num_unq&lt;/th&gt;
      &lt;th&gt;total_secs&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;MVODUEUlSocm1sXa+zVGpJazPrRFiD4IzEQk0QCdg4U=&lt;/td&gt;
      &lt;td&gt;20170217&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;9022.818&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;o3Dg7baW8dXq7Jq7NzlVrWG4mZNVvqp62oWBDO/ybeE=&lt;/td&gt;
      &lt;td&gt;20160209&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;48&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;13895.453&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;6ERcO7aqAKvrQ2CAvah79dVC7tJVZSjNti1MBfpNVW4=&lt;/td&gt;
      &lt;td&gt;20151210&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td&gt;54&lt;/td&gt;
      &lt;td&gt;13919.805&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Xt9VAHNtHuST21tkcZSnGKjwv8vF8/COnsf6z28+fKk=&lt;/td&gt;
      &lt;td&gt;20161025&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td&gt;75&lt;/td&gt;
      &lt;td&gt;15147.842&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;zSgTJqoosTiFF7ZZi1DPTHgxLbnd99IgOEsTIDCcZHc=&lt;/td&gt;
      &lt;td&gt;20160904&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;10558.829&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Performing a quick inspection of the data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Transactions: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;User Logs: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Members: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;User Logs:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Transactions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pandas.core.frame.DataFrame&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;RangeIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;1353458&lt;/span&gt;
&lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;msno&lt;/span&gt;                      &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;payment_method_id&lt;/span&gt;         &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;payment_plan_days&lt;/span&gt;         &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;plan_list_price&lt;/span&gt;           &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;actual_amount_paid&lt;/span&gt;        &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;is_auto_renew&lt;/span&gt;             &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;transaction_date&lt;/span&gt;          &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;membership_expire_date&lt;/span&gt;    &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;is_cancel&lt;/span&gt;                 &lt;span class="mi"&gt;1353459&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="k"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;92&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;span class="k"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Logs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pandas.core.frame.DataFrame&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;RangeIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;19710631&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;19710630&lt;/span&gt;
&lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;msno&lt;/span&gt;          &lt;span class="k"&gt;object&lt;/span&gt;
&lt;span class="nb"&gt;date&lt;/span&gt;          &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;num_25&lt;/span&gt;        &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;num_50&lt;/span&gt;        &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;num_75&lt;/span&gt;        &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;num_985&lt;/span&gt;       &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;num_100&lt;/span&gt;       &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;num_unq&lt;/span&gt;       &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;total_secs&lt;/span&gt;    &lt;span class="n"&gt;float64&lt;/span&gt;
&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="k"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;GB&lt;/span&gt;
&lt;span class="n"&gt;Members&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pandas.core.frame.DataFrame&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;89473&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;EFbHYa9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;MiKYiyrl05cZ34Cky0FDeHxTYij0pXwkr2A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;city&lt;/span&gt;                      &lt;span class="mi"&gt;89473&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;bd&lt;/span&gt;                        &lt;span class="mi"&gt;89473&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;gender&lt;/span&gt;                    &lt;span class="mi"&gt;46137&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt;
&lt;span class="n"&gt;registered_via&lt;/span&gt;            &lt;span class="mi"&gt;89473&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;registration_init_time&lt;/span&gt;    &lt;span class="mi"&gt;89473&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="k"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;span class="k"&gt;User&lt;/span&gt; &lt;span class="n"&gt;Logs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pandas.core.frame.DataFrame&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;99825&lt;/span&gt; &lt;span class="n"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;lh94wH&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;UPK7ENgnA5svzFMYfJJRMZHU&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;WjgvhRJPzc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;DIgxCOJBeanFdqLOOPMTzwwkqgREVG&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;g1pwfY5LWvC4&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="k"&gt;Data&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="n"&gt;is_churn&lt;/span&gt;    &lt;span class="mi"&gt;99825&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;null&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;
&lt;span class="n"&gt;dtypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="k"&gt;usage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;MB&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Helper routine to format the date for visualization:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pd_to_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_col&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Function to convert a pandas dataframe column from %Y%m%d format to datetime format.&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        df_col (column in a pandas dataframe):  The column to be changed.&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;        The same column in datetime format.&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;df_col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_col&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df_col&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Convert date column to date format&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd_to_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next two sections prepare the 2 major data tables/frames (User Logs &amp;amp; Transactions) independently and then bring them together for analysis.&lt;/p&gt;
&lt;h1&gt;4. User Logs Data:  Preparation and Feature Extraction&lt;/h1&gt;
&lt;p&gt;We first create our groupby object to ultimately aggregate data by users:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Create our groupby user object &lt;/span&gt;
&lt;span class="n"&gt;user_logs_gb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The next cell creates three new columns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;max_date:&lt;/strong&gt;  The latest date each user has a transaction&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;days_before_max_date:&lt;/strong&gt;  The the number of days between the max date and the date of the current record.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;listening_tenure:&lt;/strong&gt;  The the number of days between the max date and min date of the current user.  The hypothesis for this feature is that a user who's been using the service for a long time may be less likely to churn than one who's been using the service for a short time.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Append max date to every row in main table&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;max_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_logs_gb&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;days_before_max_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;max_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#The .apply(lambda...  just converts it from datetime to an integer, for easier comparisons later.&lt;/span&gt;

&lt;span class="c1"&gt;#Generate user&amp;#39;s first date, last date, and tenure&lt;/span&gt;
&lt;span class="c1"&gt;#Also, the user_logs_features table will be the primary table to return from the transactions table&lt;/span&gt;
&lt;span class="n"&gt;user_logs_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_gb&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;agg&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;  &lt;span class="c1"&gt;#.days converts to int&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;max&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;max_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;min&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;min_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;lambda&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;listening_tenure&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
                      &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Add a 3rd level, used for joining data later&lt;/span&gt;
&lt;span class="n"&gt;user_logs_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;user_logs_features&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_features&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's take a look at our initial users table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;user_logs_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;date_features&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;date&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;max_date&lt;/th&gt;
      &lt;th&gt;min_date&lt;/th&gt;
      &lt;th&gt;listening_tenure&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;MVODUEUlSocm1sXa+zVGpJazPrRFiD4IzEQk0QCdg4U=&lt;/th&gt;
      &lt;td&gt;2017-02-27&lt;/td&gt;
      &lt;td&gt;2015-07-11&lt;/td&gt;
      &lt;td&gt;597&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;o3Dg7baW8dXq7Jq7NzlVrWG4mZNVvqp62oWBDO/ybeE=&lt;/th&gt;
      &lt;td&gt;2017-02-07&lt;/td&gt;
      &lt;td&gt;2015-03-10&lt;/td&gt;
      &lt;td&gt;700&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6ERcO7aqAKvrQ2CAvah79dVC7tJVZSjNti1MBfpNVW4=&lt;/th&gt;
      &lt;td&gt;2017-02-17&lt;/td&gt;
      &lt;td&gt;2015-01-01&lt;/td&gt;
      &lt;td&gt;778&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Xt9VAHNtHuST21tkcZSnGKjwv8vF8/COnsf6z28+fKk=&lt;/th&gt;
      &lt;td&gt;2017-02-28&lt;/td&gt;
      &lt;td&gt;2016-09-08&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;zSgTJqoosTiFF7ZZi1DPTHgxLbnd99IgOEsTIDCcZHc=&lt;/th&gt;
      &lt;td&gt;2017-02-13&lt;/td&gt;
      &lt;td&gt;2015-01-01&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;We now create features to look at patters of usage over the past X days, where X is days_before_max_date, to see what a user has been doing "lately".  We apply this rationale to all of the usage columns in the user_logs table, giving us combinations of the following elements of our data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Number of songs played &amp;lt; Y% of song length, where Y is 100, 985, 75, 50, and 25, plus the number of unique songs and total seconds played.&lt;/li&gt;
&lt;li&gt;Activity over the last day, last 7, 30, 90, 180, 365, and total days, noting that the date range is relative to user's most recent activity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each of these combinations, we calulate (using groupby and aggregate) both the sum and mean of each feature.  And finally we also create a single, total count column (number of rows) for the past number of days.  In total, this generates 120 features, which we then append to the user_logs_features table above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Create Features:&lt;/span&gt;
    &lt;span class="c1"&gt;# Total X=(seconds, 100, 985, 75, 50, 25, unique), avg per day of X, maybe median per day of X&lt;/span&gt;
    &lt;span class="c1"&gt;# Last day, last 7 days, last 30 days, last 90, 180, 365, total (note last day is relative to user)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;num_days&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="c1"&gt;#Create groupby object for items with x days&lt;/span&gt;
    &lt;span class="n"&gt;ul_gb_xdays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;days_before_max_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;num_days&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
                   &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;#Generate sum and mean (and count, once) for all the user logs stats&lt;/span&gt;
    &lt;span class="n"&gt;past_xdays_by_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ul_gb_xdays&lt;/span&gt;
        &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;agg&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;num_unq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;total_secs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;num_25&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;num_50&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;num_75&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;num_985&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
              &lt;span class="s1"&gt;&amp;#39;num_100&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
             &lt;span class="p"&gt;})&lt;/span&gt;
                      &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;#Append level header&lt;/span&gt;
    &lt;span class="n"&gt;past_xdays_by_user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;past_xdays_by_user&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;within_days_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_days&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;

    &lt;span class="c1"&gt;#Join (append) to user_logs_features table&lt;/span&gt;
    &lt;span class="n"&gt;user_logs_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_logs_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;past_xdays_by_user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Taking a quick look at our table now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;user_logs_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead tr th {
        text-align: left;
    }

    .dataframe thead tr:last-of-type th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;date_features&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_1&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_7&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_14&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_31&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_90&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_180&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_365&lt;/th&gt;
      &lt;th colspan="15" halign="left"&gt;within_days_9999&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;date&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
      &lt;th colspan="3" halign="left"&gt;num_unq&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;total_secs&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_25&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_50&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_75&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_985&lt;/th&gt;
      &lt;th colspan="2" halign="left"&gt;num_100&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;max_date&lt;/th&gt;
      &lt;th&gt;min_date&lt;/th&gt;
      &lt;th&gt;listening_tenure&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;mean&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;MVODUEUlSocm1sXa+zVGpJazPrRFiD4IzEQk0QCdg4U=&lt;/th&gt;
      &lt;td&gt;2017-02-27&lt;/td&gt;
      &lt;td&gt;2015-07-11&lt;/td&gt;
      &lt;td&gt;597&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;29802.123&lt;/td&gt;
      &lt;td&gt;29802.123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;161&lt;/td&gt;
      &lt;td&gt;26.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;72502.206&lt;/td&gt;
      &lt;td&gt;12083.70100&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;16.500000&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;2.166667&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.833333&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.50&lt;/td&gt;
      &lt;td&gt;275&lt;/td&gt;
      &lt;td&gt;45.833333&lt;/td&gt;
      &lt;td&gt;478&lt;/td&gt;
      &lt;td&gt;39.833333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;154157.897&lt;/td&gt;
      &lt;td&gt;12846.491417&lt;/td&gt;
      &lt;td&gt;207&lt;/td&gt;
      &lt;td&gt;17.250000&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;1.333333&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;1.583333&lt;/td&gt;
      &lt;td&gt;595&lt;/td&gt;
      &lt;td&gt;49.583333&lt;/td&gt;
      &lt;td&gt;1040&lt;/td&gt;
      &lt;td&gt;41.600000&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;299571.033&lt;/td&gt;
      &lt;td&gt;11982.841320&lt;/td&gt;
      &lt;td&gt;448&lt;/td&gt;
      &lt;td&gt;17.920000&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;2.120000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;1.080000&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;1.720000&lt;/td&gt;
      &lt;td&gt;1153&lt;/td&gt;
      &lt;td&gt;46.120000&lt;/td&gt;
      &lt;td&gt;2723&lt;/td&gt;
      &lt;td&gt;43.919355&lt;/td&gt;
      &lt;td&gt;62&lt;/td&gt;
      &lt;td&gt;610185.373&lt;/td&gt;
      &lt;td&gt;9841.699565&lt;/td&gt;
      &lt;td&gt;1227&lt;/td&gt;
      &lt;td&gt;19.790323&lt;/td&gt;
      &lt;td&gt;222&lt;/td&gt;
      &lt;td&gt;3.580645&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;1.661290&lt;/td&gt;
      &lt;td&gt;132&lt;/td&gt;
      &lt;td&gt;2.129032&lt;/td&gt;
      &lt;td&gt;2244&lt;/td&gt;
      &lt;td&gt;36.193548&lt;/td&gt;
      &lt;td&gt;5805&lt;/td&gt;
      &lt;td&gt;47.975207&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;1195064.265&lt;/td&gt;
      &lt;td&gt;9876.564174&lt;/td&gt;
      &lt;td&gt;2792&lt;/td&gt;
      &lt;td&gt;23.074380&lt;/td&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;4.487603&lt;/td&gt;
      &lt;td&gt;261&lt;/td&gt;
      &lt;td&gt;2.157025&lt;/td&gt;
      &lt;td&gt;252&lt;/td&gt;
      &lt;td&gt;2.082645&lt;/td&gt;
      &lt;td&gt;4267&lt;/td&gt;
      &lt;td&gt;35.264463&lt;/td&gt;
      &lt;td&gt;10396&lt;/td&gt;
      &lt;td&gt;45.004329&lt;/td&gt;
      &lt;td&gt;231&lt;/td&gt;
      &lt;td&gt;1989225.131&lt;/td&gt;
      &lt;td&gt;8611.364203&lt;/td&gt;
      &lt;td&gt;4768&lt;/td&gt;
      &lt;td&gt;20.640693&lt;/td&gt;
      &lt;td&gt;1243&lt;/td&gt;
      &lt;td&gt;5.380952&lt;/td&gt;
      &lt;td&gt;513&lt;/td&gt;
      &lt;td&gt;2.220779&lt;/td&gt;
      &lt;td&gt;479&lt;/td&gt;
      &lt;td&gt;2.073593&lt;/td&gt;
      &lt;td&gt;6908&lt;/td&gt;
      &lt;td&gt;29.904762&lt;/td&gt;
      &lt;td&gt;17549&lt;/td&gt;
      &lt;td&gt;46.181579&lt;/td&gt;
      &lt;td&gt;380&lt;/td&gt;
      &lt;td&gt;3134336.415&lt;/td&gt;
      &lt;td&gt;8248.253724&lt;/td&gt;
      &lt;td&gt;10198&lt;/td&gt;
      &lt;td&gt;26.836842&lt;/td&gt;
      &lt;td&gt;2395&lt;/td&gt;
      &lt;td&gt;6.302632&lt;/td&gt;
      &lt;td&gt;972&lt;/td&gt;
      &lt;td&gt;2.557895&lt;/td&gt;
      &lt;td&gt;806&lt;/td&gt;
      &lt;td&gt;2.121053&lt;/td&gt;
      &lt;td&gt;10495&lt;/td&gt;
      &lt;td&gt;27.618421&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;o3Dg7baW8dXq7Jq7NzlVrWG4mZNVvqp62oWBDO/ybeE=&lt;/th&gt;
      &lt;td&gt;2017-02-07&lt;/td&gt;
      &lt;td&gt;2015-03-10&lt;/td&gt;
      &lt;td&gt;700&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;274.176&lt;/td&gt;
      &lt;td&gt;274.176&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;161&lt;/td&gt;
      &lt;td&gt;26.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;40311.015&lt;/td&gt;
      &lt;td&gt;6718.50250&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;8.666667&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;2.50&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;22.833333&lt;/td&gt;
      &lt;td&gt;253&lt;/td&gt;
      &lt;td&gt;25.300000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;65631.235&lt;/td&gt;
      &lt;td&gt;6563.123500&lt;/td&gt;
      &lt;td&gt;84&lt;/td&gt;
      &lt;td&gt;8.400000&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;1.600000&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;1.600000&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;218&lt;/td&gt;
      &lt;td&gt;21.800000&lt;/td&gt;
      &lt;td&gt;811&lt;/td&gt;
      &lt;td&gt;38.619048&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;201286.586&lt;/td&gt;
      &lt;td&gt;9585.075524&lt;/td&gt;
      &lt;td&gt;236&lt;/td&gt;
      &lt;td&gt;11.238095&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;2.047619&lt;/td&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;1.809524&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;2.523810&lt;/td&gt;
      &lt;td&gt;699&lt;/td&gt;
      &lt;td&gt;33.285714&lt;/td&gt;
      &lt;td&gt;1428&lt;/td&gt;
      &lt;td&gt;33.209302&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;408254.891&lt;/td&gt;
      &lt;td&gt;9494.299791&lt;/td&gt;
      &lt;td&gt;460&lt;/td&gt;
      &lt;td&gt;10.697674&lt;/td&gt;
      &lt;td&gt;78&lt;/td&gt;
      &lt;td&gt;1.813953&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;1.604651&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2.348837&lt;/td&gt;
      &lt;td&gt;1430&lt;/td&gt;
      &lt;td&gt;33.255814&lt;/td&gt;
      &lt;td&gt;1648&lt;/td&gt;
      &lt;td&gt;32.313725&lt;/td&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td&gt;487842.759&lt;/td&gt;
      &lt;td&gt;9565.544294&lt;/td&gt;
      &lt;td&gt;495&lt;/td&gt;
      &lt;td&gt;9.705882&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
      &lt;td&gt;1.803922&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.490196&lt;/td&gt;
      &lt;td&gt;105&lt;/td&gt;
      &lt;td&gt;2.058824&lt;/td&gt;
      &lt;td&gt;1735&lt;/td&gt;
      &lt;td&gt;34.019608&lt;/td&gt;
      &lt;td&gt;3255&lt;/td&gt;
      &lt;td&gt;29.062500&lt;/td&gt;
      &lt;td&gt;112&lt;/td&gt;
      &lt;td&gt;968253.587&lt;/td&gt;
      &lt;td&gt;8645.121312&lt;/td&gt;
      &lt;td&gt;1114&lt;/td&gt;
      &lt;td&gt;9.946429&lt;/td&gt;
      &lt;td&gt;206&lt;/td&gt;
      &lt;td&gt;1.839286&lt;/td&gt;
      &lt;td&gt;164&lt;/td&gt;
      &lt;td&gt;1.464286&lt;/td&gt;
      &lt;td&gt;230&lt;/td&gt;
      &lt;td&gt;2.053571&lt;/td&gt;
      &lt;td&gt;3430&lt;/td&gt;
      &lt;td&gt;30.625000&lt;/td&gt;
      &lt;td&gt;7475&lt;/td&gt;
      &lt;td&gt;25.775862&lt;/td&gt;
      &lt;td&gt;290&lt;/td&gt;
      &lt;td&gt;2826851.820&lt;/td&gt;
      &lt;td&gt;9747.764897&lt;/td&gt;
      &lt;td&gt;3059&lt;/td&gt;
      &lt;td&gt;10.548276&lt;/td&gt;
      &lt;td&gt;692&lt;/td&gt;
      &lt;td&gt;2.386207&lt;/td&gt;
      &lt;td&gt;535&lt;/td&gt;
      &lt;td&gt;1.844828&lt;/td&gt;
      &lt;td&gt;567&lt;/td&gt;
      &lt;td&gt;1.955172&lt;/td&gt;
      &lt;td&gt;10075&lt;/td&gt;
      &lt;td&gt;34.741379&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6ERcO7aqAKvrQ2CAvah79dVC7tJVZSjNti1MBfpNVW4=&lt;/th&gt;
      &lt;td&gt;2017-02-17&lt;/td&gt;
      &lt;td&gt;2015-01-01&lt;/td&gt;
      &lt;td&gt;778&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10363.972&lt;/td&gt;
      &lt;td&gt;10363.972&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;43.800000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;68118.548&lt;/td&gt;
      &lt;td&gt;13623.70960&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.200000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.40&lt;/td&gt;
      &lt;td&gt;289&lt;/td&gt;
      &lt;td&gt;57.800000&lt;/td&gt;
      &lt;td&gt;480&lt;/td&gt;
      &lt;td&gt;48.000000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;121094.373&lt;/td&gt;
      &lt;td&gt;12109.437300&lt;/td&gt;
      &lt;td&gt;83&lt;/td&gt;
      &lt;td&gt;8.300000&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;2.400000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.900000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.100000&lt;/td&gt;
      &lt;td&gt;498&lt;/td&gt;
      &lt;td&gt;49.800000&lt;/td&gt;
      &lt;td&gt;870&lt;/td&gt;
      &lt;td&gt;43.500000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;210674.360&lt;/td&gt;
      &lt;td&gt;10533.718000&lt;/td&gt;
      &lt;td&gt;190&lt;/td&gt;
      &lt;td&gt;9.500000&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;1.850000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;1.400000&lt;/td&gt;
      &lt;td&gt;827&lt;/td&gt;
      &lt;td&gt;41.350000&lt;/td&gt;
      &lt;td&gt;2390&lt;/td&gt;
      &lt;td&gt;44.259259&lt;/td&gt;
      &lt;td&gt;54&lt;/td&gt;
      &lt;td&gt;604775.769&lt;/td&gt;
      &lt;td&gt;11199.551278&lt;/td&gt;
      &lt;td&gt;490&lt;/td&gt;
      &lt;td&gt;9.074074&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;2.148148&lt;/td&gt;
      &lt;td&gt;79&lt;/td&gt;
      &lt;td&gt;1.462963&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
      &lt;td&gt;1.703704&lt;/td&gt;
      &lt;td&gt;2318&lt;/td&gt;
      &lt;td&gt;42.925926&lt;/td&gt;
      &lt;td&gt;4427&lt;/td&gt;
      &lt;td&gt;41.764151&lt;/td&gt;
      &lt;td&gt;106&lt;/td&gt;
      &lt;td&gt;1186775.568&lt;/td&gt;
      &lt;td&gt;11195.995925&lt;/td&gt;
      &lt;td&gt;750&lt;/td&gt;
      &lt;td&gt;7.075472&lt;/td&gt;
      &lt;td&gt;212&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;143&lt;/td&gt;
      &lt;td&gt;1.349057&lt;/td&gt;
      &lt;td&gt;179&lt;/td&gt;
      &lt;td&gt;1.688679&lt;/td&gt;
      &lt;td&gt;4631&lt;/td&gt;
      &lt;td&gt;43.688679&lt;/td&gt;
      &lt;td&gt;9683&lt;/td&gt;
      &lt;td&gt;41.917749&lt;/td&gt;
      &lt;td&gt;231&lt;/td&gt;
      &lt;td&gt;2677487.134&lt;/td&gt;
      &lt;td&gt;11590.853394&lt;/td&gt;
      &lt;td&gt;1323&lt;/td&gt;
      &lt;td&gt;5.727273&lt;/td&gt;
      &lt;td&gt;425&lt;/td&gt;
      &lt;td&gt;1.839827&lt;/td&gt;
      &lt;td&gt;340&lt;/td&gt;
      &lt;td&gt;1.471861&lt;/td&gt;
      &lt;td&gt;396&lt;/td&gt;
      &lt;td&gt;1.714286&lt;/td&gt;
      &lt;td&gt;10499&lt;/td&gt;
      &lt;td&gt;45.450216&lt;/td&gt;
      &lt;td&gt;17589&lt;/td&gt;
      &lt;td&gt;35.605263&lt;/td&gt;
      &lt;td&gt;494&lt;/td&gt;
      &lt;td&gt;4836694.885&lt;/td&gt;
      &lt;td&gt;9790.880334&lt;/td&gt;
      &lt;td&gt;2799&lt;/td&gt;
      &lt;td&gt;5.665992&lt;/td&gt;
      &lt;td&gt;1023&lt;/td&gt;
      &lt;td&gt;2.070850&lt;/td&gt;
      &lt;td&gt;772&lt;/td&gt;
      &lt;td&gt;1.562753&lt;/td&gt;
      &lt;td&gt;770&lt;/td&gt;
      &lt;td&gt;1.558704&lt;/td&gt;
      &lt;td&gt;18443&lt;/td&gt;
      &lt;td&gt;37.334008&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Xt9VAHNtHuST21tkcZSnGKjwv8vF8/COnsf6z28+fKk=&lt;/th&gt;
      &lt;td&gt;2017-02-28&lt;/td&gt;
      &lt;td&gt;2016-09-08&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;86&lt;/td&gt;
      &lt;td&gt;86&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;21094.770&lt;/td&gt;
      &lt;td&gt;21094.770&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;133&lt;/td&gt;
      &lt;td&gt;26.600000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;32936.237&lt;/td&gt;
      &lt;td&gt;6587.24740&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1.600000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.400000&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1.60&lt;/td&gt;
      &lt;td&gt;112&lt;/td&gt;
      &lt;td&gt;22.400000&lt;/td&gt;
      &lt;td&gt;313&lt;/td&gt;
      &lt;td&gt;31.300000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;72406.047&lt;/td&gt;
      &lt;td&gt;7240.604700&lt;/td&gt;
      &lt;td&gt;86&lt;/td&gt;
      &lt;td&gt;8.600000&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;1.800000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.100000&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;1.300000&lt;/td&gt;
      &lt;td&gt;251&lt;/td&gt;
      &lt;td&gt;25.100000&lt;/td&gt;
      &lt;td&gt;493&lt;/td&gt;
      &lt;td&gt;21.434783&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;114170.059&lt;/td&gt;
      &lt;td&gt;4963.915609&lt;/td&gt;
      &lt;td&gt;126&lt;/td&gt;
      &lt;td&gt;5.478261&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;1.173913&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;0.695652&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;0.695652&lt;/td&gt;
      &lt;td&gt;395&lt;/td&gt;
      &lt;td&gt;17.173913&lt;/td&gt;
      &lt;td&gt;2060&lt;/td&gt;
      &lt;td&gt;34.915254&lt;/td&gt;
      &lt;td&gt;59&lt;/td&gt;
      &lt;td&gt;406402.278&lt;/td&gt;
      &lt;td&gt;6888.174203&lt;/td&gt;
      &lt;td&gt;781&lt;/td&gt;
      &lt;td&gt;13.237288&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;1.966102&lt;/td&gt;
      &lt;td&gt;75&lt;/td&gt;
      &lt;td&gt;1.271186&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;1.169492&lt;/td&gt;
      &lt;td&gt;1404&lt;/td&gt;
      &lt;td&gt;23.796610&lt;/td&gt;
      &lt;td&gt;3840&lt;/td&gt;
      &lt;td&gt;37.281553&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;799700.121&lt;/td&gt;
      &lt;td&gt;7764.078845&lt;/td&gt;
      &lt;td&gt;1387&lt;/td&gt;
      &lt;td&gt;13.466019&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;2.126214&lt;/td&gt;
      &lt;td&gt;159&lt;/td&gt;
      &lt;td&gt;1.543689&lt;/td&gt;
      &lt;td&gt;168&lt;/td&gt;
      &lt;td&gt;1.631068&lt;/td&gt;
      &lt;td&gt;2696&lt;/td&gt;
      &lt;td&gt;26.174757&lt;/td&gt;
      &lt;td&gt;3840&lt;/td&gt;
      &lt;td&gt;37.281553&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;799700.121&lt;/td&gt;
      &lt;td&gt;7764.078845&lt;/td&gt;
      &lt;td&gt;1387&lt;/td&gt;
      &lt;td&gt;13.466019&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;2.126214&lt;/td&gt;
      &lt;td&gt;159&lt;/td&gt;
      &lt;td&gt;1.543689&lt;/td&gt;
      &lt;td&gt;168&lt;/td&gt;
      &lt;td&gt;1.631068&lt;/td&gt;
      &lt;td&gt;2696&lt;/td&gt;
      &lt;td&gt;26.174757&lt;/td&gt;
      &lt;td&gt;3840&lt;/td&gt;
      &lt;td&gt;37.281553&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;799700.121&lt;/td&gt;
      &lt;td&gt;7764.078845&lt;/td&gt;
      &lt;td&gt;1387&lt;/td&gt;
      &lt;td&gt;13.466019&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;2.126214&lt;/td&gt;
      &lt;td&gt;159&lt;/td&gt;
      &lt;td&gt;1.543689&lt;/td&gt;
      &lt;td&gt;168&lt;/td&gt;
      &lt;td&gt;1.631068&lt;/td&gt;
      &lt;td&gt;2696&lt;/td&gt;
      &lt;td&gt;26.174757&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;zSgTJqoosTiFF7ZZi1DPTHgxLbnd99IgOEsTIDCcZHc=&lt;/th&gt;
      &lt;td&gt;2017-02-13&lt;/td&gt;
      &lt;td&gt;2015-01-01&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2803.117&lt;/td&gt;
      &lt;td&gt;2803.117&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;12.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;7935.679&lt;/td&gt;
      &lt;td&gt;1983.91975&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.750000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.25&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;7.750000&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;14.428571&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;17605.267&lt;/td&gt;
      &lt;td&gt;2515.038143&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;5.857143&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.714286&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.571429&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;10.142857&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;40235.862&lt;/td&gt;
      &lt;td&gt;2873.990143&lt;/td&gt;
      &lt;td&gt;148&lt;/td&gt;
      &lt;td&gt;10.571429&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1.071429&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.642857&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;152&lt;/td&gt;
      &lt;td&gt;10.857143&lt;/td&gt;
      &lt;td&gt;759&lt;/td&gt;
      &lt;td&gt;23.000000&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;124239.481&lt;/td&gt;
      &lt;td&gt;3764.832758&lt;/td&gt;
      &lt;td&gt;284&lt;/td&gt;
      &lt;td&gt;8.606061&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;0.848485&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
      &lt;td&gt;466&lt;/td&gt;
      &lt;td&gt;14.121212&lt;/td&gt;
      &lt;td&gt;2722&lt;/td&gt;
      &lt;td&gt;32.023529&lt;/td&gt;
      &lt;td&gt;85&lt;/td&gt;
      &lt;td&gt;461324.690&lt;/td&gt;
      &lt;td&gt;5427.349294&lt;/td&gt;
      &lt;td&gt;1185&lt;/td&gt;
      &lt;td&gt;13.941176&lt;/td&gt;
      &lt;td&gt;96&lt;/td&gt;
      &lt;td&gt;1.129412&lt;/td&gt;
      &lt;td&gt;70&lt;/td&gt;
      &lt;td&gt;0.823529&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;1.447059&lt;/td&gt;
      &lt;td&gt;1712&lt;/td&gt;
      &lt;td&gt;20.141176&lt;/td&gt;
      &lt;td&gt;9576&lt;/td&gt;
      &lt;td&gt;46.712195&lt;/td&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;1931032.095&lt;/td&gt;
      &lt;td&gt;9419.668756&lt;/td&gt;
      &lt;td&gt;3431&lt;/td&gt;
      &lt;td&gt;16.736585&lt;/td&gt;
      &lt;td&gt;401&lt;/td&gt;
      &lt;td&gt;1.956098&lt;/td&gt;
      &lt;td&gt;278&lt;/td&gt;
      &lt;td&gt;1.356098&lt;/td&gt;
      &lt;td&gt;376&lt;/td&gt;
      &lt;td&gt;1.834146&lt;/td&gt;
      &lt;td&gt;7359&lt;/td&gt;
      &lt;td&gt;35.897561&lt;/td&gt;
      &lt;td&gt;16913&lt;/td&gt;
      &lt;td&gt;57.921233&lt;/td&gt;
      &lt;td&gt;292&lt;/td&gt;
      &lt;td&gt;3583828.437&lt;/td&gt;
      &lt;td&gt;12273.385058&lt;/td&gt;
      &lt;td&gt;5126&lt;/td&gt;
      &lt;td&gt;17.554795&lt;/td&gt;
      &lt;td&gt;591&lt;/td&gt;
      &lt;td&gt;2.023973&lt;/td&gt;
      &lt;td&gt;440&lt;/td&gt;
      &lt;td&gt;1.506849&lt;/td&gt;
      &lt;td&gt;559&lt;/td&gt;
      &lt;td&gt;1.914384&lt;/td&gt;
      &lt;td&gt;13815&lt;/td&gt;
      &lt;td&gt;47.311644&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Good, we get the expected number of columns.&lt;/p&gt;
&lt;h1&gt;5. Transaction Data: Preparation and Feature Extraction&lt;/h1&gt;
&lt;p&gt;Having completed feature extraction for user logs, we now move on to creating features for the transaction data.&lt;/p&gt;
&lt;p&gt;We begin grouping the data by user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Grouping by the member (msno)&lt;/span&gt;
&lt;span class="n"&gt;transactions_gb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;transaction_date&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# How many groups i.e. members i.e. msno&amp;#39;s. We&amp;#39;re good if this is the same number as the members table&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Groups/msnos&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_gb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groups&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;99825 Groups/msnos&lt;/span&gt;
&lt;span class="err"&gt;9 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We plan to create the following features from the transactions table:
* Simple featuers from the latest transaction
    * Plan no of days
    * plan total amount paid
    * plan list price
    * Is_auto_renew
    * is_cancel
* Synthetic features from the latest transaction
    * Plan actual amount paid/day 
* Aggregate values
    * Total number of plan days
    * Total of all the amounts paid for the plan
* Comparing transactions
    * Plan day difference among the latest and previous transaction
    * Amount paid/day difference among the latest and previous transaction&lt;/p&gt;
&lt;p&gt;We begin by creating the total_plan_days and total_amount_paid:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Features: Total_plan_days, Total_amount_paid&lt;/span&gt;
&lt;span class="n"&gt;transactions_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_gb&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;agg&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;actual_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;total_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;actual_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;total_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,})&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;99825 Entries in the DF: &lt;/span&gt;
&lt;span class="err"&gt;2 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;+++l/EXNMLTijfLBa8p2TUVVVp2aFGSuUI/h7mLmthw=&lt;/th&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;2831&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++5nv+2nsvrWM7dOT+ZiWJ5uTZOzQS0NEvqu3jidTjU=&lt;/th&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;297&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++7IULiyKbNc8jllqhRuyKZjX1J4mPF4tsudFCJfv4k=&lt;/th&gt;
      &lt;td&gt;513&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++Ck01c3EF07Ejek2jfXlKut+sEfg+0ry+A5uWeL9vY=&lt;/th&gt;
      &lt;td&gt;270&lt;/td&gt;
      &lt;td&gt;891&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++FPL1dXZBXC3Cf6gE0HQiIHg1Pd+DBdK7w52xcUmX0=&lt;/th&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;2235&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we add amount_paid_per_day for a user's entire tenure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Plan actual amount paid/day for all the transactions by a user&lt;/span&gt;
&lt;span class="c1"&gt;# Adding the collumn amount_paid_per_day&lt;/span&gt;
&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                                &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;99825 Entries in the DF: &lt;/span&gt;
&lt;span class="err"&gt;3 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;+++l/EXNMLTijfLBa8p2TUVVVp2aFGSuUI/h7mLmthw=&lt;/th&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;2831&lt;/td&gt;
      &lt;td&gt;5.213628&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++5nv+2nsvrWM7dOT+ZiWJ5uTZOzQS0NEvqu3jidTjU=&lt;/th&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;297&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++7IULiyKbNc8jllqhRuyKZjX1J4mPF4tsudFCJfv4k=&lt;/th&gt;
      &lt;td&gt;513&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
      &lt;td&gt;5.228070&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++Ck01c3EF07Ejek2jfXlKut+sEfg+0ry+A5uWeL9vY=&lt;/th&gt;
      &lt;td&gt;270&lt;/td&gt;
      &lt;td&gt;891&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++FPL1dXZBXC3Cf6gE0HQiIHg1Pd+DBdK7w52xcUmX0=&lt;/th&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;2235&lt;/td&gt;
      &lt;td&gt;4.890591&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we add latest_payment_method_id, latest_plan_days, latest_plan_list_price, latest_amount_paid, latest_auto_renew, latest_transaction_date, latest_expire_date, and latest_is_cancel.  We accomplish this by picking from the bottom of the ordered (by date) rows in groups.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Features: latest transaction, renaming the collumns&lt;/span&gt;
&lt;span class="c1"&gt;# V1- Fixed the name for plan_list_price collumn (now called latest_plan_list_price)&lt;/span&gt;

&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transactions_gb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_method_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_payment_method_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s1"&gt;&amp;#39;payment_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s1"&gt;&amp;#39;plan_list_price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_plan_list_price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s1"&gt;&amp;#39;actual_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s1"&gt;&amp;#39;is_auto_renew&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_auto_renew&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                                                  &lt;span class="s1"&gt;&amp;#39;transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s1"&gt;&amp;#39;membership_expire_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_expire_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                                  &lt;span class="s1"&gt;&amp;#39;is_cancel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;latest_is_cancel&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;# Index by msno&lt;/span&gt;
&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;99825 Entries in the DF: &lt;/span&gt;
&lt;span class="err"&gt;8 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;z1Lm/BlRQraiaWJ7RaQWe0+l0Z40ACj7W+zk29FiaS4=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150102&lt;/td&gt;
      &lt;td&gt;20150503&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IwE/pih8PuqrY/rsnoZ/4TazDliyH9S8VWNc2/d7mJg=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150102&lt;/td&gt;
      &lt;td&gt;20150702&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;ea9rY0uEPY0ImD2QVbYFb+z3zi5wniKWMUM1V8os7OY=&lt;/th&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;1788&lt;/td&gt;
      &lt;td&gt;1788&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150104&lt;/td&gt;
      &lt;td&gt;20170213&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;plhzwjmNJp0HW04NidfVa35JE216RaFYpSeUCwT11zQ=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150120&lt;/td&gt;
      &lt;td&gt;20170103&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;PbSQ2KxR4gRnzjsRd8Up75qMYb70iuMwGk10/jPRljk=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;360&lt;/td&gt;
      &lt;td&gt;1200&lt;/td&gt;
      &lt;td&gt;1200&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150123&lt;/td&gt;
      &lt;td&gt;20170212&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we add latest_amount_paid_per_day:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Plan actual amount paid/day for the latest transaction&lt;/span&gt;
&lt;span class="c1"&gt;# Adding the collumn amount_paid_per_day&lt;/span&gt;

&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                                &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;99825 Entries in the DF: &lt;/span&gt;
&lt;span class="err"&gt;9 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;z1Lm/BlRQraiaWJ7RaQWe0+l0Z40ACj7W+zk29FiaS4=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150102&lt;/td&gt;
      &lt;td&gt;20150503&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;IwE/pih8PuqrY/rsnoZ/4TazDliyH9S8VWNc2/d7mJg=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150102&lt;/td&gt;
      &lt;td&gt;20150702&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;ea9rY0uEPY0ImD2QVbYFb+z3zi5wniKWMUM1V8os7OY=&lt;/th&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;1788&lt;/td&gt;
      &lt;td&gt;1788&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150104&lt;/td&gt;
      &lt;td&gt;20170213&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.360976&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;plhzwjmNJp0HW04NidfVa35JE216RaFYpSeUCwT11zQ=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150120&lt;/td&gt;
      &lt;td&gt;20170103&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;PbSQ2KxR4gRnzjsRd8Up75qMYb70iuMwGk10/jPRljk=&lt;/th&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;360&lt;/td&gt;
      &lt;td&gt;1200&lt;/td&gt;
      &lt;td&gt;1200&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;20150123&lt;/td&gt;
      &lt;td&gt;20170212&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.333333&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we compare two different items in our transaction data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Plan duration difference among the last 2 transactons&lt;/li&gt;
&lt;li&gt;Cost difference among the last 2 transactions&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Getting the 2 latest transactions and grouping by msno again&lt;/span&gt;
&lt;span class="n"&gt;latest_transaction2_gb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transactions_gb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Getting the latest but one transaction&lt;/span&gt;
&lt;span class="n"&gt;latest2_transaction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;latest_transaction2_gb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Index by msno&lt;/span&gt;
&lt;span class="n"&gt;latest2_transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Amount paid per day for the 2nd latest transaction&lt;/span&gt;
&lt;span class="n"&gt;latest2_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest2_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest2_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;actual_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                                &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;latest2_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Difference in the renewal length among the latest 2 transactions&lt;/span&gt;
&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diff_renewal_duration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                                &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;latest2_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_plan_days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Different in plan cost among the latest 2 transactions&lt;/span&gt;
&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diff_plan_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
                                                          &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;latest2_transaction&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest2_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;ipykernel_launcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;SettingWithCopyWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;trying&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;copy&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;slice&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Try&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;row_indexer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;col_indexer&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;instead&lt;/span&gt;

&lt;span class="n"&gt;See&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;caveats&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;documentation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pydata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;stable&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;indexing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;indexing&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;view&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;versus&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;copy&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


&lt;span class="mi"&gt;99825&lt;/span&gt; &lt;span class="n"&gt;Entries&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;DF&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;+++l/EXNMLTijfLBa8p2TUVVVp2aFGSuUI/h7mLmthw=&lt;/th&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;2831&lt;/td&gt;
      &lt;td&gt;5.213628&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++5nv+2nsvrWM7dOT+ZiWJ5uTZOzQS0NEvqu3jidTjU=&lt;/th&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;297&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++7IULiyKbNc8jllqhRuyKZjX1J4mPF4tsudFCJfv4k=&lt;/th&gt;
      &lt;td&gt;513&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
      &lt;td&gt;5.228070&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++Ck01c3EF07Ejek2jfXlKut+sEfg+0ry+A5uWeL9vY=&lt;/th&gt;
      &lt;td&gt;270&lt;/td&gt;
      &lt;td&gt;891&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++FPL1dXZBXC3Cf6gE0HQiIHg1Pd+DBdK7w52xcUmX0=&lt;/th&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;2235&lt;/td&gt;
      &lt;td&gt;4.890591&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we join all the features into a single data frame:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Get all transaction features in a single DF&lt;/span&gt;
&lt;span class="n"&gt;transactions_features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;latest_transaction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Test&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;99825 Entries in the DF: &lt;/span&gt;
&lt;span class="err"&gt;14 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;+++l/EXNMLTijfLBa8p2TUVVVp2aFGSuUI/h7mLmthw=&lt;/th&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;2831&lt;/td&gt;
      &lt;td&gt;5.213628&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170131&lt;/td&gt;
      &lt;td&gt;20170319&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++5nv+2nsvrWM7dOT+ZiWJ5uTZOzQS0NEvqu3jidTjU=&lt;/th&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;297&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170201&lt;/td&gt;
      &lt;td&gt;20170301&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++7IULiyKbNc8jllqhRuyKZjX1J4mPF4tsudFCJfv4k=&lt;/th&gt;
      &lt;td&gt;513&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
      &lt;td&gt;5.228070&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170201&lt;/td&gt;
      &lt;td&gt;20170301&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++Ck01c3EF07Ejek2jfXlKut+sEfg+0ry+A5uWeL9vY=&lt;/th&gt;
      &lt;td&gt;270&lt;/td&gt;
      &lt;td&gt;891&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170214&lt;/td&gt;
      &lt;td&gt;20170314&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;++FPL1dXZBXC3Cf6gE0HQiIHg1Pd+DBdK7w52xcUmX0=&lt;/th&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;2235&lt;/td&gt;
      &lt;td&gt;4.890591&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20160225&lt;/td&gt;
      &lt;td&gt;20160225&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h1&gt;6. Joining Features and Data Manipulation&lt;/h1&gt;
&lt;h2&gt;Joining Features&lt;/h2&gt;
&lt;p&gt;Having completed features by user from the User Logs and Transactions tables, we will now join the features from these tables together with the Members and Labels (a.k.a., train) tables into a single data frame for predictive modeling.&lt;/p&gt;
&lt;p&gt;First, we'll join the Members and Labels together:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Join members and labels files&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;gender&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we join the User Logs features table with the combined Members and the Labels table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Note, the warning is okay, and actually helps us by flattening our column headers.&lt;/span&gt;

&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;C:\Users\AOlson\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\core\reshape\merge.py:558: UserWarning: merging between different levels can give an unintended result (1 levels on the left, 3 on the right)&lt;/span&gt;
&lt;span class="c"&gt;  warnings.warn(msg, UserWarning)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;gender&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;(date_features, date, max_date)&lt;/th&gt;
      &lt;th&gt;(date_features, date, min_date)&lt;/th&gt;
      &lt;th&gt;(date_features, date, listening_tenure)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_1, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_7, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_14, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_31, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_90, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_180, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_365, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_100, mean)&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-24&lt;/td&gt;
      &lt;td&gt;2017-01-20&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3158.450&lt;/td&gt;
      &lt;td&gt;789.612500&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;8.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2.250000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-27&lt;/td&gt;
      &lt;td&gt;2016-09-07&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;32.571429&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;32731.138&lt;/td&gt;
      &lt;td&gt;4675.876857&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.142857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;2.857143&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;13.571429&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;36.571429&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;98422.408&lt;/td&gt;
      &lt;td&gt;7030.172000&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;5.071429&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;2.428571&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;1044&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;178909.861&lt;/td&gt;
      &lt;td&gt;6169.305552&lt;/td&gt;
      &lt;td&gt;656&lt;/td&gt;
      &lt;td&gt;22.620690&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;4.655172&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;2.103448&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.551724&lt;/td&gt;
      &lt;td&gt;571&lt;/td&gt;
      &lt;td&gt;19.689655&lt;/td&gt;
      &lt;td&gt;4298&lt;/td&gt;
      &lt;td&gt;58.876712&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;632743.845&lt;/td&gt;
      &lt;td&gt;8667.723904&lt;/td&gt;
      &lt;td&gt;2717&lt;/td&gt;
      &lt;td&gt;37.219178&lt;/td&gt;
      &lt;td&gt;393&lt;/td&gt;
      &lt;td&gt;5.383562&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;2.575342&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;2.589041&lt;/td&gt;
      &lt;td&gt;2094&lt;/td&gt;
      &lt;td&gt;28.684932&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-26&lt;/td&gt;
      &lt;td&gt;2016-09-02&lt;/td&gt;
      &lt;td&gt;177&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;243&lt;/td&gt;
      &lt;td&gt;34.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;60581.740&lt;/td&gt;
      &lt;td&gt;8654.534286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;489&lt;/td&gt;
      &lt;td&gt;34.928571&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;122772.792&lt;/td&gt;
      &lt;td&gt;8769.485143&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;2.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.357143&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.785714&lt;/td&gt;
      &lt;td&gt;476&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;32.107143&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;231622.820&lt;/td&gt;
      &lt;td&gt;8272.243571&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;2.607143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.392857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;31.892857&lt;/td&gt;
      &lt;td&gt;2396&lt;/td&gt;
      &lt;td&gt;35.235294&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;770040.608&lt;/td&gt;
      &lt;td&gt;11324.126588&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;2.647059&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;0.485294&lt;/td&gt;
      &lt;td&gt;2953&lt;/td&gt;
      &lt;td&gt;43.426471&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-28&lt;/td&gt;
      &lt;td&gt;2016-10-28&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;24.200000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;30054.147&lt;/td&gt;
      &lt;td&gt;6010.829400&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;5.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.400000&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;24.600000&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
      &lt;td&gt;17.454545&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;43518.795&lt;/td&gt;
      &lt;td&gt;3956.254091&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;15.818182&lt;/td&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;17.576923&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;111841.140&lt;/td&gt;
      &lt;td&gt;4301.582308&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;3.076923&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.884615&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;456&lt;/td&gt;
      &lt;td&gt;17.538462&lt;/td&gt;
      &lt;td&gt;1229&lt;/td&gt;
      &lt;td&gt;21.189655&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;287422.839&lt;/td&gt;
      &lt;td&gt;4955.566190&lt;/td&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;1.396552&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0.948276&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1.034483&lt;/td&gt;
      &lt;td&gt;1145&lt;/td&gt;
      &lt;td&gt;19.741379&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2016-10-26&lt;/td&gt;
      &lt;td&gt;2016-10-04&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2399.824&lt;/td&gt;
      &lt;td&gt;1199.912000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2630.818&lt;/td&gt;
      &lt;td&gt;657.704500&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we'll join in our Transaction features:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Joining feature DF&amp;#39;s&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inner&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Entries in the DF: &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; Features&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;88544 Entries in the DF: &lt;/span&gt;
&lt;span class="err"&gt;143 Features&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;gender&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;(date_features, date, max_date)&lt;/th&gt;
      &lt;th&gt;(date_features, date, min_date)&lt;/th&gt;
      &lt;th&gt;(date_features, date, listening_tenure)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_1, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_1, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_7, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_7, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_14, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_14, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_31, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_31, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_90, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_90, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_180, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_180, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_365, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_365, num_100, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_unq, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_unq, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_unq, count)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, total_secs, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, total_secs, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_25, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_25, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_50, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_50, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_75, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_75, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_985, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_985, mean)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_100, sum)&lt;/th&gt;
      &lt;th&gt;(within_days_9999, num_100, mean)&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-24&lt;/td&gt;
      &lt;td&gt;2017-01-20&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3158.450&lt;/td&gt;
      &lt;td&gt;789.612500&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;8.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2.250000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170220&lt;/td&gt;
      &lt;td&gt;20170319&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-27&lt;/td&gt;
      &lt;td&gt;2016-09-07&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;32.571429&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;32731.138&lt;/td&gt;
      &lt;td&gt;4675.876857&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.142857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;2.857143&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;13.571429&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;36.571429&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;98422.408&lt;/td&gt;
      &lt;td&gt;7030.172000&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;5.071429&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;2.428571&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;1044&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;178909.861&lt;/td&gt;
      &lt;td&gt;6169.305552&lt;/td&gt;
      &lt;td&gt;656&lt;/td&gt;
      &lt;td&gt;22.620690&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;4.655172&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;2.103448&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.551724&lt;/td&gt;
      &lt;td&gt;571&lt;/td&gt;
      &lt;td&gt;19.689655&lt;/td&gt;
      &lt;td&gt;4298&lt;/td&gt;
      &lt;td&gt;58.876712&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;632743.845&lt;/td&gt;
      &lt;td&gt;8667.723904&lt;/td&gt;
      &lt;td&gt;2717&lt;/td&gt;
      &lt;td&gt;37.219178&lt;/td&gt;
      &lt;td&gt;393&lt;/td&gt;
      &lt;td&gt;5.383562&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;2.575342&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;2.589041&lt;/td&gt;
      &lt;td&gt;2094&lt;/td&gt;
      &lt;td&gt;28.684932&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170207&lt;/td&gt;
      &lt;td&gt;20170306&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-26&lt;/td&gt;
      &lt;td&gt;2016-09-02&lt;/td&gt;
      &lt;td&gt;177&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;243&lt;/td&gt;
      &lt;td&gt;34.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;60581.740&lt;/td&gt;
      &lt;td&gt;8654.534286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;489&lt;/td&gt;
      &lt;td&gt;34.928571&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;122772.792&lt;/td&gt;
      &lt;td&gt;8769.485143&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;2.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.357143&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.785714&lt;/td&gt;
      &lt;td&gt;476&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;32.107143&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;231622.820&lt;/td&gt;
      &lt;td&gt;8272.243571&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;2.607143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.392857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;31.892857&lt;/td&gt;
      &lt;td&gt;2396&lt;/td&gt;
      &lt;td&gt;35.235294&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;770040.608&lt;/td&gt;
      &lt;td&gt;11324.126588&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;2.647059&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;0.485294&lt;/td&gt;
      &lt;td&gt;2953&lt;/td&gt;
      &lt;td&gt;43.426471&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170202&lt;/td&gt;
      &lt;td&gt;20170301&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-28&lt;/td&gt;
      &lt;td&gt;2016-10-28&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;24.200000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;30054.147&lt;/td&gt;
      &lt;td&gt;6010.829400&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;5.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.400000&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;24.600000&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
      &lt;td&gt;17.454545&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;43518.795&lt;/td&gt;
      &lt;td&gt;3956.254091&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;15.818182&lt;/td&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;17.576923&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;111841.140&lt;/td&gt;
      &lt;td&gt;4301.582308&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;3.076923&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.884615&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;456&lt;/td&gt;
      &lt;td&gt;17.538462&lt;/td&gt;
      &lt;td&gt;1229&lt;/td&gt;
      &lt;td&gt;21.189655&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;287422.839&lt;/td&gt;
      &lt;td&gt;4955.566190&lt;/td&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;1.396552&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0.948276&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1.034483&lt;/td&gt;
      &lt;td&gt;1145&lt;/td&gt;
      &lt;td&gt;19.741379&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;596&lt;/td&gt;
      &lt;td&gt;3.973333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170228&lt;/td&gt;
      &lt;td&gt;20170327&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2016-10-26&lt;/td&gt;
      &lt;td&gt;2016-10-04&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2399.824&lt;/td&gt;
      &lt;td&gt;1199.912000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2630.818&lt;/td&gt;
      &lt;td&gt;657.704500&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;645&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170204&lt;/td&gt;
      &lt;td&gt;20170303&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h2&gt;Data Manipulation&lt;/h2&gt;
&lt;p&gt;Having joined all the features into a single file, we will now perform some data manipulation tasks to prepare the table for predictive modeling.&lt;/p&gt;
&lt;p&gt;First, we will fix the column headers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Fix column headers&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;gender&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-24&lt;/td&gt;
      &lt;td&gt;2017-01-20&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3158.450&lt;/td&gt;
      &lt;td&gt;789.612500&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;8.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2.250000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170220&lt;/td&gt;
      &lt;td&gt;20170319&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-27&lt;/td&gt;
      &lt;td&gt;2016-09-07&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;32.571429&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;32731.138&lt;/td&gt;
      &lt;td&gt;4675.876857&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.142857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;2.857143&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;13.571429&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;36.571429&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;98422.408&lt;/td&gt;
      &lt;td&gt;7030.172000&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;5.071429&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;2.428571&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;1044&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;178909.861&lt;/td&gt;
      &lt;td&gt;6169.305552&lt;/td&gt;
      &lt;td&gt;656&lt;/td&gt;
      &lt;td&gt;22.620690&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;4.655172&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;2.103448&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.551724&lt;/td&gt;
      &lt;td&gt;571&lt;/td&gt;
      &lt;td&gt;19.689655&lt;/td&gt;
      &lt;td&gt;4298&lt;/td&gt;
      &lt;td&gt;58.876712&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;632743.845&lt;/td&gt;
      &lt;td&gt;8667.723904&lt;/td&gt;
      &lt;td&gt;2717&lt;/td&gt;
      &lt;td&gt;37.219178&lt;/td&gt;
      &lt;td&gt;393&lt;/td&gt;
      &lt;td&gt;5.383562&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;2.575342&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;2.589041&lt;/td&gt;
      &lt;td&gt;2094&lt;/td&gt;
      &lt;td&gt;28.684932&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170207&lt;/td&gt;
      &lt;td&gt;20170306&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-26&lt;/td&gt;
      &lt;td&gt;2016-09-02&lt;/td&gt;
      &lt;td&gt;177&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;243&lt;/td&gt;
      &lt;td&gt;34.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;60581.740&lt;/td&gt;
      &lt;td&gt;8654.534286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;489&lt;/td&gt;
      &lt;td&gt;34.928571&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;122772.792&lt;/td&gt;
      &lt;td&gt;8769.485143&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;2.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.357143&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.785714&lt;/td&gt;
      &lt;td&gt;476&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;32.107143&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;231622.820&lt;/td&gt;
      &lt;td&gt;8272.243571&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;2.607143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.392857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;31.892857&lt;/td&gt;
      &lt;td&gt;2396&lt;/td&gt;
      &lt;td&gt;35.235294&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;770040.608&lt;/td&gt;
      &lt;td&gt;11324.126588&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;2.647059&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;0.485294&lt;/td&gt;
      &lt;td&gt;2953&lt;/td&gt;
      &lt;td&gt;43.426471&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170202&lt;/td&gt;
      &lt;td&gt;20170301&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017-02-28&lt;/td&gt;
      &lt;td&gt;2016-10-28&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;24.200000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;30054.147&lt;/td&gt;
      &lt;td&gt;6010.829400&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;5.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.400000&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;24.600000&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
      &lt;td&gt;17.454545&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;43518.795&lt;/td&gt;
      &lt;td&gt;3956.254091&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;15.818182&lt;/td&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;17.576923&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;111841.140&lt;/td&gt;
      &lt;td&gt;4301.582308&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;3.076923&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.884615&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;456&lt;/td&gt;
      &lt;td&gt;17.538462&lt;/td&gt;
      &lt;td&gt;1229&lt;/td&gt;
      &lt;td&gt;21.189655&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;287422.839&lt;/td&gt;
      &lt;td&gt;4955.566190&lt;/td&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;1.396552&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0.948276&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1.034483&lt;/td&gt;
      &lt;td&gt;1145&lt;/td&gt;
      &lt;td&gt;19.741379&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;596&lt;/td&gt;
      &lt;td&gt;3.973333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170228&lt;/td&gt;
      &lt;td&gt;20170327&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2016-10-26&lt;/td&gt;
      &lt;td&gt;2016-10-04&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2399.824&lt;/td&gt;
      &lt;td&gt;1199.912000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2630.818&lt;/td&gt;
      &lt;td&gt;657.704500&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;645&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170204&lt;/td&gt;
      &lt;td&gt;20170303&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we will change infinite and 'na' values to -9999, wildly different than other values in the range, so that our algorithms see them as 'different'.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Handle bad values&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diff_plan_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;diff_plan_amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fillna&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;any&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;city                                 False&lt;/span&gt;
&lt;span class="err"&gt;bd                                   False&lt;/span&gt;
&lt;span class="err"&gt;gender                                True&lt;/span&gt;
&lt;span class="err"&gt;registered_via                       False&lt;/span&gt;
&lt;span class="err"&gt;registration_init_time               False&lt;/span&gt;
&lt;span class="err"&gt;is_churn                             False&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date            False&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date            False&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatelistening_tenure    False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqsum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqmean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqcount            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1total_secssum           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1total_secsmean          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_25sum               False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_25mean              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_50sum               False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_50mean              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_75sum               False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_75mean              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_985sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_985mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_100sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_100mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqsum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqmean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqcount            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7total_secssum           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7total_secsmean          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_25sum               False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_25mean              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_50sum               False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_50mean              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_75sum               False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_75mean              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_985sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_985mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_100sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_100mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqsum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqmean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqcount           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14total_secssum          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14total_secsmean         False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_25sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_25mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_50sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_50mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_75sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_75mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_985sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_985mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_100sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_100mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqsum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqmean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqcount           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31total_secssum          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31total_secsmean         False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_25sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_25mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_50sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_50mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_75sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_75mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_985sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_985mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_100sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_100mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqsum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqmean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqcount           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90total_secssum          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90total_secsmean         False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_25sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_25mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_50sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_50mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_75sum              False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_75mean             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_985sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_985mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_100sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_100mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqsum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqmean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqcount          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180total_secssum         False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180total_secsmean        False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_25sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_25mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_50sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_50mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_75sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_75mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_985sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_985mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_100sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_100mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqsum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqmean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqcount          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365total_secssum         False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365total_secsmean        False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_25sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_25mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_50sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_50mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_75sum             False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_75mean            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_985sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_985mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_100sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_100mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqsum           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqmean          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqcount         False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999total_secssum        False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999total_secsmean       False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_25sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_25mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_50sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_50mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_75sum            False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_75mean           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_985sum           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_985mean          False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_100sum           False&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_100mean          False&lt;/span&gt;
&lt;span class="err"&gt;total_plan_days                      False&lt;/span&gt;
&lt;span class="err"&gt;total_amount_paid                    False&lt;/span&gt;
&lt;span class="err"&gt;amount_paid_per_day                  False&lt;/span&gt;
&lt;span class="err"&gt;diff_renewal_duration                False&lt;/span&gt;
&lt;span class="err"&gt;diff_plan_amount_paid_per_day        False&lt;/span&gt;
&lt;span class="err"&gt;latest_payment_method_id             False&lt;/span&gt;
&lt;span class="err"&gt;latest_plan_days                     False&lt;/span&gt;
&lt;span class="err"&gt;latest_plan_list_price               False&lt;/span&gt;
&lt;span class="err"&gt;latest_amount_paid                   False&lt;/span&gt;
&lt;span class="err"&gt;latest_auto_renew                    False&lt;/span&gt;
&lt;span class="err"&gt;latest_transaction_date              False&lt;/span&gt;
&lt;span class="err"&gt;latest_expire_date                   False&lt;/span&gt;
&lt;span class="err"&gt;latest_is_cancel                     False&lt;/span&gt;
&lt;span class="err"&gt;latest_amount_paid_per_day           False&lt;/span&gt;
&lt;span class="c"&gt;dtype: bool&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The cell above uploads verifies we have no null values in our data.&lt;/p&gt;
&lt;p&gt;Now let's inspect our data types:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="w"&gt;                                          &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;bd&lt;/span&gt;&lt;span class="w"&gt;                                            &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;gender&lt;/span&gt;&lt;span class="w"&gt;                                       &lt;/span&gt;&lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;registered_via&lt;/span&gt;&lt;span class="w"&gt;                                &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;registration_init_time&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="w"&gt;                                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;date_featuresdatemax_date&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;datetime64&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;date_featuresdatemin_date&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;datetime64&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ns&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;date_featuresdatelistening_tenure&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1total_secssum&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1total_secsmean&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_25sum&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_25mean&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_50sum&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_50mean&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_75sum&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_75mean&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_985sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_985mean&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_100sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_1num_100mean&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7total_secssum&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7total_secsmean&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_25sum&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_25mean&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_50sum&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_50mean&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_75sum&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_75mean&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_985sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_985mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_100sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_7num_100mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14total_secssum&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14total_secsmean&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_25sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_25mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_50sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_50mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_75sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_75mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_985sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_985mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_100sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_14num_100mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31total_secssum&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31total_secsmean&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_25sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_25mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_50sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_50mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_75sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_75mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_985sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_985mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_100sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_31num_100mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90total_secssum&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90total_secsmean&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_25sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_25mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_50sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_50mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_75sum&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_75mean&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_985sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_985mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_100sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_90num_100mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180total_secssum&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180total_secsmean&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_25sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_25mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_50sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_50mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_75sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_75mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_985sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_985mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_100sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_180num_100mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365total_secssum&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365total_secsmean&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_25sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_25mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_50sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_50mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_75sum&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_75mean&lt;/span&gt;&lt;span class="w"&gt;                   &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_985sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_985mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_100sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_365num_100mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_unqsum&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_unqmean&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_unqcount&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999total_secssum&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999total_secsmean&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_25sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_25mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_50sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_50mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_75sum&lt;/span&gt;&lt;span class="w"&gt;                     &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_75mean&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_985sum&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_985mean&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_100sum&lt;/span&gt;&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;within_days_9999num_100mean&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;total_plan_days&lt;/span&gt;&lt;span class="w"&gt;                               &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;total_amount_paid&lt;/span&gt;&lt;span class="w"&gt;                             &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;amount_paid_per_day&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;diff_renewal_duration&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;diff_plan_amount_paid_per_day&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_payment_method_id&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_plan_days&lt;/span&gt;&lt;span class="w"&gt;                              &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_plan_list_price&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_amount_paid&lt;/span&gt;&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_auto_renew&lt;/span&gt;&lt;span class="w"&gt;                             &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_transaction_date&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_expire_date&lt;/span&gt;&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_is_cancel&lt;/span&gt;&lt;span class="w"&gt;                              &lt;/span&gt;&lt;span class="n"&gt;int64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;latest_amount_paid_per_day&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="n"&gt;float64&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="nl"&gt;dtype&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;object&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We see we have a couple datetime objects in the file.  We'll need to address these, as the ML algorithms don't like them.  The code below breaks datetime formatted columns up into 4 separate columns.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;split_date_col&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Function that takes a column of datetime64[ns] items and converts it into 4 columns:&lt;/span&gt;
&lt;span class="sd"&gt;        1) Year integer&lt;/span&gt;
&lt;span class="sd"&gt;        2) Month integer&lt;/span&gt;
&lt;span class="sd"&gt;        3) Day integer&lt;/span&gt;
&lt;span class="sd"&gt;        4) Days since January 1, 2001, as an integer&lt;/span&gt;

&lt;span class="sd"&gt;        It then deletes the original date &lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        date_col_name (string):  The column name, as a string.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;
    &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
    &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;
    &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1/1/2000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                                      &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;timedelta64[D]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                                      &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int64&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                                     &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date_col_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Only run this cell once, else it will fail on the date columns it deletes&lt;/span&gt;
&lt;span class="n"&gt;split_date_col&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatemax_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;split_date_col&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatemin_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now let's re-check our cells:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtypes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;city                                   int64&lt;/span&gt;
&lt;span class="err"&gt;bd                                     int64&lt;/span&gt;
&lt;span class="err"&gt;gender                                object&lt;/span&gt;
&lt;span class="err"&gt;registered_via                         int64&lt;/span&gt;
&lt;span class="err"&gt;registration_init_time                 int64&lt;/span&gt;
&lt;span class="err"&gt;is_churn                               int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatelistening_tenure      int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqsum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqmean               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqcount              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1total_secssum           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1total_secsmean          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_25sum                 int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_25mean                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_50sum                 int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_50mean                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_75sum                 int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_75mean                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_985sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_985mean               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_100sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_100mean               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqsum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqmean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqcount              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7total_secssum           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7total_secsmean          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_25sum                 int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_25mean              float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_50sum                 int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_50mean              float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_75sum                 int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_75mean              float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_985sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_985mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_100sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_100mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqsum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqmean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqcount             int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14total_secssum          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14total_secsmean         float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_25sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_25mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_50sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_50mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_75sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_75mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_985sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_985mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_100sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_100mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqsum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqmean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqcount             int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31total_secssum          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31total_secsmean         float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_25sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_25mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_50sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_50mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_75sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_75mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_985sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_985mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_100sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_100mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqsum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqmean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqcount             int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90total_secssum          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90total_secsmean         float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_25sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_25mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_50sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_50mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_75sum                int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_75mean             float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_985sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_985mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_100sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_100mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqsum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqmean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqcount            int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180total_secssum         float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180total_secsmean        float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_25sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_25mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_50sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_50mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_75sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_75mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_985sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_985mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_100sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_100mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqsum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqmean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqcount            int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365total_secssum         float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365total_secsmean        float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_25sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_25mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_50sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_50mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_75sum               int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_75mean            float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_985sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_985mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_100sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_100mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqsum             int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqmean          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqcount           int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999total_secssum        float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999total_secsmean       float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_25sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_25mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_50sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_50mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_75sum              int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_75mean           float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_985sum             int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_985mean          float64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_100sum             int64&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_100mean          float64&lt;/span&gt;
&lt;span class="err"&gt;total_plan_days                        int64&lt;/span&gt;
&lt;span class="err"&gt;total_amount_paid                      int64&lt;/span&gt;
&lt;span class="err"&gt;amount_paid_per_day                  float64&lt;/span&gt;
&lt;span class="err"&gt;diff_renewal_duration                  int64&lt;/span&gt;
&lt;span class="err"&gt;diff_plan_amount_paid_per_day        float64&lt;/span&gt;
&lt;span class="err"&gt;latest_payment_method_id               int64&lt;/span&gt;
&lt;span class="err"&gt;latest_plan_days                       int64&lt;/span&gt;
&lt;span class="err"&gt;latest_plan_list_price                 int64&lt;/span&gt;
&lt;span class="err"&gt;latest_amount_paid                     int64&lt;/span&gt;
&lt;span class="err"&gt;latest_auto_renew                      int64&lt;/span&gt;
&lt;span class="err"&gt;latest_transaction_date                int64&lt;/span&gt;
&lt;span class="err"&gt;latest_expire_date                     int64&lt;/span&gt;
&lt;span class="err"&gt;latest_is_cancel                       int64&lt;/span&gt;
&lt;span class="err"&gt;latest_amount_paid_per_day           float64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_year         int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_month        int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_day          int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_absday       int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_year         int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_month        int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_day          int64&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_absday       int64&lt;/span&gt;
&lt;span class="c"&gt;dtype: object&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;gender&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;45906&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.0&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;unique&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;top&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;male&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;freq&lt;/th&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;24390&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;6.525038&lt;/td&gt;
      &lt;td&gt;14.980733&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;6.635018&lt;/td&gt;
      &lt;td&gt;2.013375e+07&lt;/td&gt;
      &lt;td&gt;0.505590&lt;/td&gt;
      &lt;td&gt;489.896266&lt;/td&gt;
      &lt;td&gt;20.698794&lt;/td&gt;
      &lt;td&gt;20.698794&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;5292.578450&lt;/td&gt;
      &lt;td&gt;5292.578450&lt;/td&gt;
      &lt;td&gt;4.751005&lt;/td&gt;
      &lt;td&gt;4.751005&lt;/td&gt;
      &lt;td&gt;1.181175&lt;/td&gt;
      &lt;td&gt;1.181175&lt;/td&gt;
      &lt;td&gt;0.712719&lt;/td&gt;
      &lt;td&gt;0.712719&lt;/td&gt;
      &lt;td&gt;0.790985&lt;/td&gt;
      &lt;td&gt;0.790985&lt;/td&gt;
      &lt;td&gt;20.047660&lt;/td&gt;
      &lt;td&gt;20.047660&lt;/td&gt;
      &lt;td&gt;94.714458&lt;/td&gt;
      &lt;td&gt;21.900082&lt;/td&gt;
      &lt;td&gt;3.630568&lt;/td&gt;
      &lt;td&gt;25398.043300&lt;/td&gt;
      &lt;td&gt;5679.751873&lt;/td&gt;
      &lt;td&gt;20.606806&lt;/td&gt;
      &lt;td&gt;5.048088&lt;/td&gt;
      &lt;td&gt;5.118721&lt;/td&gt;
      &lt;td&gt;1.264542&lt;/td&gt;
      &lt;td&gt;3.193474&lt;/td&gt;
      &lt;td&gt;0.764835&lt;/td&gt;
      &lt;td&gt;3.609866&lt;/td&gt;
      &lt;td&gt;0.839836&lt;/td&gt;
      &lt;td&gt;96.809236&lt;/td&gt;
      &lt;td&gt;21.497445&lt;/td&gt;
      &lt;td&gt;180.072506&lt;/td&gt;
      &lt;td&gt;22.383794&lt;/td&gt;
      &lt;td&gt;6.679696&lt;/td&gt;
      &lt;td&gt;4.851858e+04&lt;/td&gt;
      &lt;td&gt;5818.581592&lt;/td&gt;
      &lt;td&gt;38.873690&lt;/td&gt;
      &lt;td&gt;5.179982&lt;/td&gt;
      &lt;td&gt;9.669735&lt;/td&gt;
      &lt;td&gt;1.298046&lt;/td&gt;
      &lt;td&gt;6.069570&lt;/td&gt;
      &lt;td&gt;0.785710&lt;/td&gt;
      &lt;td&gt;6.831553&lt;/td&gt;
      &lt;td&gt;0.857796&lt;/td&gt;
      &lt;td&gt;185.109313&lt;/td&gt;
      &lt;td&gt;22.017982&lt;/td&gt;
      &lt;td&gt;386.728101&lt;/td&gt;
      &lt;td&gt;23.271521&lt;/td&gt;
      &lt;td&gt;13.902444&lt;/td&gt;
      &lt;td&gt;1.039538e+05&lt;/td&gt;
      &lt;td&gt;6040.184570&lt;/td&gt;
      &lt;td&gt;84.352706&lt;/td&gt;
      &lt;td&gt;5.450459&lt;/td&gt;
      &lt;td&gt;20.850831&lt;/td&gt;
      &lt;td&gt;1.359949&lt;/td&gt;
      &lt;td&gt;13.151473&lt;/td&gt;
      &lt;td&gt;0.825081&lt;/td&gt;
      &lt;td&gt;14.948783&lt;/td&gt;
      &lt;td&gt;0.904241&lt;/td&gt;
      &lt;td&gt;396.595557&lt;/td&gt;
      &lt;td&gt;22.841633&lt;/td&gt;
      &lt;td&gt;1093.917736&lt;/td&gt;
      &lt;td&gt;24.238664&lt;/td&gt;
      &lt;td&gt;37.852435&lt;/td&gt;
      &lt;td&gt;-8.333365e+11&lt;/td&gt;
      &lt;td&gt;-1.651270e+10&lt;/td&gt;
      &lt;td&gt;241.791143&lt;/td&gt;
      &lt;td&gt;5.797655&lt;/td&gt;
      &lt;td&gt;59.157650&lt;/td&gt;
      &lt;td&gt;1.442505&lt;/td&gt;
      &lt;td&gt;37.497256&lt;/td&gt;
      &lt;td&gt;0.874044&lt;/td&gt;
      &lt;td&gt;42.036321&lt;/td&gt;
      &lt;td&gt;0.943332&lt;/td&gt;
      &lt;td&gt;1121.233093&lt;/td&gt;
      &lt;td&gt;23.773736&lt;/td&gt;
      &lt;td&gt;2090.805633&lt;/td&gt;
      &lt;td&gt;24.740990&lt;/td&gt;
      &lt;td&gt;71.289811&lt;/td&gt;
      &lt;td&gt;-1.979174e+12&lt;/td&gt;
      &lt;td&gt;-2.291994e+10&lt;/td&gt;
      &lt;td&gt;464.508132&lt;/td&gt;
      &lt;td&gt;5.968142&lt;/td&gt;
      &lt;td&gt;114.264603&lt;/td&gt;
      &lt;td&gt;1.498918&lt;/td&gt;
      &lt;td&gt;72.136554&lt;/td&gt;
      &lt;td&gt;0.902613&lt;/td&gt;
      &lt;td&gt;80.350267&lt;/td&gt;
      &lt;td&gt;0.967418&lt;/td&gt;
      &lt;td&gt;2124.856648&lt;/td&gt;
      &lt;td&gt;24.115101&lt;/td&gt;
      &lt;td&gt;3896.207400&lt;/td&gt;
      &lt;td&gt;25.245055&lt;/td&gt;
      &lt;td&gt;131.113401&lt;/td&gt;
      &lt;td&gt;-6.041691e+12&lt;/td&gt;
      &lt;td&gt;-3.677399e+10&lt;/td&gt;
      &lt;td&gt;859.351520&lt;/td&gt;
      &lt;td&gt;6.090492&lt;/td&gt;
      &lt;td&gt;212.907018&lt;/td&gt;
      &lt;td&gt;1.541631&lt;/td&gt;
      &lt;td&gt;133.405527&lt;/td&gt;
      &lt;td&gt;0.921047&lt;/td&gt;
      &lt;td&gt;148.187715&lt;/td&gt;
      &lt;td&gt;0.979698&lt;/td&gt;
      &lt;td&gt;3949.711895&lt;/td&gt;
      &lt;td&gt;24.569486&lt;/td&gt;
      &lt;td&gt;6768.144403&lt;/td&gt;
      &lt;td&gt;25.652204&lt;/td&gt;
      &lt;td&gt;222.584850&lt;/td&gt;
      &lt;td&gt;-2.994804e+14&lt;/td&gt;
      &lt;td&gt;-7.498238e+11&lt;/td&gt;
      &lt;td&gt;1476.962256&lt;/td&gt;
      &lt;td&gt;6.214718&lt;/td&gt;
      &lt;td&gt;367.734708&lt;/td&gt;
      &lt;td&gt;1.582176&lt;/td&gt;
      &lt;td&gt;229.020227&lt;/td&gt;
      &lt;td&gt;0.940062&lt;/td&gt;
      &lt;td&gt;254.208992&lt;/td&gt;
      &lt;td&gt;0.992622&lt;/td&gt;
      &lt;td&gt;6864.914574&lt;/td&gt;
      &lt;td&gt;24.937062&lt;/td&gt;
      &lt;td&gt;437.796169&lt;/td&gt;
      &lt;td&gt;2037.669125&lt;/td&gt;
      &lt;td&gt;4.602800&lt;/td&gt;
      &lt;td&gt;2.989858&lt;/td&gt;
      &lt;td&gt;-5.606482&lt;/td&gt;
      &lt;td&gt;37.700296&lt;/td&gt;
      &lt;td&gt;52.462742&lt;/td&gt;
      &lt;td&gt;227.611199&lt;/td&gt;
      &lt;td&gt;227.036185&lt;/td&gt;
      &lt;td&gt;0.639874&lt;/td&gt;
      &lt;td&gt;2.016869e+07&lt;/td&gt;
      &lt;td&gt;2.016998e+07&lt;/td&gt;
      &lt;td&gt;0.174659&lt;/td&gt;
      &lt;td&gt;4.249737&lt;/td&gt;
      &lt;td&gt;2016.881234&lt;/td&gt;
      &lt;td&gt;2.525117&lt;/td&gt;
      &lt;td&gt;21.763507&lt;/td&gt;
      &lt;td&gt;6234.178363&lt;/td&gt;
      &lt;td&gt;2015.427177&lt;/td&gt;
      &lt;td&gt;4.265992&lt;/td&gt;
      &lt;td&gt;11.133335&lt;/td&gt;
      &lt;td&gt;5744.282097&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;6.551445&lt;/td&gt;
      &lt;td&gt;18.431336&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2.234529&lt;/td&gt;
      &lt;td&gt;2.896439e+04&lt;/td&gt;
      &lt;td&gt;0.499972&lt;/td&gt;
      &lt;td&gt;271.954761&lt;/td&gt;
      &lt;td&gt;26.816538&lt;/td&gt;
      &lt;td&gt;26.816538&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;7839.883628&lt;/td&gt;
      &lt;td&gt;7839.883628&lt;/td&gt;
      &lt;td&gt;11.209580&lt;/td&gt;
      &lt;td&gt;11.209580&lt;/td&gt;
      &lt;td&gt;3.122491&lt;/td&gt;
      &lt;td&gt;3.122491&lt;/td&gt;
      &lt;td&gt;1.569186&lt;/td&gt;
      &lt;td&gt;1.569186&lt;/td&gt;
      &lt;td&gt;2.056548&lt;/td&gt;
      &lt;td&gt;2.056548&lt;/td&gt;
      &lt;td&gt;31.926074&lt;/td&gt;
      &lt;td&gt;31.926074&lt;/td&gt;
      &lt;td&gt;123.736267&lt;/td&gt;
      &lt;td&gt;22.179267&lt;/td&gt;
      &lt;td&gt;2.019227&lt;/td&gt;
      &lt;td&gt;37825.652389&lt;/td&gt;
      &lt;td&gt;6814.978016&lt;/td&gt;
      &lt;td&gt;40.174639&lt;/td&gt;
      &lt;td&gt;9.170749&lt;/td&gt;
      &lt;td&gt;9.780551&lt;/td&gt;
      &lt;td&gt;2.416056&lt;/td&gt;
      &lt;td&gt;5.525064&lt;/td&gt;
      &lt;td&gt;1.240117&lt;/td&gt;
      &lt;td&gt;8.967416&lt;/td&gt;
      &lt;td&gt;1.630039&lt;/td&gt;
      &lt;td&gt;154.190616&lt;/td&gt;
      &lt;td&gt;27.963725&lt;/td&gt;
      &lt;td&gt;232.545094&lt;/td&gt;
      &lt;td&gt;20.836810&lt;/td&gt;
      &lt;td&gt;4.052415&lt;/td&gt;
      &lt;td&gt;7.152130e+04&lt;/td&gt;
      &lt;td&gt;6539.990675&lt;/td&gt;
      &lt;td&gt;69.286828&lt;/td&gt;
      &lt;td&gt;8.255339&lt;/td&gt;
      &lt;td&gt;16.423555&lt;/td&gt;
      &lt;td&gt;2.159017&lt;/td&gt;
      &lt;td&gt;9.495713&lt;/td&gt;
      &lt;td&gt;1.138329&lt;/td&gt;
      &lt;td&gt;16.007510&lt;/td&gt;
      &lt;td&gt;1.546520&lt;/td&gt;
      &lt;td&gt;291.280077&lt;/td&gt;
      &lt;td&gt;26.898005&lt;/td&gt;
      &lt;td&gt;477.079939&lt;/td&gt;
      &lt;td&gt;19.372295&lt;/td&gt;
      &lt;td&gt;8.663977&lt;/td&gt;
      &lt;td&gt;1.469971e+05&lt;/td&gt;
      &lt;td&gt;6020.766839&lt;/td&gt;
      &lt;td&gt;135.636164&lt;/td&gt;
      &lt;td&gt;7.741246&lt;/td&gt;
      &lt;td&gt;30.899691&lt;/td&gt;
      &lt;td&gt;1.919181&lt;/td&gt;
      &lt;td&gt;18.358084&lt;/td&gt;
      &lt;td&gt;1.029136&lt;/td&gt;
      &lt;td&gt;36.104464&lt;/td&gt;
      &lt;td&gt;1.563621&lt;/td&gt;
      &lt;td&gt;600.717536&lt;/td&gt;
      &lt;td&gt;24.834585&lt;/td&gt;
      &lt;td&gt;1341.237189&lt;/td&gt;
      &lt;td&gt;18.684102&lt;/td&gt;
      &lt;td&gt;25.324540&lt;/td&gt;
      &lt;td&gt;2.191767e+14&lt;/td&gt;
      &lt;td&gt;3.964256e+12&lt;/td&gt;
      &lt;td&gt;382.272707&lt;/td&gt;
      &lt;td&gt;7.515411&lt;/td&gt;
      &lt;td&gt;82.445972&lt;/td&gt;
      &lt;td&gt;1.770876&lt;/td&gt;
      &lt;td&gt;50.426151&lt;/td&gt;
      &lt;td&gt;0.969375&lt;/td&gt;
      &lt;td&gt;89.884588&lt;/td&gt;
      &lt;td&gt;1.397562&lt;/td&gt;
      &lt;td&gt;1663.191691&lt;/td&gt;
      &lt;td&gt;24.005779&lt;/td&gt;
      &lt;td&gt;2583.529737&lt;/td&gt;
      &lt;td&gt;18.290344&lt;/td&gt;
      &lt;td&gt;50.173053&lt;/td&gt;
      &lt;td&gt;2.754958e+14&lt;/td&gt;
      &lt;td&gt;2.817791e+12&lt;/td&gt;
      &lt;td&gt;890.415732&lt;/td&gt;
      &lt;td&gt;7.904848&lt;/td&gt;
      &lt;td&gt;158.377603&lt;/td&gt;
      &lt;td&gt;1.721930&lt;/td&gt;
      &lt;td&gt;96.141760&lt;/td&gt;
      &lt;td&gt;0.912695&lt;/td&gt;
      &lt;td&gt;166.964108&lt;/td&gt;
      &lt;td&gt;1.336536&lt;/td&gt;
      &lt;td&gt;3129.427760&lt;/td&gt;
      &lt;td&gt;23.396972&lt;/td&gt;
      &lt;td&gt;4890.713126&lt;/td&gt;
      &lt;td&gt;17.842956&lt;/td&gt;
      &lt;td&gt;99.124183&lt;/td&gt;
      &lt;td&gt;3.640763e+14&lt;/td&gt;
      &lt;td&gt;2.148897e+12&lt;/td&gt;
      &lt;td&gt;2152.429448&lt;/td&gt;
      &lt;td&gt;8.587733&lt;/td&gt;
      &lt;td&gt;298.543419&lt;/td&gt;
      &lt;td&gt;1.634560&lt;/td&gt;
      &lt;td&gt;179.646957&lt;/td&gt;
      &lt;td&gt;0.882435&lt;/td&gt;
      &lt;td&gt;271.766276&lt;/td&gt;
      &lt;td&gt;1.137067&lt;/td&gt;
      &lt;td&gt;5839.985612&lt;/td&gt;
      &lt;td&gt;22.801391&lt;/td&gt;
      &lt;td&gt;9203.006883&lt;/td&gt;
      &lt;td&gt;17.417302&lt;/td&gt;
      &lt;td&gt;196.804976&lt;/td&gt;
      &lt;td&gt;3.620312e+15&lt;/td&gt;
      &lt;td&gt;9.459203e+12&lt;/td&gt;
      &lt;td&gt;3814.395114&lt;/td&gt;
      &lt;td&gt;8.261136&lt;/td&gt;
      &lt;td&gt;548.144978&lt;/td&gt;
      &lt;td&gt;1.622525&lt;/td&gt;
      &lt;td&gt;327.643138&lt;/td&gt;
      &lt;td&gt;0.872478&lt;/td&gt;
      &lt;td&gt;440.184627&lt;/td&gt;
      &lt;td&gt;1.023119&lt;/td&gt;
      &lt;td&gt;10865.335596&lt;/td&gt;
      &lt;td&gt;22.230638&lt;/td&gt;
      &lt;td&gt;241.813007&lt;/td&gt;
      &lt;td&gt;1234.637258&lt;/td&gt;
      &lt;td&gt;1.085134&lt;/td&gt;
      &lt;td&gt;51.117939&lt;/td&gt;
      &lt;td&gt;237.546015&lt;/td&gt;
      &lt;td&gt;4.484667&lt;/td&gt;
      &lt;td&gt;79.217446&lt;/td&gt;
      &lt;td&gt;332.886694&lt;/td&gt;
      &lt;td&gt;333.154660&lt;/td&gt;
      &lt;td&gt;0.480039&lt;/td&gt;
      &lt;td&gt;3.996365e+03&lt;/td&gt;
      &lt;td&gt;6.095780e+03&lt;/td&gt;
      &lt;td&gt;0.379677&lt;/td&gt;
      &lt;td&gt;47.556868&lt;/td&gt;
      &lt;td&gt;0.372700&lt;/td&gt;
      &lt;td&gt;2.183868&lt;/td&gt;
      &lt;td&gt;8.070249&lt;/td&gt;
      &lt;td&gt;94.115610&lt;/td&gt;
      &lt;td&gt;0.580881&lt;/td&gt;
      &lt;td&gt;3.899945&lt;/td&gt;
      &lt;td&gt;9.493778&lt;/td&gt;
      &lt;td&gt;261.169278&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-49.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;2.004033e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.030000&lt;/td&gt;
      &lt;td&gt;0.030000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.078000&lt;/td&gt;
      &lt;td&gt;0.078000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7.800000e-02&lt;/td&gt;
      &lt;td&gt;0.078000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.130000e-01&lt;/td&gt;
      &lt;td&gt;0.213000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-6.456360e+16&lt;/td&gt;
      &lt;td&gt;-1.132695e+15&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-7.378698e+16&lt;/td&gt;
      &lt;td&gt;-6.895979e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-7.378698e+16&lt;/td&gt;
      &lt;td&gt;-3.617009e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-3.135946e+17&lt;/td&gt;
      &lt;td&gt;-8.384884e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-420.000000&lt;/td&gt;
      &lt;td&gt;-9999.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2.015010e+07&lt;/td&gt;
      &lt;td&gt;1.970010e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-9999.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5479.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5479.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;2.012053e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;248.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;821.058500&lt;/td&gt;
      &lt;td&gt;821.058500&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;7.571429&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;3718.143000&lt;/td&gt;
      &lt;td&gt;1705.418000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;5.666667&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;9.200000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;7.838667e+03&lt;/td&gt;
      &lt;td&gt;2116.791375&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.307692&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;7.200000&lt;/td&gt;
      &lt;td&gt;84.000000&lt;/td&gt;
      &lt;td&gt;11.153846&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;1.964592e+04&lt;/td&gt;
      &lt;td&gt;2611.727415&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;1.714286&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.450000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.294118&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.300000&lt;/td&gt;
      &lt;td&gt;69.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;233.000000&lt;/td&gt;
      &lt;td&gt;12.710028&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;5.537270e+04&lt;/td&gt;
      &lt;td&gt;2.998566e+03&lt;/td&gt;
      &lt;td&gt;42.000000&lt;/td&gt;
      &lt;td&gt;2.113636&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;0.565217&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.382353&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.387097&lt;/td&gt;
      &lt;td&gt;196.000000&lt;/td&gt;
      &lt;td&gt;10.500000&lt;/td&gt;
      &lt;td&gt;427.000000&lt;/td&gt;
      &lt;td&gt;13.490147&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;1.021806e+05&lt;/td&gt;
      &lt;td&gt;3.180790e+03&lt;/td&gt;
      &lt;td&gt;81.000000&lt;/td&gt;
      &lt;td&gt;2.329249&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.625000&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;0.426950&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;0.427574&lt;/td&gt;
      &lt;td&gt;360.000000&lt;/td&gt;
      &lt;td&gt;11.166667&lt;/td&gt;
      &lt;td&gt;737.750000&lt;/td&gt;
      &lt;td&gt;14.224490&lt;/td&gt;
      &lt;td&gt;43.000000&lt;/td&gt;
      &lt;td&gt;1.753236e+05&lt;/td&gt;
      &lt;td&gt;3.351469e+03&lt;/td&gt;
      &lt;td&gt;145.000000&lt;/td&gt;
      &lt;td&gt;2.510204&lt;/td&gt;
      &lt;td&gt;39.000000&lt;/td&gt;
      &lt;td&gt;0.677632&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;623.000000&lt;/td&gt;
      &lt;td&gt;11.806058&lt;/td&gt;
      &lt;td&gt;1002.000000&lt;/td&gt;
      &lt;td&gt;14.798119&lt;/td&gt;
      &lt;td&gt;56.000000&lt;/td&gt;
      &lt;td&gt;2.145400e+05&lt;/td&gt;
      &lt;td&gt;3.373914e+03&lt;/td&gt;
      &lt;td&gt;205.000000&lt;/td&gt;
      &lt;td&gt;2.651424&lt;/td&gt;
      &lt;td&gt;56.000000&lt;/td&gt;
      &lt;td&gt;0.722222&lt;/td&gt;
      &lt;td&gt;35.000000&lt;/td&gt;
      &lt;td&gt;0.481250&lt;/td&gt;
      &lt;td&gt;35.000000&lt;/td&gt;
      &lt;td&gt;0.478528&lt;/td&gt;
      &lt;td&gt;853.000000&lt;/td&gt;
      &lt;td&gt;12.291667&lt;/td&gt;
      &lt;td&gt;240.000000&lt;/td&gt;
      &lt;td&gt;990.000000&lt;/td&gt;
      &lt;td&gt;3.936907&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2.017012e+07&lt;/td&gt;
      &lt;td&gt;2.017021e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;6247.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5481.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2.014073e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;509.000000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2595.075000&lt;/td&gt;
      &lt;td&gt;2595.075000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;53.000000&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;12904.532500&lt;/td&gt;
      &lt;td&gt;3780.617429&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;2.600000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;47.000000&lt;/td&gt;
      &lt;td&gt;13.750000&lt;/td&gt;
      &lt;td&gt;105.000000&lt;/td&gt;
      &lt;td&gt;17.100000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;2.553986e+04&lt;/td&gt;
      &lt;td&gt;4091.579700&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;0.800000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.538462&lt;/td&gt;
      &lt;td&gt;93.000000&lt;/td&gt;
      &lt;td&gt;15.000000&lt;/td&gt;
      &lt;td&gt;238.000000&lt;/td&gt;
      &lt;td&gt;18.777778&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;5.835679e+04&lt;/td&gt;
      &lt;td&gt;4496.575193&lt;/td&gt;
      &lt;td&gt;42.000000&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;0.928571&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.612903&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;214.000000&lt;/td&gt;
      &lt;td&gt;16.500000&lt;/td&gt;
      &lt;td&gt;667.000000&lt;/td&gt;
      &lt;td&gt;19.993750&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;1.652595e+05&lt;/td&gt;
      &lt;td&gt;4.812825e+03&lt;/td&gt;
      &lt;td&gt;123.000000&lt;/td&gt;
      &lt;td&gt;3.935484&lt;/td&gt;
      &lt;td&gt;33.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.671875&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.692308&lt;/td&gt;
      &lt;td&gt;605.000000&lt;/td&gt;
      &lt;td&gt;17.683439&lt;/td&gt;
      &lt;td&gt;1263.000000&lt;/td&gt;
      &lt;td&gt;20.583333&lt;/td&gt;
      &lt;td&gt;65.000000&lt;/td&gt;
      &lt;td&gt;3.145153e+05&lt;/td&gt;
      &lt;td&gt;4.970085e+03&lt;/td&gt;
      &lt;td&gt;235.000000&lt;/td&gt;
      &lt;td&gt;4.128933&lt;/td&gt;
      &lt;td&gt;63.000000&lt;/td&gt;
      &lt;td&gt;1.070945&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;0.706897&lt;/td&gt;
      &lt;td&gt;43.000000&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
      &lt;td&gt;1149.000000&lt;/td&gt;
      &lt;td&gt;18.196254&lt;/td&gt;
      &lt;td&gt;2317.000000&lt;/td&gt;
      &lt;td&gt;21.266667&lt;/td&gt;
      &lt;td&gt;115.000000&lt;/td&gt;
      &lt;td&gt;5.750376e+05&lt;/td&gt;
      &lt;td&gt;5.154735e+03&lt;/td&gt;
      &lt;td&gt;431.000000&lt;/td&gt;
      &lt;td&gt;4.326370&lt;/td&gt;
      &lt;td&gt;117.000000&lt;/td&gt;
      &lt;td&gt;1.130952&lt;/td&gt;
      &lt;td&gt;76.000000&lt;/td&gt;
      &lt;td&gt;0.733333&lt;/td&gt;
      &lt;td&gt;78.000000&lt;/td&gt;
      &lt;td&gt;0.750000&lt;/td&gt;
      &lt;td&gt;2102.000000&lt;/td&gt;
      &lt;td&gt;18.867847&lt;/td&gt;
      &lt;td&gt;3584.000000&lt;/td&gt;
      &lt;td&gt;21.936890&lt;/td&gt;
      &lt;td&gt;169.000000&lt;/td&gt;
      &lt;td&gt;8.452459e+05&lt;/td&gt;
      &lt;td&gt;5.233477e+03&lt;/td&gt;
      &lt;td&gt;681.000000&lt;/td&gt;
      &lt;td&gt;4.500000&lt;/td&gt;
      &lt;td&gt;186.000000&lt;/td&gt;
      &lt;td&gt;1.181818&lt;/td&gt;
      &lt;td&gt;119.000000&lt;/td&gt;
      &lt;td&gt;0.757725&lt;/td&gt;
      &lt;td&gt;121.000000&lt;/td&gt;
      &lt;td&gt;0.769231&lt;/td&gt;
      &lt;td&gt;3299.000000&lt;/td&gt;
      &lt;td&gt;19.508859&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;1788.000000&lt;/td&gt;
      &lt;td&gt;4.898667&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;39.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.017020e+07&lt;/td&gt;
      &lt;td&gt;2.017030e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;6265.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;5710.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;2.016012e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;776.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;6509.136500&lt;/td&gt;
      &lt;td&gt;6509.136500&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;124.000000&lt;/td&gt;
      &lt;td&gt;28.666667&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;31483.468500&lt;/td&gt;
      &lt;td&gt;7136.028982&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;118.000000&lt;/td&gt;
      &lt;td&gt;26.833333&lt;/td&gt;
      &lt;td&gt;236.000000&lt;/td&gt;
      &lt;td&gt;29.000000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;5.991438e+04&lt;/td&gt;
      &lt;td&gt;7206.990196&lt;/td&gt;
      &lt;td&gt;46.000000&lt;/td&gt;
      &lt;td&gt;6.285714&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;1.571429&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;225.000000&lt;/td&gt;
      &lt;td&gt;27.090909&lt;/td&gt;
      &lt;td&gt;511.000000&lt;/td&gt;
      &lt;td&gt;29.545455&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;1.296859e+05&lt;/td&gt;
      &lt;td&gt;7375.110225&lt;/td&gt;
      &lt;td&gt;103.000000&lt;/td&gt;
      &lt;td&gt;6.720556&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;1.052632&lt;/td&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
      &lt;td&gt;1.125000&lt;/td&gt;
      &lt;td&gt;484.000000&lt;/td&gt;
      &lt;td&gt;27.826087&lt;/td&gt;
      &lt;td&gt;1464.000000&lt;/td&gt;
      &lt;td&gt;30.166667&lt;/td&gt;
      &lt;td&gt;56.000000&lt;/td&gt;
      &lt;td&gt;3.737988e+05&lt;/td&gt;
      &lt;td&gt;7.603972e+03&lt;/td&gt;
      &lt;td&gt;295.000000&lt;/td&gt;
      &lt;td&gt;7.100000&lt;/td&gt;
      &lt;td&gt;76.000000&lt;/td&gt;
      &lt;td&gt;1.769231&lt;/td&gt;
      &lt;td&gt;49.000000&lt;/td&gt;
      &lt;td&gt;1.098120&lt;/td&gt;
      &lt;td&gt;52.000000&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;1394.000000&lt;/td&gt;
      &lt;td&gt;28.634146&lt;/td&gt;
      &lt;td&gt;2802.000000&lt;/td&gt;
      &lt;td&gt;30.577022&lt;/td&gt;
      &lt;td&gt;108.000000&lt;/td&gt;
      &lt;td&gt;7.176428e+05&lt;/td&gt;
      &lt;td&gt;7.747661e+03&lt;/td&gt;
      &lt;td&gt;567.000000&lt;/td&gt;
      &lt;td&gt;7.290698&lt;/td&gt;
      &lt;td&gt;147.000000&lt;/td&gt;
      &lt;td&gt;1.833333&lt;/td&gt;
      &lt;td&gt;95.000000&lt;/td&gt;
      &lt;td&gt;1.128512&lt;/td&gt;
      &lt;td&gt;100.000000&lt;/td&gt;
      &lt;td&gt;1.187500&lt;/td&gt;
      &lt;td&gt;2663.000000&lt;/td&gt;
      &lt;td&gt;29.039801&lt;/td&gt;
      &lt;td&gt;5258.000000&lt;/td&gt;
      &lt;td&gt;31.154067&lt;/td&gt;
      &lt;td&gt;203.000000&lt;/td&gt;
      &lt;td&gt;1.347311e+06&lt;/td&gt;
      &lt;td&gt;7.914708e+03&lt;/td&gt;
      &lt;td&gt;1058.000000&lt;/td&gt;
      &lt;td&gt;7.466156&lt;/td&gt;
      &lt;td&gt;275.000000&lt;/td&gt;
      &lt;td&gt;1.888889&lt;/td&gt;
      &lt;td&gt;175.000000&lt;/td&gt;
      &lt;td&gt;1.149123&lt;/td&gt;
      &lt;td&gt;185.000000&lt;/td&gt;
      &lt;td&gt;1.200000&lt;/td&gt;
      &lt;td&gt;5003.000000&lt;/td&gt;
      &lt;td&gt;29.706403&lt;/td&gt;
      &lt;td&gt;9046.250000&lt;/td&gt;
      &lt;td&gt;31.791510&lt;/td&gt;
      &lt;td&gt;346.000000&lt;/td&gt;
      &lt;td&gt;2.223149e+06&lt;/td&gt;
      &lt;td&gt;7.989009e+03&lt;/td&gt;
      &lt;td&gt;1798.000000&lt;/td&gt;
      &lt;td&gt;7.621627&lt;/td&gt;
      &lt;td&gt;468.000000&lt;/td&gt;
      &lt;td&gt;1.942504&lt;/td&gt;
      &lt;td&gt;297.000000&lt;/td&gt;
      &lt;td&gt;1.167134&lt;/td&gt;
      &lt;td&gt;313.000000&lt;/td&gt;
      &lt;td&gt;1.217949&lt;/td&gt;
      &lt;td&gt;8601.250000&lt;/td&gt;
      &lt;td&gt;30.343668&lt;/td&gt;
      &lt;td&gt;615.000000&lt;/td&gt;
      &lt;td&gt;3193.000000&lt;/td&gt;
      &lt;td&gt;5.164424&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.017022e+07&lt;/td&gt;
      &lt;td&gt;2.017032e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2016.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;19.000000&lt;/td&gt;
      &lt;td&gt;5959.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;1051.000000&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;2.017023e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;789.000000&lt;/td&gt;
      &lt;td&gt;661.000000&lt;/td&gt;
      &lt;td&gt;661.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;570.000000&lt;/td&gt;
      &lt;td&gt;570.000000&lt;/td&gt;
      &lt;td&gt;195.000000&lt;/td&gt;
      &lt;td&gt;195.000000&lt;/td&gt;
      &lt;td&gt;71.000000&lt;/td&gt;
      &lt;td&gt;71.000000&lt;/td&gt;
      &lt;td&gt;224.000000&lt;/td&gt;
      &lt;td&gt;224.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;2992.000000&lt;/td&gt;
      &lt;td&gt;748.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;604487.476000&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;3957.000000&lt;/td&gt;
      &lt;td&gt;989.250000&lt;/td&gt;
      &lt;td&gt;354.000000&lt;/td&gt;
      &lt;td&gt;132.500000&lt;/td&gt;
      &lt;td&gt;369.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;1207.000000&lt;/td&gt;
      &lt;td&gt;172.428571&lt;/td&gt;
      &lt;td&gt;3211.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;5290.000000&lt;/td&gt;
      &lt;td&gt;661.000000&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;1.209334e+06&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;5381.000000&lt;/td&gt;
      &lt;td&gt;676.000000&lt;/td&gt;
      &lt;td&gt;613.000000&lt;/td&gt;
      &lt;td&gt;132.500000&lt;/td&gt;
      &lt;td&gt;385.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;1877.000000&lt;/td&gt;
      &lt;td&gt;156.416667&lt;/td&gt;
      &lt;td&gt;5765.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;10086.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;2.665440e+06&lt;/td&gt;
      &lt;td&gt;187136.586000&lt;/td&gt;
      &lt;td&gt;10384.000000&lt;/td&gt;
      &lt;td&gt;676.000000&lt;/td&gt;
      &lt;td&gt;1131.000000&lt;/td&gt;
      &lt;td&gt;132.500000&lt;/td&gt;
      &lt;td&gt;585.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;3930.000000&lt;/td&gt;
      &lt;td&gt;151.826087&lt;/td&gt;
      &lt;td&gt;13493.000000&lt;/td&gt;
      &lt;td&gt;810.000000&lt;/td&gt;
      &lt;td&gt;26703.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;90.000000&lt;/td&gt;
      &lt;td&gt;7.546893e+06&lt;/td&gt;
      &lt;td&gt;2.181567e+05&lt;/td&gt;
      &lt;td&gt;35029.000000&lt;/td&gt;
      &lt;td&gt;676.000000&lt;/td&gt;
      &lt;td&gt;3017.000000&lt;/td&gt;
      &lt;td&gt;88.333333&lt;/td&gt;
      &lt;td&gt;1336.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;11151.000000&lt;/td&gt;
      &lt;td&gt;159.300000&lt;/td&gt;
      &lt;td&gt;35188.000000&lt;/td&gt;
      &lt;td&gt;871.250000&lt;/td&gt;
      &lt;td&gt;52598.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;180.000000&lt;/td&gt;
      &lt;td&gt;1.519852e+07&lt;/td&gt;
      &lt;td&gt;1.782986e+05&lt;/td&gt;
      &lt;td&gt;166936.000000&lt;/td&gt;
      &lt;td&gt;932.603352&lt;/td&gt;
      &lt;td&gt;8311.000000&lt;/td&gt;
      &lt;td&gt;104.333333&lt;/td&gt;
      &lt;td&gt;3287.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;19803.000000&lt;/td&gt;
      &lt;td&gt;133.446429&lt;/td&gt;
      &lt;td&gt;64190.000000&lt;/td&gt;
      &lt;td&gt;710.333333&lt;/td&gt;
      &lt;td&gt;103640.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;365.000000&lt;/td&gt;
      &lt;td&gt;2.993833e+07&lt;/td&gt;
      &lt;td&gt;1.549087e+05&lt;/td&gt;
      &lt;td&gt;519451.000000&lt;/td&gt;
      &lt;td&gt;1427.063187&lt;/td&gt;
      &lt;td&gt;19246.000000&lt;/td&gt;
      &lt;td&gt;60.500000&lt;/td&gt;
      &lt;td&gt;8016.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;26622.000000&lt;/td&gt;
      &lt;td&gt;86.155340&lt;/td&gt;
      &lt;td&gt;140785.000000&lt;/td&gt;
      &lt;td&gt;647.666667&lt;/td&gt;
      &lt;td&gt;234810.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;790.000000&lt;/td&gt;
      &lt;td&gt;9.223372e+15&lt;/td&gt;
      &lt;td&gt;1.358376e+13&lt;/td&gt;
      &lt;td&gt;911417.000000&lt;/td&gt;
      &lt;td&gt;1298.314815&lt;/td&gt;
      &lt;td&gt;37859.000000&lt;/td&gt;
      &lt;td&gt;60.500000&lt;/td&gt;
      &lt;td&gt;16436.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;27315.000000&lt;/td&gt;
      &lt;td&gt;58.358824&lt;/td&gt;
      &lt;td&gt;387552.000000&lt;/td&gt;
      &lt;td&gt;647.666667&lt;/td&gt;
      &lt;td&gt;1690.000000&lt;/td&gt;
      &lt;td&gt;5908.000000&lt;/td&gt;
      &lt;td&gt;53.189189&lt;/td&gt;
      &lt;td&gt;450.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;450.000000&lt;/td&gt;
      &lt;td&gt;2000.000000&lt;/td&gt;
      &lt;td&gt;2000.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.017023e+07&lt;/td&gt;
      &lt;td&gt;2.017033e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Next, we convert the gender variable (a string) to dummy encoding:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Convert gender variable:&lt;/span&gt;
&lt;span class="n"&gt;dummy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_dummies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dummy&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Note, we&amp;#39;re not concerned about collinearity having both a female and a male category,&lt;/span&gt;
&lt;span class="sd"&gt;as there are several cases where both values are 0, presumably because the user did not&lt;/span&gt;
&lt;span class="sd"&gt;supply the information.  Thus, the two columns, male and female, capture the 3 cases:&lt;/span&gt;
&lt;span class="sd"&gt;male, female, and &amp;#39;not supplied&amp;#39;. &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A couple more quick inspections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_transaction_date&lt;/th&gt;
      &lt;th&gt;latest_expire_date&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3158.450&lt;/td&gt;
      &lt;td&gt;789.612500&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;8.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2.250000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170220&lt;/td&gt;
      &lt;td&gt;20170319&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;6264&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;6229&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;32.571429&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;32731.138&lt;/td&gt;
      &lt;td&gt;4675.876857&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.142857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;2.857143&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;13.571429&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;36.571429&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;98422.408&lt;/td&gt;
      &lt;td&gt;7030.172000&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;5.071429&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;2.428571&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;1044&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;178909.861&lt;/td&gt;
      &lt;td&gt;6169.305552&lt;/td&gt;
      &lt;td&gt;656&lt;/td&gt;
      &lt;td&gt;22.620690&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;4.655172&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;2.103448&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.551724&lt;/td&gt;
      &lt;td&gt;571&lt;/td&gt;
      &lt;td&gt;19.689655&lt;/td&gt;
      &lt;td&gt;4298&lt;/td&gt;
      &lt;td&gt;58.876712&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;632743.845&lt;/td&gt;
      &lt;td&gt;8667.723904&lt;/td&gt;
      &lt;td&gt;2717&lt;/td&gt;
      &lt;td&gt;37.219178&lt;/td&gt;
      &lt;td&gt;393&lt;/td&gt;
      &lt;td&gt;5.383562&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;2.575342&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;2.589041&lt;/td&gt;
      &lt;td&gt;2094&lt;/td&gt;
      &lt;td&gt;28.684932&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170207&lt;/td&gt;
      &lt;td&gt;20170306&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6094&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;177&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;243&lt;/td&gt;
      &lt;td&gt;34.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;60581.740&lt;/td&gt;
      &lt;td&gt;8654.534286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;489&lt;/td&gt;
      &lt;td&gt;34.928571&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;122772.792&lt;/td&gt;
      &lt;td&gt;8769.485143&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;2.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.357143&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.785714&lt;/td&gt;
      &lt;td&gt;476&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;32.107143&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;231622.820&lt;/td&gt;
      &lt;td&gt;8272.243571&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;2.607143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.392857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;31.892857&lt;/td&gt;
      &lt;td&gt;2396&lt;/td&gt;
      &lt;td&gt;35.235294&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;770040.608&lt;/td&gt;
      &lt;td&gt;11324.126588&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;2.647059&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;0.485294&lt;/td&gt;
      &lt;td&gt;2953&lt;/td&gt;
      &lt;td&gt;43.426471&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170202&lt;/td&gt;
      &lt;td&gt;20170301&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6266&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6089&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;24.200000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;30054.147&lt;/td&gt;
      &lt;td&gt;6010.829400&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;5.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.400000&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;24.600000&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
      &lt;td&gt;17.454545&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;43518.795&lt;/td&gt;
      &lt;td&gt;3956.254091&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;15.818182&lt;/td&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;17.576923&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;111841.140&lt;/td&gt;
      &lt;td&gt;4301.582308&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;3.076923&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.884615&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;456&lt;/td&gt;
      &lt;td&gt;17.538462&lt;/td&gt;
      &lt;td&gt;1229&lt;/td&gt;
      &lt;td&gt;21.189655&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;287422.839&lt;/td&gt;
      &lt;td&gt;4955.566190&lt;/td&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;1.396552&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0.948276&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1.034483&lt;/td&gt;
      &lt;td&gt;1145&lt;/td&gt;
      &lt;td&gt;19.741379&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;596&lt;/td&gt;
      &lt;td&gt;3.973333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170228&lt;/td&gt;
      &lt;td&gt;20170327&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6145&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2399.824&lt;/td&gt;
      &lt;td&gt;1199.912000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2630.818&lt;/td&gt;
      &lt;td&gt;657.704500&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;645&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20170204&lt;/td&gt;
      &lt;td&gt;20170303&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6143&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6121&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The team added a few more features to improve the model, comparing (subtracting) the latest transaction date, latest expiry date, and latest user log date in the cell below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#First transform these into datetime, then into 4 components&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd_to_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_expire_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd_to_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_expire_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;split_date_col&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;split_date_col&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_expire_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Now perform the subtraction of all 3 combinations&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_trans_vs_expire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_transaction_date_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_expire_date_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_trans_vs_log&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_transaction_date_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatemax_date_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_log_vs_expire&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatemax_date_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_expire_date_absday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3158.450&lt;/td&gt;
      &lt;td&gt;789.612500&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;8.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2.250000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;6264&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;6229&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;6260&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;6287&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-4&lt;/td&gt;
      &lt;td&gt;-23&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;32.571429&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;32731.138&lt;/td&gt;
      &lt;td&gt;4675.876857&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.142857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;2.857143&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;13.571429&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;36.571429&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;98422.408&lt;/td&gt;
      &lt;td&gt;7030.172000&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;5.071429&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;2.428571&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;1044&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;178909.861&lt;/td&gt;
      &lt;td&gt;6169.305552&lt;/td&gt;
      &lt;td&gt;656&lt;/td&gt;
      &lt;td&gt;22.620690&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;4.655172&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;2.103448&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.551724&lt;/td&gt;
      &lt;td&gt;571&lt;/td&gt;
      &lt;td&gt;19.689655&lt;/td&gt;
      &lt;td&gt;4298&lt;/td&gt;
      &lt;td&gt;58.876712&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;632743.845&lt;/td&gt;
      &lt;td&gt;8667.723904&lt;/td&gt;
      &lt;td&gt;2717&lt;/td&gt;
      &lt;td&gt;37.219178&lt;/td&gt;
      &lt;td&gt;393&lt;/td&gt;
      &lt;td&gt;5.383562&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;2.575342&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;2.589041&lt;/td&gt;
      &lt;td&gt;2094&lt;/td&gt;
      &lt;td&gt;28.684932&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6094&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6247&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6274&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-20&lt;/td&gt;
      &lt;td&gt;-7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;177&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;243&lt;/td&gt;
      &lt;td&gt;34.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;60581.740&lt;/td&gt;
      &lt;td&gt;8654.534286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;489&lt;/td&gt;
      &lt;td&gt;34.928571&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;122772.792&lt;/td&gt;
      &lt;td&gt;8769.485143&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;2.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.357143&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.785714&lt;/td&gt;
      &lt;td&gt;476&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;32.107143&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;231622.820&lt;/td&gt;
      &lt;td&gt;8272.243571&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;2.607143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.392857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;31.892857&lt;/td&gt;
      &lt;td&gt;2396&lt;/td&gt;
      &lt;td&gt;35.235294&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;770040.608&lt;/td&gt;
      &lt;td&gt;11324.126588&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;2.647059&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;0.485294&lt;/td&gt;
      &lt;td&gt;2953&lt;/td&gt;
      &lt;td&gt;43.426471&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6266&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6089&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6242&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6269&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-24&lt;/td&gt;
      &lt;td&gt;-3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;24.200000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;30054.147&lt;/td&gt;
      &lt;td&gt;6010.829400&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;5.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.400000&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;24.600000&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
      &lt;td&gt;17.454545&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;43518.795&lt;/td&gt;
      &lt;td&gt;3956.254091&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;15.818182&lt;/td&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;17.576923&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;111841.140&lt;/td&gt;
      &lt;td&gt;4301.582308&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;3.076923&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.884615&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;456&lt;/td&gt;
      &lt;td&gt;17.538462&lt;/td&gt;
      &lt;td&gt;1229&lt;/td&gt;
      &lt;td&gt;21.189655&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;287422.839&lt;/td&gt;
      &lt;td&gt;4955.566190&lt;/td&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;1.396552&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0.948276&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1.034483&lt;/td&gt;
      &lt;td&gt;1145&lt;/td&gt;
      &lt;td&gt;19.741379&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;596&lt;/td&gt;
      &lt;td&gt;3.973333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6145&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6295&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2399.824&lt;/td&gt;
      &lt;td&gt;1199.912000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2630.818&lt;/td&gt;
      &lt;td&gt;657.704500&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;645&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6143&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6121&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6244&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;6271&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;-128&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;(88544, 159)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;7. Quick Exploratory Data Analysis&lt;/h1&gt;
&lt;p&gt;Next, we perform some quick EDA on our data.&lt;/p&gt;
&lt;h2&gt;Combined Dataset&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;no_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatelistening_tenure&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
               &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;within_days_7num_unqmean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;best&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Listening Tenure&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Mean Number of Unique listening Periods in the last 7 days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Text(0,0.5,&amp;#39;Mean Number of Unique listening Periods in the last 7 days&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_70_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Looking at the above plot, we can see that overall people who churn have low numbers of unique plays, meaning they aren't using the music service. We can also see a spike in number of unique plays for users who have a long tenure (&amp;gt;700 days). Intuitively this makes sense as users who are commited to the service (have used the service for a long time) may have developed lifestyle patterns where they use the service while driving/working/etc.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;avg_price_no_churn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;avg_price_is_churn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Avg cost/day for no churn: &lt;/span&gt;&lt;span class="si"&gt;%.2f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;avg_price_no_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Avg cost/day for churn: &lt;/span&gt;&lt;span class="si"&gt;%.2f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;avg_price_is_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Avg cost/day for no churn: 4.54&lt;/span&gt;
&lt;span class="err"&gt;Avg cost/day for churn: 4.67&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For users who churn, we can see that they tend to spend more per day on the music subscription service. Our analysis will end with an economic analysis which uses the predictions to model how much incentive should be offered to specific users. This will hopefully help incentivize those customers that will churn and prevent it. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triu_indices_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261eb32550&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_74_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The correlation plot shows that there is correlation amongst the number of unique songs played within the last X number of days (where if the two X values are close together the correlation tends to be higher). This makes sense and is what was expected. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mean_col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mean_col&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;within_days_1num_unqmean      20.698794&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqmean      21.900082&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqmean     22.383794&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqmean     23.271521&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqmean     24.238664&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqmean    24.740990&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqmean    25.245055&lt;/span&gt;
&lt;span class="c"&gt;dtype: float64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#plt.plot_date(reg_time, df_fa[&amp;#39;within_days_7total_secsmean&amp;#39;], )&lt;/span&gt;
&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;no_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration_init_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
               &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;within_days_7total_secsmean&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;best&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Registration Date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number of Seconds (Avg) Listed during last 7 days&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Text(0,0.5,&amp;#39;Number of Seconds (Avg) Listed during last 7 days&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_77_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;This plot shows the Registration Date vs Avg seconds listened over past 7 days. The intent will be to change this to transaction date as this will more accurately reflect when the user ends service. We can see a trend in more churn occuring in the last 4 years of the dataset. This could be due to an increased level of users however (same proportion of churn).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration_init_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;reg_count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;thirty_day_churn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2005&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;reg_count&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;thirty_day_churn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatelistening_tenure&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;registration_time&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2005&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;reg_count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Year of Registration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Registration Count Per Year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;function matplotlib.pyplot.show&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_79_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2005&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;thirty_day_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proportion of 30 day Churn to Total Registration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;function matplotlib.pyplot.show&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_80_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;This statistic shows that there is a high level of churn recently for users who are using a trial subscription, or who a very short duration subscription. From a business perspective this is concerning, because it means that a very high level of churn is occuring, and the problem needs to be solved to reduce churn levels back. The sharp spike may have been when the company started offering 30 days subscriptions or some other factor that has caused increased churn for customers with less than 30 day subscriptionps.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date_featuresdatemax_date_month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Histogram of the last listen date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_82_0.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The dataset (from the dataset description) was collected to include churn statistics for the months of February and March. We can see here a large peak for the month of February, which intuitively makes sense because users are utilizing the service often and most recently listened in the month in which the data was collected. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Is Latest Cancel and Is Churn Correlation: &lt;/span&gt;&lt;span class="si"&gt;%0.4f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corrcoef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;latest_is_cancel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Is Latest Cancel and Is Churn Correlation: 0.4328&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Intuitively we had thought there would be a very high correlation between these two variables. However we can see here that, while there is decent correlation between the two variables, they are not perfectly aligned. This is due to the times when a user cancels their service but does not churn (changes plan type, etc). &lt;/p&gt;
&lt;h2&gt;User Logs EDA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;num_unq&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekday_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Unique Play Count Grouped by Weekday&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261b9b3f28&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_87_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The figure above looks at listening behavior grouped by the day of the week. We can see that listening is fairly consitent across all days of the week. The above plot looks at listening counts, but doesn't analyze how long a user is listening for, we can look at the total seconds feature included in the dataset to determine this. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#This cell takes a long time to plot, print statistics to screen instead&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekday_name&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_secs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;date&lt;/span&gt;
&lt;span class="err"&gt;Friday      -4.334985e+18&lt;/span&gt;
&lt;span class="err"&gt;Monday      -3.892263e+18&lt;/span&gt;
&lt;span class="err"&gt;Saturday    -3.431094e+18&lt;/span&gt;
&lt;span class="err"&gt;Sunday      -3.855369e+18&lt;/span&gt;
&lt;span class="err"&gt;Thursday    -3.919933e+18&lt;/span&gt;
&lt;span class="err"&gt;Tuesday     -3.615562e+18&lt;/span&gt;
&lt;span class="err"&gt;Wednesday   -3.486435e+18&lt;/span&gt;
&lt;span class="c"&gt;Name: total_secs, dtype: float64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is some odd behavior here, where all of the sums are large negative values. We need to analyze the column itself in order to determine why this odd behavior is observed. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_secs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;count    1.971063e+07&lt;/span&gt;
&lt;span class="err"&gt;mean    -1.346260e+12&lt;/span&gt;
&lt;span class="err"&gt;std      1.116172e+14&lt;/span&gt;
&lt;span class="err"&gt;min     -9.223372e+15&lt;/span&gt;
&lt;span class="err"&gt;25%      1.966237e+03&lt;/span&gt;
&lt;span class="err"&gt;50%      4.703210e+03&lt;/span&gt;
&lt;span class="err"&gt;75%      1.028291e+04&lt;/span&gt;
&lt;span class="err"&gt;max      9.223372e+15&lt;/span&gt;
&lt;span class="c"&gt;Name: total_secs, dtype: float64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The mean value for this column is in fact negative, which intuitively doesn't make sense as it is not possible to listen to a song a for a negative time period. Further analysis regarding the method in which the software calculates total_secs will be important to better understand why negative values are being written to the database. &lt;/p&gt;
&lt;p&gt;To further explore the total seconds columns, below we analyze the sum of the total seconds by user.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#This cell takes a long time to plot, print statistics to screen instead&lt;/span&gt;
&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;total_secs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;msno&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;count    8.855000e+04&lt;/span&gt;
&lt;span class="err"&gt;mean    -2.996684e+14&lt;/span&gt;
&lt;span class="err"&gt;std      3.620704e+15&lt;/span&gt;
&lt;span class="err"&gt;min     -3.135946e+17&lt;/span&gt;
&lt;span class="err"&gt;25%      2.145492e+05&lt;/span&gt;
&lt;span class="err"&gt;50%      8.453256e+05&lt;/span&gt;
&lt;span class="err"&gt;75%      2.223251e+06&lt;/span&gt;
&lt;span class="err"&gt;max      9.223372e+15&lt;/span&gt;
&lt;span class="c"&gt;Name: total_secs, dtype: float64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We continue to see negative values, even when summing over the total listening time for a specific user. This behavior is strange and now well understood. Further investigation into the matter will be necessary to determine why negative listening times are computed. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros_like&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triu_indices_from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;heatmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;corr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;mask&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261ba97630&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="output_95_1.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_82_0.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;This correlation plot anaylzes the correlation between the num columns in the dataset. From the definition at the start of this notebook, these columns represent the songs that have been played to a certain proportion of the total song length (25%, 50%, etc). Here we can see relatively low correlation between the columns.&lt;/p&gt;
&lt;p&gt;The higher listening buckets do not factor in songs that fall below the bucket cutoff (ie for the num_50 bucket it doesn't count a song if it is played &amp;lt;50%, but rather 25-50% of the time). We found this behavior insteresting and wanted to further analyze by plotting a bar chart grouped by these columns.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sum_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;sum_num&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum_num&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;sum_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sum_num&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;cols&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sum of Proportion Song Listened To&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Text(0.5,1,&amp;#39;Sum of Proportion Song Listened To&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_97_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;We can see that num_100 (or listening to the entire song) is by far the most popular method. Num_25 (or less than 25% listened to) was the second most popular column. Intuitively this makes sense as a user is most likely either to like a song and listen to the whole thing, or not like a song and quickly switch to a new song. &lt;/p&gt;
&lt;h2&gt;Members EDA&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Members grouped by gender&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261c88c4e0&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_100_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proportion of gender column = N/A: &lt;/span&gt;&lt;span class="si"&gt;%0.4f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gender&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Proportion of gender column = N/A: 0.4843&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Breakdown by gender, we can see that there are overall a larger proportion of males that utilize the kkbox dataset. Additionally we can see that over 48% of this column is N/A values (meaning that the user didn't supply their gender). This has been accounted for in the combined dataset by separating into two colums of 'male' and 'female' and capturing data in binary format. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count by city&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261b4caf28&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_103_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;We can see that overall city = 1 has a significantly higher proportion of users, than any other city. The mapping between numeric and actual city names isn't provided, however from an ML perspective this is alright, however for business purposes it would be preferable to have the city names. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count by birthdate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261f0ccba8&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_105_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The birthdate column has a large peak of entries at the 0 value (presumably not provided by user). Below we filter out the zero value to look at this distribution of birthdays. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count by birthdate Filtered&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_107_0.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The distribution of provided birthdays appears to be skewed slightly. From the first plot it was hard to determine the range of entries, below we use the describe function to look at the birthday column. From the data provided we see that there are negative values for the birthate (min = -49) which is odd and needs to be further understood. It would also be helpful to know how this integer is defined (presumably days since a specifc date). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;count    89473.000000&lt;/span&gt;
&lt;span class="err"&gt;mean        14.915069&lt;/span&gt;
&lt;span class="err"&gt;std         18.416087&lt;/span&gt;
&lt;span class="err"&gt;min        -49.000000&lt;/span&gt;
&lt;span class="err"&gt;25%          0.000000&lt;/span&gt;
&lt;span class="err"&gt;50%         17.000000&lt;/span&gt;
&lt;span class="err"&gt;75%         27.000000&lt;/span&gt;
&lt;span class="err"&gt;max       1051.000000&lt;/span&gt;
&lt;span class="c"&gt;Name: bd, dtype: float64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The members table provides information about each of the members subscribed to the KKBox service. Through our EDA we noted that there were a few columns with dispraportionately high values, which could make analysis using a machine learning algorithm difficult, as this one common value may make it difficult to discern information from the other data. By including a high number of features, our model will hopefully overcome this difficulty and accurately predict churn. &lt;/p&gt;
&lt;p&gt;Moving forward it is preferrable to better understand the data sources and computation and clean up the data collection as best as possible. &lt;/p&gt;
&lt;h2&gt;Transactions EDA&lt;/h2&gt;
&lt;p&gt;The transactions table contains information related to the subscription to KKBox, including the plan list price, the actual price the user paid as well as payment methods and dates. For payment method, the column is contains integers that map to a specific type of payment, we have not been granted access to the mapping, however from an ML perspective, we can continue to carry out models. When deriving business insight however, access to the mapping of this column will be important. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_method_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;payment_method_id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count by payment type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2261b7f1588&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_112_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;From the plot above we can see that payment method 41 is by far the most popular.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plan_list_price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plan_list_price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count by plan list price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2262186a6a0&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_114_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Above we analyze the popularity of specific plans on kkbox. From their website it appears that there is a free tier, monthly and yearly tiers (this information is as of todays date (4/21/2018) however we do not know the specific plan offerings for the period of data collection for this analysis. &lt;/p&gt;
&lt;p&gt;From the plot above we can see there is an overwhelmingly popular plan price at approximately 149.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;prop_collected&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;actual_amount_paid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plan_list_price&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;prop_collected&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;prop_collected&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Count by Proportion of Bill Collected&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x22621958828&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_116_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;There are two columns in the table that analyze the plan cost and amount collected. We wanted to look and see the distribution of memberships that do not collect the total price of the plan. From above we can see that most plans are fully paid, there is an infinity value which is most likely an error (plan list price of 0 presumably), and there is a peak at 80% &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd_to_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_cancel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;transaction_date&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Is Cancel by Month&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x2262195d748&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_118_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Our team next wanted to look at the is_cancel category, which has some correlation with churn. By month we can see that users peaked in January and especially February. It would be interesting to see how this correlates to churn (as is_cancel isn't perfectly correlated). If there is a seasonality to churn, then it would be important for predicting churn, and providing business insight to offer incentives to users who's memberships expire in this timeframe to renew.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Is Latest Cancel and Is Auto Renew: &lt;/span&gt;&lt;span class="si"&gt;%0.4f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;corrcoef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_cancel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_auto_renew&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Is Latest Cancel and Is Auto Renew: 0.0806&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Our team had thought that the cancel and auto renew categories would be negatively correlated (if a user was on an auto renew membership, they may not pay as much attention and forget to cancel/change membership). From the covariance we can see that there is almost no correlation between the two features. &lt;/p&gt;
&lt;p&gt;The transactions &lt;/p&gt;
&lt;h1&gt;8. Writing Output&lt;/h1&gt;
&lt;p&gt;Having extracted our features and performing some data manipulation, we will now write the features file to a .pkl file, allowing us to use this output in the second notebook without having to run all the code above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Write all features to pkl file&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_pickle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;df_fa.pkl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Music Churn:  Predictive Modeling Notebook&lt;/h1&gt;
&lt;p&gt;Python Notebook 2 of 3&lt;/p&gt;
&lt;h2&gt;W207, Final Project&lt;/h2&gt;
&lt;p&gt;Spring, 2018&lt;/p&gt;
&lt;p&gt;Team:  Cameron Kennedy, Gaurav Khanna, Aaron Olson&lt;/p&gt;
&lt;h2&gt;Overview of Notebooks&lt;/h2&gt;
&lt;p&gt;For this project, the team created 3 separate Jupyter Notebooks to document its work.  See notebook #1, (Data Preparation / Feature Extraction) for a brief description of each notebook.&lt;/p&gt;
&lt;h2&gt;Table of Contents (this notebook only)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Setup and Loading Libraries&lt;/li&gt;
&lt;li&gt;Data Preparation&lt;/li&gt;
&lt;li&gt;Predictive Modeling! &lt;/li&gt;
&lt;li&gt;Calculating Probabilities&lt;/li&gt;
&lt;li&gt;Economic Impact&lt;/li&gt;
&lt;li&gt;Final Insights and Takeaways&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;1. Setup and Loading Libraries&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Import Required Libraries&lt;/span&gt;
&lt;span class="c1"&gt;#Data manipulation and visualization&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pprint&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;pprint&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="c1"&gt;#Models et al&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.naive_bayes&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GaussianNB&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.neighbors&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.grid_search&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.ensemble&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RandomForestClassifier&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.linear_model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LogisticRegression&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;svm&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;xgboost&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.calibration&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;calibration_curve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CalibratedClassifierCV&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;brier_score_loss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;precision_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recall_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f1_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;log_loss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#from sklearn.preprocessing import CategoricalEncoder  #Not yet released!&lt;/span&gt;

&lt;span class="c1"&gt;#Metrics&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.metrics&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;roc_curve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;precision_recall_curve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;make_scorer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recall_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;accuracy_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;precision_score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classification_report&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;C:\Users\AOlson\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\cross_validation.py:41: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.&lt;/span&gt;
&lt;span class="c"&gt;  &amp;quot;This module will be removed in 0.20.&amp;quot;, DeprecationWarning)&lt;/span&gt;
&lt;span class="c"&gt;C:\Users\AOlson\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\grid_search.py:42: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.&lt;/span&gt;
&lt;span class="c"&gt;  DeprecationWarning)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we'll load the data and print the first few rows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Load the data&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_pickle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;df_fa.pkl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;#Pickle format preserves file as python object&lt;/span&gt;

&lt;span class="c1"&gt;#Set initial parameter(s)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;display.max_rows&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max_columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;

&lt;span class="c1"&gt;#Ensure it&amp;#39;s what we expect:&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;(88544, 160)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
      &lt;th&gt;registration_time&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;mKfgXQAmVeSKzN4rXW37qz0HbGCuYBspTBM3ONXZudg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20170120&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;10.068&lt;/td&gt;
      &lt;td&gt;10.068000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3158.450&lt;/td&gt;
      &lt;td&gt;789.612500&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;8.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2.250000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3245.638&lt;/td&gt;
      &lt;td&gt;540.939667&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;6.833333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;258&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;6264&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;6229&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;6260&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;6287&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-4&lt;/td&gt;
      &lt;td&gt;-23&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;AFcKYsrudzim8OFa+fL/c9g5gZabAbhaJnoM0qmlJfo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160907&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;2633.631&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;32.571429&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;32731.138&lt;/td&gt;
      &lt;td&gt;4675.876857&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.142857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;2.857143&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;13.571429&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;36.571429&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;98422.408&lt;/td&gt;
      &lt;td&gt;7030.172000&lt;/td&gt;
      &lt;td&gt;301&lt;/td&gt;
      &lt;td&gt;21.500000&lt;/td&gt;
      &lt;td&gt;71&lt;/td&gt;
      &lt;td&gt;5.071429&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;2.428571&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;305&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;1044&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;178909.861&lt;/td&gt;
      &lt;td&gt;6169.305552&lt;/td&gt;
      &lt;td&gt;656&lt;/td&gt;
      &lt;td&gt;22.620690&lt;/td&gt;
      &lt;td&gt;135&lt;/td&gt;
      &lt;td&gt;4.655172&lt;/td&gt;
      &lt;td&gt;61&lt;/td&gt;
      &lt;td&gt;2.103448&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.551724&lt;/td&gt;
      &lt;td&gt;571&lt;/td&gt;
      &lt;td&gt;19.689655&lt;/td&gt;
      &lt;td&gt;4298&lt;/td&gt;
      &lt;td&gt;58.876712&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;632743.845&lt;/td&gt;
      &lt;td&gt;8667.723904&lt;/td&gt;
      &lt;td&gt;2717&lt;/td&gt;
      &lt;td&gt;37.219178&lt;/td&gt;
      &lt;td&gt;393&lt;/td&gt;
      &lt;td&gt;5.383562&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;2.575342&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;2.589041&lt;/td&gt;
      &lt;td&gt;2094&lt;/td&gt;
      &lt;td&gt;28.684932&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;9218&lt;/td&gt;
      &lt;td&gt;59.857143&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;1232770.399&lt;/td&gt;
      &lt;td&gt;8005.002591&lt;/td&gt;
      &lt;td&gt;5289&lt;/td&gt;
      &lt;td&gt;34.344156&lt;/td&gt;
      &lt;td&gt;838&lt;/td&gt;
      &lt;td&gt;5.441558&lt;/td&gt;
      &lt;td&gt;410&lt;/td&gt;
      &lt;td&gt;2.662338&lt;/td&gt;
      &lt;td&gt;323&lt;/td&gt;
      &lt;td&gt;2.097403&lt;/td&gt;
      &lt;td&gt;4204&lt;/td&gt;
      &lt;td&gt;27.298701&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6094&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;6247&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6274&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-20&lt;/td&gt;
      &lt;td&gt;-7&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;qk4mEZUYZq+4sQE7bzRYKc5Pvj+Xc7Wmu25DrCzltEU=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20160902&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;177&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;271.093&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;243&lt;/td&gt;
      &lt;td&gt;34.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;60581.740&lt;/td&gt;
      &lt;td&gt;8654.534286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;238&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;489&lt;/td&gt;
      &lt;td&gt;34.928571&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;122772.792&lt;/td&gt;
      &lt;td&gt;8769.485143&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;2.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.357143&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.785714&lt;/td&gt;
      &lt;td&gt;476&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;899&lt;/td&gt;
      &lt;td&gt;32.107143&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;231622.820&lt;/td&gt;
      &lt;td&gt;8272.243571&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;2.607143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.392857&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;893&lt;/td&gt;
      &lt;td&gt;31.892857&lt;/td&gt;
      &lt;td&gt;2396&lt;/td&gt;
      &lt;td&gt;35.235294&lt;/td&gt;
      &lt;td&gt;68&lt;/td&gt;
      &lt;td&gt;770040.608&lt;/td&gt;
      &lt;td&gt;11324.126588&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;2.647059&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.470588&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;0.485294&lt;/td&gt;
      &lt;td&gt;2953&lt;/td&gt;
      &lt;td&gt;43.426471&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;3580&lt;/td&gt;
      &lt;td&gt;32.844037&lt;/td&gt;
      &lt;td&gt;109&lt;/td&gt;
      &lt;td&gt;1137009.556&lt;/td&gt;
      &lt;td&gt;10431.280330&lt;/td&gt;
      &lt;td&gt;423&lt;/td&gt;
      &lt;td&gt;3.880734&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;0.660550&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;0.532110&lt;/td&gt;
      &lt;td&gt;4308&lt;/td&gt;
      &lt;td&gt;39.522936&lt;/td&gt;
      &lt;td&gt;180&lt;/td&gt;
      &lt;td&gt;774&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6266&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6089&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6242&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6269&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-24&lt;/td&gt;
      &lt;td&gt;-3&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;G2UGNLph2J6euGmZ7WIa1+Kc+dPZBJI0HbLPu5YtrZw=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161028&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;1626.704&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;121&lt;/td&gt;
      &lt;td&gt;24.200000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;30054.147&lt;/td&gt;
      &lt;td&gt;6010.829400&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;5.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.400000&lt;/td&gt;
      &lt;td&gt;123&lt;/td&gt;
      &lt;td&gt;24.600000&lt;/td&gt;
      &lt;td&gt;192&lt;/td&gt;
      &lt;td&gt;17.454545&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;43518.795&lt;/td&gt;
      &lt;td&gt;3956.254091&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;15.818182&lt;/td&gt;
      &lt;td&gt;457&lt;/td&gt;
      &lt;td&gt;17.576923&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;111841.140&lt;/td&gt;
      &lt;td&gt;4301.582308&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;3.076923&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.884615&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.576923&lt;/td&gt;
      &lt;td&gt;456&lt;/td&gt;
      &lt;td&gt;17.538462&lt;/td&gt;
      &lt;td&gt;1229&lt;/td&gt;
      &lt;td&gt;21.189655&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;287422.839&lt;/td&gt;
      &lt;td&gt;4955.566190&lt;/td&gt;
      &lt;td&gt;203&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;81&lt;/td&gt;
      &lt;td&gt;1.396552&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0.948276&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1.034483&lt;/td&gt;
      &lt;td&gt;1145&lt;/td&gt;
      &lt;td&gt;19.741379&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;1441&lt;/td&gt;
      &lt;td&gt;20.884058&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;326268.069&lt;/td&gt;
      &lt;td&gt;4728.522739&lt;/td&gt;
      &lt;td&gt;247&lt;/td&gt;
      &lt;td&gt;3.579710&lt;/td&gt;
      &lt;td&gt;115&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.072464&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;1.101449&lt;/td&gt;
      &lt;td&gt;1272&lt;/td&gt;
      &lt;td&gt;18.434783&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;596&lt;/td&gt;
      &lt;td&gt;3.973333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6145&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6295&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;EqSHZpMj5uddJvv2gXcHvuOKFOdS5NN6RalHfzEhhaI=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;20161004&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;156.204&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2399.824&lt;/td&gt;
      &lt;td&gt;1199.912000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;4.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2630.818&lt;/td&gt;
      &lt;td&gt;657.704500&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;136&lt;/td&gt;
      &lt;td&gt;13.600000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;15562.900&lt;/td&gt;
      &lt;td&gt;1556.290000&lt;/td&gt;
      &lt;td&gt;76&lt;/td&gt;
      &lt;td&gt;7.600000&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;3.600000&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;2.100000&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
      &lt;td&gt;645&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;129&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.300000&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6143&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6121&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;6244&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;6271&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;-128&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
      &lt;th&gt;registration_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.0&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;8.854400e+04&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
      &lt;td&gt;88544.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;6.525038&lt;/td&gt;
      &lt;td&gt;14.980733&lt;/td&gt;
      &lt;td&gt;6.635018&lt;/td&gt;
      &lt;td&gt;2.013375e+07&lt;/td&gt;
      &lt;td&gt;0.505590&lt;/td&gt;
      &lt;td&gt;489.896266&lt;/td&gt;
      &lt;td&gt;20.698794&lt;/td&gt;
      &lt;td&gt;20.698794&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;5292.578450&lt;/td&gt;
      &lt;td&gt;5292.578450&lt;/td&gt;
      &lt;td&gt;4.751005&lt;/td&gt;
      &lt;td&gt;4.751005&lt;/td&gt;
      &lt;td&gt;1.181175&lt;/td&gt;
      &lt;td&gt;1.181175&lt;/td&gt;
      &lt;td&gt;0.712719&lt;/td&gt;
      &lt;td&gt;0.712719&lt;/td&gt;
      &lt;td&gt;0.790985&lt;/td&gt;
      &lt;td&gt;0.790985&lt;/td&gt;
      &lt;td&gt;20.047660&lt;/td&gt;
      &lt;td&gt;20.047660&lt;/td&gt;
      &lt;td&gt;94.714458&lt;/td&gt;
      &lt;td&gt;21.900082&lt;/td&gt;
      &lt;td&gt;3.630568&lt;/td&gt;
      &lt;td&gt;25398.043300&lt;/td&gt;
      &lt;td&gt;5679.751873&lt;/td&gt;
      &lt;td&gt;20.606806&lt;/td&gt;
      &lt;td&gt;5.048088&lt;/td&gt;
      &lt;td&gt;5.118721&lt;/td&gt;
      &lt;td&gt;1.264542&lt;/td&gt;
      &lt;td&gt;3.193474&lt;/td&gt;
      &lt;td&gt;0.764835&lt;/td&gt;
      &lt;td&gt;3.609866&lt;/td&gt;
      &lt;td&gt;0.839836&lt;/td&gt;
      &lt;td&gt;96.809236&lt;/td&gt;
      &lt;td&gt;21.497445&lt;/td&gt;
      &lt;td&gt;180.072506&lt;/td&gt;
      &lt;td&gt;22.383794&lt;/td&gt;
      &lt;td&gt;6.679696&lt;/td&gt;
      &lt;td&gt;4.851858e+04&lt;/td&gt;
      &lt;td&gt;5818.581592&lt;/td&gt;
      &lt;td&gt;38.873690&lt;/td&gt;
      &lt;td&gt;5.179982&lt;/td&gt;
      &lt;td&gt;9.669735&lt;/td&gt;
      &lt;td&gt;1.298046&lt;/td&gt;
      &lt;td&gt;6.069570&lt;/td&gt;
      &lt;td&gt;0.785710&lt;/td&gt;
      &lt;td&gt;6.831553&lt;/td&gt;
      &lt;td&gt;0.857796&lt;/td&gt;
      &lt;td&gt;185.109313&lt;/td&gt;
      &lt;td&gt;22.017982&lt;/td&gt;
      &lt;td&gt;386.728101&lt;/td&gt;
      &lt;td&gt;23.271521&lt;/td&gt;
      &lt;td&gt;13.902444&lt;/td&gt;
      &lt;td&gt;1.039538e+05&lt;/td&gt;
      &lt;td&gt;6040.184570&lt;/td&gt;
      &lt;td&gt;84.352706&lt;/td&gt;
      &lt;td&gt;5.450459&lt;/td&gt;
      &lt;td&gt;20.850831&lt;/td&gt;
      &lt;td&gt;1.359949&lt;/td&gt;
      &lt;td&gt;13.151473&lt;/td&gt;
      &lt;td&gt;0.825081&lt;/td&gt;
      &lt;td&gt;14.948783&lt;/td&gt;
      &lt;td&gt;0.904241&lt;/td&gt;
      &lt;td&gt;396.595557&lt;/td&gt;
      &lt;td&gt;22.841633&lt;/td&gt;
      &lt;td&gt;1093.917736&lt;/td&gt;
      &lt;td&gt;24.238664&lt;/td&gt;
      &lt;td&gt;37.852435&lt;/td&gt;
      &lt;td&gt;-8.333365e+11&lt;/td&gt;
      &lt;td&gt;-1.651270e+10&lt;/td&gt;
      &lt;td&gt;241.791143&lt;/td&gt;
      &lt;td&gt;5.797655&lt;/td&gt;
      &lt;td&gt;59.157650&lt;/td&gt;
      &lt;td&gt;1.442505&lt;/td&gt;
      &lt;td&gt;37.497256&lt;/td&gt;
      &lt;td&gt;0.874044&lt;/td&gt;
      &lt;td&gt;42.036321&lt;/td&gt;
      &lt;td&gt;0.943332&lt;/td&gt;
      &lt;td&gt;1121.233093&lt;/td&gt;
      &lt;td&gt;23.773736&lt;/td&gt;
      &lt;td&gt;2090.805633&lt;/td&gt;
      &lt;td&gt;24.740990&lt;/td&gt;
      &lt;td&gt;71.289811&lt;/td&gt;
      &lt;td&gt;-1.979174e+12&lt;/td&gt;
      &lt;td&gt;-2.291994e+10&lt;/td&gt;
      &lt;td&gt;464.508132&lt;/td&gt;
      &lt;td&gt;5.968142&lt;/td&gt;
      &lt;td&gt;114.264603&lt;/td&gt;
      &lt;td&gt;1.498918&lt;/td&gt;
      &lt;td&gt;72.136554&lt;/td&gt;
      &lt;td&gt;0.902613&lt;/td&gt;
      &lt;td&gt;80.350267&lt;/td&gt;
      &lt;td&gt;0.967418&lt;/td&gt;
      &lt;td&gt;2124.856648&lt;/td&gt;
      &lt;td&gt;24.115101&lt;/td&gt;
      &lt;td&gt;3896.207400&lt;/td&gt;
      &lt;td&gt;25.245055&lt;/td&gt;
      &lt;td&gt;131.113401&lt;/td&gt;
      &lt;td&gt;-6.041691e+12&lt;/td&gt;
      &lt;td&gt;-3.677399e+10&lt;/td&gt;
      &lt;td&gt;859.351520&lt;/td&gt;
      &lt;td&gt;6.090492&lt;/td&gt;
      &lt;td&gt;212.907018&lt;/td&gt;
      &lt;td&gt;1.541631&lt;/td&gt;
      &lt;td&gt;133.405527&lt;/td&gt;
      &lt;td&gt;0.921047&lt;/td&gt;
      &lt;td&gt;148.187715&lt;/td&gt;
      &lt;td&gt;0.979698&lt;/td&gt;
      &lt;td&gt;3949.711895&lt;/td&gt;
      &lt;td&gt;24.569486&lt;/td&gt;
      &lt;td&gt;6768.144403&lt;/td&gt;
      &lt;td&gt;25.652204&lt;/td&gt;
      &lt;td&gt;222.584850&lt;/td&gt;
      &lt;td&gt;-2.994804e+14&lt;/td&gt;
      &lt;td&gt;-7.498238e+11&lt;/td&gt;
      &lt;td&gt;1476.962256&lt;/td&gt;
      &lt;td&gt;6.214718&lt;/td&gt;
      &lt;td&gt;367.734708&lt;/td&gt;
      &lt;td&gt;1.582176&lt;/td&gt;
      &lt;td&gt;229.020227&lt;/td&gt;
      &lt;td&gt;0.940062&lt;/td&gt;
      &lt;td&gt;254.208992&lt;/td&gt;
      &lt;td&gt;0.992622&lt;/td&gt;
      &lt;td&gt;6864.914574&lt;/td&gt;
      &lt;td&gt;24.937062&lt;/td&gt;
      &lt;td&gt;437.796169&lt;/td&gt;
      &lt;td&gt;2037.669125&lt;/td&gt;
      &lt;td&gt;4.602800&lt;/td&gt;
      &lt;td&gt;2.989858&lt;/td&gt;
      &lt;td&gt;-5.606482&lt;/td&gt;
      &lt;td&gt;37.700296&lt;/td&gt;
      &lt;td&gt;52.462742&lt;/td&gt;
      &lt;td&gt;227.611199&lt;/td&gt;
      &lt;td&gt;227.036185&lt;/td&gt;
      &lt;td&gt;0.639874&lt;/td&gt;
      &lt;td&gt;0.174659&lt;/td&gt;
      &lt;td&gt;4.249737&lt;/td&gt;
      &lt;td&gt;2016.881234&lt;/td&gt;
      &lt;td&gt;2.525117&lt;/td&gt;
      &lt;td&gt;21.763507&lt;/td&gt;
      &lt;td&gt;6234.178363&lt;/td&gt;
      &lt;td&gt;2015.427177&lt;/td&gt;
      &lt;td&gt;4.265992&lt;/td&gt;
      &lt;td&gt;11.133335&lt;/td&gt;
      &lt;td&gt;5744.282097&lt;/td&gt;
      &lt;td&gt;0.242998&lt;/td&gt;
      &lt;td&gt;0.275456&lt;/td&gt;
      &lt;td&gt;2016.841740&lt;/td&gt;
      &lt;td&gt;2.525739&lt;/td&gt;
      &lt;td&gt;16.539788&lt;/td&gt;
      &lt;td&gt;6214.398627&lt;/td&gt;
      &lt;td&gt;2016.970320&lt;/td&gt;
      &lt;td&gt;2.601565&lt;/td&gt;
      &lt;td&gt;15.721178&lt;/td&gt;
      &lt;td&gt;6261.820010&lt;/td&gt;
      &lt;td&gt;-47.421384&lt;/td&gt;
      &lt;td&gt;-19.779737&lt;/td&gt;
      &lt;td&gt;-27.641647&lt;/td&gt;
      &lt;td&gt;2013.308423&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;6.551445&lt;/td&gt;
      &lt;td&gt;18.431336&lt;/td&gt;
      &lt;td&gt;2.234529&lt;/td&gt;
      &lt;td&gt;2.896439e+04&lt;/td&gt;
      &lt;td&gt;0.499972&lt;/td&gt;
      &lt;td&gt;271.954761&lt;/td&gt;
      &lt;td&gt;26.816538&lt;/td&gt;
      &lt;td&gt;26.816538&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;7839.883628&lt;/td&gt;
      &lt;td&gt;7839.883628&lt;/td&gt;
      &lt;td&gt;11.209580&lt;/td&gt;
      &lt;td&gt;11.209580&lt;/td&gt;
      &lt;td&gt;3.122491&lt;/td&gt;
      &lt;td&gt;3.122491&lt;/td&gt;
      &lt;td&gt;1.569186&lt;/td&gt;
      &lt;td&gt;1.569186&lt;/td&gt;
      &lt;td&gt;2.056548&lt;/td&gt;
      &lt;td&gt;2.056548&lt;/td&gt;
      &lt;td&gt;31.926074&lt;/td&gt;
      &lt;td&gt;31.926074&lt;/td&gt;
      &lt;td&gt;123.736267&lt;/td&gt;
      &lt;td&gt;22.179267&lt;/td&gt;
      &lt;td&gt;2.019227&lt;/td&gt;
      &lt;td&gt;37825.652389&lt;/td&gt;
      &lt;td&gt;6814.978016&lt;/td&gt;
      &lt;td&gt;40.174639&lt;/td&gt;
      &lt;td&gt;9.170749&lt;/td&gt;
      &lt;td&gt;9.780551&lt;/td&gt;
      &lt;td&gt;2.416056&lt;/td&gt;
      &lt;td&gt;5.525064&lt;/td&gt;
      &lt;td&gt;1.240117&lt;/td&gt;
      &lt;td&gt;8.967416&lt;/td&gt;
      &lt;td&gt;1.630039&lt;/td&gt;
      &lt;td&gt;154.190616&lt;/td&gt;
      &lt;td&gt;27.963725&lt;/td&gt;
      &lt;td&gt;232.545094&lt;/td&gt;
      &lt;td&gt;20.836810&lt;/td&gt;
      &lt;td&gt;4.052415&lt;/td&gt;
      &lt;td&gt;7.152130e+04&lt;/td&gt;
      &lt;td&gt;6539.990675&lt;/td&gt;
      &lt;td&gt;69.286828&lt;/td&gt;
      &lt;td&gt;8.255339&lt;/td&gt;
      &lt;td&gt;16.423555&lt;/td&gt;
      &lt;td&gt;2.159017&lt;/td&gt;
      &lt;td&gt;9.495713&lt;/td&gt;
      &lt;td&gt;1.138329&lt;/td&gt;
      &lt;td&gt;16.007510&lt;/td&gt;
      &lt;td&gt;1.546520&lt;/td&gt;
      &lt;td&gt;291.280077&lt;/td&gt;
      &lt;td&gt;26.898005&lt;/td&gt;
      &lt;td&gt;477.079939&lt;/td&gt;
      &lt;td&gt;19.372295&lt;/td&gt;
      &lt;td&gt;8.663977&lt;/td&gt;
      &lt;td&gt;1.469971e+05&lt;/td&gt;
      &lt;td&gt;6020.766839&lt;/td&gt;
      &lt;td&gt;135.636164&lt;/td&gt;
      &lt;td&gt;7.741246&lt;/td&gt;
      &lt;td&gt;30.899691&lt;/td&gt;
      &lt;td&gt;1.919181&lt;/td&gt;
      &lt;td&gt;18.358084&lt;/td&gt;
      &lt;td&gt;1.029136&lt;/td&gt;
      &lt;td&gt;36.104464&lt;/td&gt;
      &lt;td&gt;1.563621&lt;/td&gt;
      &lt;td&gt;600.717536&lt;/td&gt;
      &lt;td&gt;24.834585&lt;/td&gt;
      &lt;td&gt;1341.237189&lt;/td&gt;
      &lt;td&gt;18.684102&lt;/td&gt;
      &lt;td&gt;25.324540&lt;/td&gt;
      &lt;td&gt;2.191767e+14&lt;/td&gt;
      &lt;td&gt;3.964256e+12&lt;/td&gt;
      &lt;td&gt;382.272707&lt;/td&gt;
      &lt;td&gt;7.515411&lt;/td&gt;
      &lt;td&gt;82.445972&lt;/td&gt;
      &lt;td&gt;1.770876&lt;/td&gt;
      &lt;td&gt;50.426151&lt;/td&gt;
      &lt;td&gt;0.969375&lt;/td&gt;
      &lt;td&gt;89.884588&lt;/td&gt;
      &lt;td&gt;1.397562&lt;/td&gt;
      &lt;td&gt;1663.191691&lt;/td&gt;
      &lt;td&gt;24.005779&lt;/td&gt;
      &lt;td&gt;2583.529737&lt;/td&gt;
      &lt;td&gt;18.290344&lt;/td&gt;
      &lt;td&gt;50.173053&lt;/td&gt;
      &lt;td&gt;2.754958e+14&lt;/td&gt;
      &lt;td&gt;2.817791e+12&lt;/td&gt;
      &lt;td&gt;890.415732&lt;/td&gt;
      &lt;td&gt;7.904848&lt;/td&gt;
      &lt;td&gt;158.377603&lt;/td&gt;
      &lt;td&gt;1.721930&lt;/td&gt;
      &lt;td&gt;96.141760&lt;/td&gt;
      &lt;td&gt;0.912695&lt;/td&gt;
      &lt;td&gt;166.964108&lt;/td&gt;
      &lt;td&gt;1.336536&lt;/td&gt;
      &lt;td&gt;3129.427760&lt;/td&gt;
      &lt;td&gt;23.396972&lt;/td&gt;
      &lt;td&gt;4890.713126&lt;/td&gt;
      &lt;td&gt;17.842956&lt;/td&gt;
      &lt;td&gt;99.124183&lt;/td&gt;
      &lt;td&gt;3.640763e+14&lt;/td&gt;
      &lt;td&gt;2.148897e+12&lt;/td&gt;
      &lt;td&gt;2152.429448&lt;/td&gt;
      &lt;td&gt;8.587733&lt;/td&gt;
      &lt;td&gt;298.543419&lt;/td&gt;
      &lt;td&gt;1.634560&lt;/td&gt;
      &lt;td&gt;179.646957&lt;/td&gt;
      &lt;td&gt;0.882435&lt;/td&gt;
      &lt;td&gt;271.766276&lt;/td&gt;
      &lt;td&gt;1.137067&lt;/td&gt;
      &lt;td&gt;5839.985612&lt;/td&gt;
      &lt;td&gt;22.801391&lt;/td&gt;
      &lt;td&gt;9203.006883&lt;/td&gt;
      &lt;td&gt;17.417302&lt;/td&gt;
      &lt;td&gt;196.804976&lt;/td&gt;
      &lt;td&gt;3.620312e+15&lt;/td&gt;
      &lt;td&gt;9.459203e+12&lt;/td&gt;
      &lt;td&gt;3814.395114&lt;/td&gt;
      &lt;td&gt;8.261136&lt;/td&gt;
      &lt;td&gt;548.144978&lt;/td&gt;
      &lt;td&gt;1.622525&lt;/td&gt;
      &lt;td&gt;327.643138&lt;/td&gt;
      &lt;td&gt;0.872478&lt;/td&gt;
      &lt;td&gt;440.184627&lt;/td&gt;
      &lt;td&gt;1.023119&lt;/td&gt;
      &lt;td&gt;10865.335596&lt;/td&gt;
      &lt;td&gt;22.230638&lt;/td&gt;
      &lt;td&gt;241.813007&lt;/td&gt;
      &lt;td&gt;1234.637258&lt;/td&gt;
      &lt;td&gt;1.085134&lt;/td&gt;
      &lt;td&gt;51.117939&lt;/td&gt;
      &lt;td&gt;237.546015&lt;/td&gt;
      &lt;td&gt;4.484667&lt;/td&gt;
      &lt;td&gt;79.217446&lt;/td&gt;
      &lt;td&gt;332.886694&lt;/td&gt;
      &lt;td&gt;333.154660&lt;/td&gt;
      &lt;td&gt;0.480039&lt;/td&gt;
      &lt;td&gt;0.379677&lt;/td&gt;
      &lt;td&gt;47.556868&lt;/td&gt;
      &lt;td&gt;0.372700&lt;/td&gt;
      &lt;td&gt;2.183868&lt;/td&gt;
      &lt;td&gt;8.070249&lt;/td&gt;
      &lt;td&gt;94.115610&lt;/td&gt;
      &lt;td&gt;0.580881&lt;/td&gt;
      &lt;td&gt;3.899945&lt;/td&gt;
      &lt;td&gt;9.493778&lt;/td&gt;
      &lt;td&gt;261.169278&lt;/td&gt;
      &lt;td&gt;0.428896&lt;/td&gt;
      &lt;td&gt;0.446746&lt;/td&gt;
      &lt;td&gt;0.421588&lt;/td&gt;
      &lt;td&gt;2.609233&lt;/td&gt;
      &lt;td&gt;8.988002&lt;/td&gt;
      &lt;td&gt;96.625628&lt;/td&gt;
      &lt;td&gt;0.610677&lt;/td&gt;
      &lt;td&gt;0.950015&lt;/td&gt;
      &lt;td&gt;8.729970&lt;/td&gt;
      &lt;td&gt;221.500069&lt;/td&gt;
      &lt;td&gt;232.235329&lt;/td&gt;
      &lt;td&gt;123.588333&lt;/td&gt;
      &lt;td&gt;231.906681&lt;/td&gt;
      &lt;td&gt;2.899407&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-49.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;2.004033e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.030000&lt;/td&gt;
      &lt;td&gt;0.030000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.078000&lt;/td&gt;
      &lt;td&gt;0.078000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7.800000e-02&lt;/td&gt;
      &lt;td&gt;0.078000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.130000e-01&lt;/td&gt;
      &lt;td&gt;0.213000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-6.456360e+16&lt;/td&gt;
      &lt;td&gt;-1.132695e+15&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-7.378698e+16&lt;/td&gt;
      &lt;td&gt;-6.895979e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-7.378698e+16&lt;/td&gt;
      &lt;td&gt;-3.617009e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-3.135946e+17&lt;/td&gt;
      &lt;td&gt;-8.384884e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-420.000000&lt;/td&gt;
      &lt;td&gt;-9999.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-9999.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5479.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5479.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5480.000000&lt;/td&gt;
      &lt;td&gt;1970.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-10957.000000&lt;/td&gt;
      &lt;td&gt;-771.000000&lt;/td&gt;
      &lt;td&gt;-783.000000&lt;/td&gt;
      &lt;td&gt;-820.000000&lt;/td&gt;
      &lt;td&gt;2004.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;2.012053e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;248.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;821.058500&lt;/td&gt;
      &lt;td&gt;821.058500&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;7.571429&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;3718.143000&lt;/td&gt;
      &lt;td&gt;1705.418000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;5.666667&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;9.200000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;7.838667e+03&lt;/td&gt;
      &lt;td&gt;2116.791375&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.307692&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;7.200000&lt;/td&gt;
      &lt;td&gt;84.000000&lt;/td&gt;
      &lt;td&gt;11.153846&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;1.964592e+04&lt;/td&gt;
      &lt;td&gt;2611.727415&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;1.714286&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.450000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.294118&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.300000&lt;/td&gt;
      &lt;td&gt;69.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;233.000000&lt;/td&gt;
      &lt;td&gt;12.710028&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;5.537270e+04&lt;/td&gt;
      &lt;td&gt;2.998566e+03&lt;/td&gt;
      &lt;td&gt;42.000000&lt;/td&gt;
      &lt;td&gt;2.113636&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;0.565217&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.382353&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.387097&lt;/td&gt;
      &lt;td&gt;196.000000&lt;/td&gt;
      &lt;td&gt;10.500000&lt;/td&gt;
      &lt;td&gt;427.000000&lt;/td&gt;
      &lt;td&gt;13.490147&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;1.021806e+05&lt;/td&gt;
      &lt;td&gt;3.180790e+03&lt;/td&gt;
      &lt;td&gt;81.000000&lt;/td&gt;
      &lt;td&gt;2.329249&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.625000&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;0.426950&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;0.427574&lt;/td&gt;
      &lt;td&gt;360.000000&lt;/td&gt;
      &lt;td&gt;11.166667&lt;/td&gt;
      &lt;td&gt;737.750000&lt;/td&gt;
      &lt;td&gt;14.224490&lt;/td&gt;
      &lt;td&gt;43.000000&lt;/td&gt;
      &lt;td&gt;1.753236e+05&lt;/td&gt;
      &lt;td&gt;3.351469e+03&lt;/td&gt;
      &lt;td&gt;145.000000&lt;/td&gt;
      &lt;td&gt;2.510204&lt;/td&gt;
      &lt;td&gt;39.000000&lt;/td&gt;
      &lt;td&gt;0.677632&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;623.000000&lt;/td&gt;
      &lt;td&gt;11.806058&lt;/td&gt;
      &lt;td&gt;1002.000000&lt;/td&gt;
      &lt;td&gt;14.798119&lt;/td&gt;
      &lt;td&gt;56.000000&lt;/td&gt;
      &lt;td&gt;2.145400e+05&lt;/td&gt;
      &lt;td&gt;3.373914e+03&lt;/td&gt;
      &lt;td&gt;205.000000&lt;/td&gt;
      &lt;td&gt;2.651424&lt;/td&gt;
      &lt;td&gt;56.000000&lt;/td&gt;
      &lt;td&gt;0.722222&lt;/td&gt;
      &lt;td&gt;35.000000&lt;/td&gt;
      &lt;td&gt;0.481250&lt;/td&gt;
      &lt;td&gt;35.000000&lt;/td&gt;
      &lt;td&gt;0.478528&lt;/td&gt;
      &lt;td&gt;853.000000&lt;/td&gt;
      &lt;td&gt;12.291667&lt;/td&gt;
      &lt;td&gt;240.000000&lt;/td&gt;
      &lt;td&gt;990.000000&lt;/td&gt;
      &lt;td&gt;3.936907&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;6247.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5481.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;6226.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;6254.000000&lt;/td&gt;
      &lt;td&gt;-31.000000&lt;/td&gt;
      &lt;td&gt;-28.000000&lt;/td&gt;
      &lt;td&gt;-25.000000&lt;/td&gt;
      &lt;td&gt;2012.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2.014073e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;509.000000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;2595.075000&lt;/td&gt;
      &lt;td&gt;2595.075000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;53.000000&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;12904.532500&lt;/td&gt;
      &lt;td&gt;3780.617429&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;2.600000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;47.000000&lt;/td&gt;
      &lt;td&gt;13.750000&lt;/td&gt;
      &lt;td&gt;105.000000&lt;/td&gt;
      &lt;td&gt;17.100000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;2.553986e+04&lt;/td&gt;
      &lt;td&gt;4091.579700&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;0.800000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.538462&lt;/td&gt;
      &lt;td&gt;93.000000&lt;/td&gt;
      &lt;td&gt;15.000000&lt;/td&gt;
      &lt;td&gt;238.000000&lt;/td&gt;
      &lt;td&gt;18.777778&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;5.835679e+04&lt;/td&gt;
      &lt;td&gt;4496.575193&lt;/td&gt;
      &lt;td&gt;42.000000&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;0.928571&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.612903&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;214.000000&lt;/td&gt;
      &lt;td&gt;16.500000&lt;/td&gt;
      &lt;td&gt;667.000000&lt;/td&gt;
      &lt;td&gt;19.993750&lt;/td&gt;
      &lt;td&gt;36.000000&lt;/td&gt;
      &lt;td&gt;1.652595e+05&lt;/td&gt;
      &lt;td&gt;4.812825e+03&lt;/td&gt;
      &lt;td&gt;123.000000&lt;/td&gt;
      &lt;td&gt;3.935484&lt;/td&gt;
      &lt;td&gt;33.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.671875&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;0.692308&lt;/td&gt;
      &lt;td&gt;605.000000&lt;/td&gt;
      &lt;td&gt;17.683439&lt;/td&gt;
      &lt;td&gt;1263.000000&lt;/td&gt;
      &lt;td&gt;20.583333&lt;/td&gt;
      &lt;td&gt;65.000000&lt;/td&gt;
      &lt;td&gt;3.145153e+05&lt;/td&gt;
      &lt;td&gt;4.970085e+03&lt;/td&gt;
      &lt;td&gt;235.000000&lt;/td&gt;
      &lt;td&gt;4.128933&lt;/td&gt;
      &lt;td&gt;63.000000&lt;/td&gt;
      &lt;td&gt;1.070945&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;0.706897&lt;/td&gt;
      &lt;td&gt;43.000000&lt;/td&gt;
      &lt;td&gt;0.727273&lt;/td&gt;
      &lt;td&gt;1149.000000&lt;/td&gt;
      &lt;td&gt;18.196254&lt;/td&gt;
      &lt;td&gt;2317.000000&lt;/td&gt;
      &lt;td&gt;21.266667&lt;/td&gt;
      &lt;td&gt;115.000000&lt;/td&gt;
      &lt;td&gt;5.750376e+05&lt;/td&gt;
      &lt;td&gt;5.154735e+03&lt;/td&gt;
      &lt;td&gt;431.000000&lt;/td&gt;
      &lt;td&gt;4.326370&lt;/td&gt;
      &lt;td&gt;117.000000&lt;/td&gt;
      &lt;td&gt;1.130952&lt;/td&gt;
      &lt;td&gt;76.000000&lt;/td&gt;
      &lt;td&gt;0.733333&lt;/td&gt;
      &lt;td&gt;78.000000&lt;/td&gt;
      &lt;td&gt;0.750000&lt;/td&gt;
      &lt;td&gt;2102.000000&lt;/td&gt;
      &lt;td&gt;18.867847&lt;/td&gt;
      &lt;td&gt;3584.000000&lt;/td&gt;
      &lt;td&gt;21.936890&lt;/td&gt;
      &lt;td&gt;169.000000&lt;/td&gt;
      &lt;td&gt;8.452459e+05&lt;/td&gt;
      &lt;td&gt;5.233477e+03&lt;/td&gt;
      &lt;td&gt;681.000000&lt;/td&gt;
      &lt;td&gt;4.500000&lt;/td&gt;
      &lt;td&gt;186.000000&lt;/td&gt;
      &lt;td&gt;1.181818&lt;/td&gt;
      &lt;td&gt;119.000000&lt;/td&gt;
      &lt;td&gt;0.757725&lt;/td&gt;
      &lt;td&gt;121.000000&lt;/td&gt;
      &lt;td&gt;0.769231&lt;/td&gt;
      &lt;td&gt;3299.000000&lt;/td&gt;
      &lt;td&gt;19.508859&lt;/td&gt;
      &lt;td&gt;440.000000&lt;/td&gt;
      &lt;td&gt;1788.000000&lt;/td&gt;
      &lt;td&gt;4.898667&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;39.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;6265.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;5710.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;6245.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;6271.000000&lt;/td&gt;
      &lt;td&gt;-29.000000&lt;/td&gt;
      &lt;td&gt;-14.000000&lt;/td&gt;
      &lt;td&gt;-11.000000&lt;/td&gt;
      &lt;td&gt;2014.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;2.016012e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;776.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;6509.136500&lt;/td&gt;
      &lt;td&gt;6509.136500&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;124.000000&lt;/td&gt;
      &lt;td&gt;28.666667&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;31483.468500&lt;/td&gt;
      &lt;td&gt;7136.028982&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;118.000000&lt;/td&gt;
      &lt;td&gt;26.833333&lt;/td&gt;
      &lt;td&gt;236.000000&lt;/td&gt;
      &lt;td&gt;29.000000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;5.991438e+04&lt;/td&gt;
      &lt;td&gt;7206.990196&lt;/td&gt;
      &lt;td&gt;46.000000&lt;/td&gt;
      &lt;td&gt;6.285714&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;1.571429&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;225.000000&lt;/td&gt;
      &lt;td&gt;27.090909&lt;/td&gt;
      &lt;td&gt;511.000000&lt;/td&gt;
      &lt;td&gt;29.545455&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;1.296859e+05&lt;/td&gt;
      &lt;td&gt;7375.110225&lt;/td&gt;
      &lt;td&gt;103.000000&lt;/td&gt;
      &lt;td&gt;6.720556&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;1.666667&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;1.052632&lt;/td&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
      &lt;td&gt;1.125000&lt;/td&gt;
      &lt;td&gt;484.000000&lt;/td&gt;
      &lt;td&gt;27.826087&lt;/td&gt;
      &lt;td&gt;1464.000000&lt;/td&gt;
      &lt;td&gt;30.166667&lt;/td&gt;
      &lt;td&gt;56.000000&lt;/td&gt;
      &lt;td&gt;3.737988e+05&lt;/td&gt;
      &lt;td&gt;7.603972e+03&lt;/td&gt;
      &lt;td&gt;295.000000&lt;/td&gt;
      &lt;td&gt;7.100000&lt;/td&gt;
      &lt;td&gt;76.000000&lt;/td&gt;
      &lt;td&gt;1.769231&lt;/td&gt;
      &lt;td&gt;49.000000&lt;/td&gt;
      &lt;td&gt;1.098120&lt;/td&gt;
      &lt;td&gt;52.000000&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;1394.000000&lt;/td&gt;
      &lt;td&gt;28.634146&lt;/td&gt;
      &lt;td&gt;2802.000000&lt;/td&gt;
      &lt;td&gt;30.577022&lt;/td&gt;
      &lt;td&gt;108.000000&lt;/td&gt;
      &lt;td&gt;7.176428e+05&lt;/td&gt;
      &lt;td&gt;7.747661e+03&lt;/td&gt;
      &lt;td&gt;567.000000&lt;/td&gt;
      &lt;td&gt;7.290698&lt;/td&gt;
      &lt;td&gt;147.000000&lt;/td&gt;
      &lt;td&gt;1.833333&lt;/td&gt;
      &lt;td&gt;95.000000&lt;/td&gt;
      &lt;td&gt;1.128512&lt;/td&gt;
      &lt;td&gt;100.000000&lt;/td&gt;
      &lt;td&gt;1.187500&lt;/td&gt;
      &lt;td&gt;2663.000000&lt;/td&gt;
      &lt;td&gt;29.039801&lt;/td&gt;
      &lt;td&gt;5258.000000&lt;/td&gt;
      &lt;td&gt;31.154067&lt;/td&gt;
      &lt;td&gt;203.000000&lt;/td&gt;
      &lt;td&gt;1.347311e+06&lt;/td&gt;
      &lt;td&gt;7.914708e+03&lt;/td&gt;
      &lt;td&gt;1058.000000&lt;/td&gt;
      &lt;td&gt;7.466156&lt;/td&gt;
      &lt;td&gt;275.000000&lt;/td&gt;
      &lt;td&gt;1.888889&lt;/td&gt;
      &lt;td&gt;175.000000&lt;/td&gt;
      &lt;td&gt;1.149123&lt;/td&gt;
      &lt;td&gt;185.000000&lt;/td&gt;
      &lt;td&gt;1.200000&lt;/td&gt;
      &lt;td&gt;5003.000000&lt;/td&gt;
      &lt;td&gt;29.706403&lt;/td&gt;
      &lt;td&gt;9046.250000&lt;/td&gt;
      &lt;td&gt;31.791510&lt;/td&gt;
      &lt;td&gt;346.000000&lt;/td&gt;
      &lt;td&gt;2.223149e+06&lt;/td&gt;
      &lt;td&gt;7.989009e+03&lt;/td&gt;
      &lt;td&gt;1798.000000&lt;/td&gt;
      &lt;td&gt;7.621627&lt;/td&gt;
      &lt;td&gt;468.000000&lt;/td&gt;
      &lt;td&gt;1.942504&lt;/td&gt;
      &lt;td&gt;297.000000&lt;/td&gt;
      &lt;td&gt;1.167134&lt;/td&gt;
      &lt;td&gt;313.000000&lt;/td&gt;
      &lt;td&gt;1.217949&lt;/td&gt;
      &lt;td&gt;8601.250000&lt;/td&gt;
      &lt;td&gt;30.343668&lt;/td&gt;
      &lt;td&gt;615.000000&lt;/td&gt;
      &lt;td&gt;3193.000000&lt;/td&gt;
      &lt;td&gt;5.164424&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2016.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;19.000000&lt;/td&gt;
      &lt;td&gt;5959.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;6258.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;23.000000&lt;/td&gt;
      &lt;td&gt;6285.000000&lt;/td&gt;
      &lt;td&gt;-28.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-1.000000&lt;/td&gt;
      &lt;td&gt;2016.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;1051.000000&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;2.017023e+07&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;789.000000&lt;/td&gt;
      &lt;td&gt;661.000000&lt;/td&gt;
      &lt;td&gt;661.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;570.000000&lt;/td&gt;
      &lt;td&gt;570.000000&lt;/td&gt;
      &lt;td&gt;195.000000&lt;/td&gt;
      &lt;td&gt;195.000000&lt;/td&gt;
      &lt;td&gt;71.000000&lt;/td&gt;
      &lt;td&gt;71.000000&lt;/td&gt;
      &lt;td&gt;224.000000&lt;/td&gt;
      &lt;td&gt;224.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;2992.000000&lt;/td&gt;
      &lt;td&gt;748.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;604487.476000&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;3957.000000&lt;/td&gt;
      &lt;td&gt;989.250000&lt;/td&gt;
      &lt;td&gt;354.000000&lt;/td&gt;
      &lt;td&gt;132.500000&lt;/td&gt;
      &lt;td&gt;369.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;1207.000000&lt;/td&gt;
      &lt;td&gt;172.428571&lt;/td&gt;
      &lt;td&gt;3211.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;5290.000000&lt;/td&gt;
      &lt;td&gt;661.000000&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;1.209334e+06&lt;/td&gt;
      &lt;td&gt;437603.468000&lt;/td&gt;
      &lt;td&gt;5381.000000&lt;/td&gt;
      &lt;td&gt;676.000000&lt;/td&gt;
      &lt;td&gt;613.000000&lt;/td&gt;
      &lt;td&gt;132.500000&lt;/td&gt;
      &lt;td&gt;385.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;1877.000000&lt;/td&gt;
      &lt;td&gt;156.416667&lt;/td&gt;
      &lt;td&gt;5765.000000&lt;/td&gt;
      &lt;td&gt;1859.000000&lt;/td&gt;
      &lt;td&gt;10086.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;2.665440e+06&lt;/td&gt;
      &lt;td&gt;187136.586000&lt;/td&gt;
      &lt;td&gt;10384.000000&lt;/td&gt;
      &lt;td&gt;676.000000&lt;/td&gt;
      &lt;td&gt;1131.000000&lt;/td&gt;
      &lt;td&gt;132.500000&lt;/td&gt;
      &lt;td&gt;585.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;3930.000000&lt;/td&gt;
      &lt;td&gt;151.826087&lt;/td&gt;
      &lt;td&gt;13493.000000&lt;/td&gt;
      &lt;td&gt;810.000000&lt;/td&gt;
      &lt;td&gt;26703.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;90.000000&lt;/td&gt;
      &lt;td&gt;7.546893e+06&lt;/td&gt;
      &lt;td&gt;2.181567e+05&lt;/td&gt;
      &lt;td&gt;35029.000000&lt;/td&gt;
      &lt;td&gt;676.000000&lt;/td&gt;
      &lt;td&gt;3017.000000&lt;/td&gt;
      &lt;td&gt;88.333333&lt;/td&gt;
      &lt;td&gt;1336.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;11151.000000&lt;/td&gt;
      &lt;td&gt;159.300000&lt;/td&gt;
      &lt;td&gt;35188.000000&lt;/td&gt;
      &lt;td&gt;871.250000&lt;/td&gt;
      &lt;td&gt;52598.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;180.000000&lt;/td&gt;
      &lt;td&gt;1.519852e+07&lt;/td&gt;
      &lt;td&gt;1.782986e+05&lt;/td&gt;
      &lt;td&gt;166936.000000&lt;/td&gt;
      &lt;td&gt;932.603352&lt;/td&gt;
      &lt;td&gt;8311.000000&lt;/td&gt;
      &lt;td&gt;104.333333&lt;/td&gt;
      &lt;td&gt;3287.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;19803.000000&lt;/td&gt;
      &lt;td&gt;133.446429&lt;/td&gt;
      &lt;td&gt;64190.000000&lt;/td&gt;
      &lt;td&gt;710.333333&lt;/td&gt;
      &lt;td&gt;103640.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;365.000000&lt;/td&gt;
      &lt;td&gt;2.993833e+07&lt;/td&gt;
      &lt;td&gt;1.549087e+05&lt;/td&gt;
      &lt;td&gt;519451.000000&lt;/td&gt;
      &lt;td&gt;1427.063187&lt;/td&gt;
      &lt;td&gt;19246.000000&lt;/td&gt;
      &lt;td&gt;60.500000&lt;/td&gt;
      &lt;td&gt;8016.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;26622.000000&lt;/td&gt;
      &lt;td&gt;86.155340&lt;/td&gt;
      &lt;td&gt;140785.000000&lt;/td&gt;
      &lt;td&gt;647.666667&lt;/td&gt;
      &lt;td&gt;234810.000000&lt;/td&gt;
      &lt;td&gt;560.333333&lt;/td&gt;
      &lt;td&gt;790.000000&lt;/td&gt;
      &lt;td&gt;9.223372e+15&lt;/td&gt;
      &lt;td&gt;1.358376e+13&lt;/td&gt;
      &lt;td&gt;911417.000000&lt;/td&gt;
      &lt;td&gt;1298.314815&lt;/td&gt;
      &lt;td&gt;37859.000000&lt;/td&gt;
      &lt;td&gt;60.500000&lt;/td&gt;
      &lt;td&gt;16436.000000&lt;/td&gt;
      &lt;td&gt;65.500000&lt;/td&gt;
      &lt;td&gt;27315.000000&lt;/td&gt;
      &lt;td&gt;58.358824&lt;/td&gt;
      &lt;td&gt;387552.000000&lt;/td&gt;
      &lt;td&gt;647.666667&lt;/td&gt;
      &lt;td&gt;1690.000000&lt;/td&gt;
      &lt;td&gt;5908.000000&lt;/td&gt;
      &lt;td&gt;53.189189&lt;/td&gt;
      &lt;td&gt;450.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;450.000000&lt;/td&gt;
      &lt;td&gt;2000.000000&lt;/td&gt;
      &lt;td&gt;2000.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6299.000000&lt;/td&gt;
      &lt;td&gt;17207.000000&lt;/td&gt;
      &lt;td&gt;789.000000&lt;/td&gt;
      &lt;td&gt;17225.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h1&gt;2. Data Preparation&lt;/h1&gt;
&lt;h2&gt;Splitting Train, Dev, and Test&lt;/h2&gt;
&lt;p&gt;First, we need to split the data into our train, dev, and test sets, which we'll do at rates of 60%, 25%, and 15% respectively.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Split data into a) train, dev, &amp;amp; test, b) data &amp;amp; labels&lt;/span&gt;

&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;#Set so that % churn is somewhat consistent&lt;/span&gt;

&lt;span class="c1"&gt;#Train, Dev, Test splits: 60/25/15&lt;/span&gt;
&lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;devtest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;devtest&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Calculate churn percentages&lt;/span&gt;
&lt;span class="n"&gt;churn_rate_all&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;df_fa&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;churn_rate_train&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;churn_rate_dev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;churn_rate_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Print churn percentages&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Check churn percentages:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;  All data, &lt;/span&gt;&lt;span class="si"&gt;% c&lt;/span&gt;&lt;span class="s1"&gt;hurn: &lt;/span&gt;&lt;span class="si"&gt;{:.1%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;churn_rate_all&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Train data, &lt;/span&gt;&lt;span class="si"&gt;% c&lt;/span&gt;&lt;span class="s1"&gt;hurn: &lt;/span&gt;&lt;span class="si"&gt;{:.1%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;churn_rate_train&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;  Dev data, &lt;/span&gt;&lt;span class="si"&gt;% c&lt;/span&gt;&lt;span class="s1"&gt;hurn: &lt;/span&gt;&lt;span class="si"&gt;{:.1%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;churn_rate_dev&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; Test data, &lt;/span&gt;&lt;span class="si"&gt;% c&lt;/span&gt;&lt;span class="s1"&gt;hurn: &lt;/span&gt;&lt;span class="si"&gt;{:.1%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;churn_rate_test&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Check churn percentages:&lt;/span&gt;
&lt;span class="err"&gt;  All data, % churn: 50.6%&lt;/span&gt;
&lt;span class="err"&gt;Train data, % churn: 50.7%&lt;/span&gt;
&lt;span class="err"&gt;  Dev data, % churn: 50.4%&lt;/span&gt;
&lt;span class="err"&gt; Test data, % churn: 50.2%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Training data is fine at 50% churn (we get more training examples for churn)
Changing Dev and Test back to real world (6%)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Reduce dev set to 6% churn&lt;/span&gt;
&lt;span class="c1"&gt;#Select x rows is_churn == 1; append to all rows where is_churn == 0&lt;/span&gt;
&lt;span class="n"&gt;churn_rate_actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.11&lt;/span&gt;  &lt;span class="c1"&gt;#Emperically this works&lt;/span&gt;
&lt;span class="n"&gt;dev_churn_split_factor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;churn_rate_dev&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;churn_rate_actual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;churn_rate_actual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dummy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_sub&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dev_churn_split_factor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# dev = pd.concat([dev[dev.is_churn==0], dev_sub], ignore_index=True)&lt;/span&gt;
&lt;span class="c1"&gt;# We&amp;#39;ll not ignore the index. We want msno as the index&lt;/span&gt;
&lt;span class="n"&gt;dev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;dev_sub&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Test&lt;/span&gt;
&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
      &lt;th&gt;registration_time&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;x5+AtzOZKAtnAJBsCIdAyiRl+1p9nIvAYchIkS4zaS4=&lt;/th&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;20150202&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;748&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;330.174&lt;/td&gt;
      &lt;td&gt;330.174&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;179&lt;/td&gt;
      &lt;td&gt;44.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;41022.435&lt;/td&gt;
      &lt;td&gt;10255.608750&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;7.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;153&lt;/td&gt;
      &lt;td&gt;38.250000&lt;/td&gt;
      &lt;td&gt;193&lt;/td&gt;
      &lt;td&gt;38.600000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;43158.296&lt;/td&gt;
      &lt;td&gt;8631.659200&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;6.800000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.200000&lt;/td&gt;
      &lt;td&gt;158&lt;/td&gt;
      &lt;td&gt;31.600000&lt;/td&gt;
      &lt;td&gt;275&lt;/td&gt;
      &lt;td&gt;22.916667&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;59410.879&lt;/td&gt;
      &lt;td&gt;4950.906583&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;4.333333&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.583333&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.583333&lt;/td&gt;
      &lt;td&gt;214&lt;/td&gt;
      &lt;td&gt;17.833333&lt;/td&gt;
      &lt;td&gt;1687&lt;/td&gt;
      &lt;td&gt;33.740000&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;372126.228&lt;/td&gt;
      &lt;td&gt;7442.524560&lt;/td&gt;
      &lt;td&gt;371&lt;/td&gt;
      &lt;td&gt;7.420000&lt;/td&gt;
      &lt;td&gt;79&lt;/td&gt;
      &lt;td&gt;1.580000&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;1.040000&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1303&lt;/td&gt;
      &lt;td&gt;26.060000&lt;/td&gt;
      &lt;td&gt;4329&lt;/td&gt;
      &lt;td&gt;36.686441&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;997354.598&lt;/td&gt;
      &lt;td&gt;8452.157610&lt;/td&gt;
      &lt;td&gt;719&lt;/td&gt;
      &lt;td&gt;6.093220&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;1.161017&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
      &lt;td&gt;0.779661&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;3595&lt;/td&gt;
      &lt;td&gt;30.466102&lt;/td&gt;
      &lt;td&gt;8460&lt;/td&gt;
      &lt;td&gt;35.696203&lt;/td&gt;
      &lt;td&gt;237&lt;/td&gt;
      &lt;td&gt;1947010.556&lt;/td&gt;
      &lt;td&gt;8215.234414&lt;/td&gt;
      &lt;td&gt;1507&lt;/td&gt;
      &lt;td&gt;6.358650&lt;/td&gt;
      &lt;td&gt;272&lt;/td&gt;
      &lt;td&gt;1.147679&lt;/td&gt;
      &lt;td&gt;155&lt;/td&gt;
      &lt;td&gt;0.654008&lt;/td&gt;
      &lt;td&gt;171&lt;/td&gt;
      &lt;td&gt;0.721519&lt;/td&gt;
      &lt;td&gt;7136&lt;/td&gt;
      &lt;td&gt;30.109705&lt;/td&gt;
      &lt;td&gt;21497&lt;/td&gt;
      &lt;td&gt;39.883117&lt;/td&gt;
      &lt;td&gt;539&lt;/td&gt;
      &lt;td&gt;5178191.657&lt;/td&gt;
      &lt;td&gt;9607.034614&lt;/td&gt;
      &lt;td&gt;3037&lt;/td&gt;
      &lt;td&gt;5.634508&lt;/td&gt;
      &lt;td&gt;686&lt;/td&gt;
      &lt;td&gt;1.272727&lt;/td&gt;
      &lt;td&gt;365&lt;/td&gt;
      &lt;td&gt;0.677180&lt;/td&gt;
      &lt;td&gt;367&lt;/td&gt;
      &lt;td&gt;0.680891&lt;/td&gt;
      &lt;td&gt;19132&lt;/td&gt;
      &lt;td&gt;35.495362&lt;/td&gt;
      &lt;td&gt;555&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
      &lt;td&gt;4.832432&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;6259&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5511&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6241&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-18&lt;/td&gt;
      &lt;td&gt;-9&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;WiVvUGUuxmRviEX69svzHUC/zhpyJZdAm3ZyExXsjHA=&lt;/th&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;20071006&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;787&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;11779.310&lt;/td&gt;
      &lt;td&gt;11779.310&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;105&lt;/td&gt;
      &lt;td&gt;26.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;26890.522&lt;/td&gt;
      &lt;td&gt;6722.630500&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;104&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;145&lt;/td&gt;
      &lt;td&gt;20.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;36302.890&lt;/td&gt;
      &lt;td&gt;5186.127143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;19.571429&lt;/td&gt;
      &lt;td&gt;276&lt;/td&gt;
      &lt;td&gt;25.090909&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;55003.399&lt;/td&gt;
      &lt;td&gt;5000.309000&lt;/td&gt;
      &lt;td&gt;67&lt;/td&gt;
      &lt;td&gt;6.090909&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;2.636364&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0.545455&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;17.090909&lt;/td&gt;
      &lt;td&gt;1425&lt;/td&gt;
      &lt;td&gt;24.568966&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;322053.197&lt;/td&gt;
      &lt;td&gt;5552.641328&lt;/td&gt;
      &lt;td&gt;275&lt;/td&gt;
      &lt;td&gt;4.741379&lt;/td&gt;
      &lt;td&gt;170&lt;/td&gt;
      &lt;td&gt;2.931034&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.275862&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;0.689655&lt;/td&gt;
      &lt;td&gt;1101&lt;/td&gt;
      &lt;td&gt;18.982759&lt;/td&gt;
      &lt;td&gt;2771&lt;/td&gt;
      &lt;td&gt;23.091667&lt;/td&gt;
      &lt;td&gt;120&lt;/td&gt;
      &lt;td&gt;596865.459&lt;/td&gt;
      &lt;td&gt;4973.878825&lt;/td&gt;
      &lt;td&gt;617&lt;/td&gt;
      &lt;td&gt;5.141667&lt;/td&gt;
      &lt;td&gt;347&lt;/td&gt;
      &lt;td&gt;2.891667&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;110&lt;/td&gt;
      &lt;td&gt;0.916667&lt;/td&gt;
      &lt;td&gt;2002&lt;/td&gt;
      &lt;td&gt;16.683333&lt;/td&gt;
      &lt;td&gt;6125&lt;/td&gt;
      &lt;td&gt;26.864035&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;1388082.365&lt;/td&gt;
      &lt;td&gt;6088.080548&lt;/td&gt;
      &lt;td&gt;1567&lt;/td&gt;
      &lt;td&gt;6.872807&lt;/td&gt;
      &lt;td&gt;538&lt;/td&gt;
      &lt;td&gt;2.359649&lt;/td&gt;
      &lt;td&gt;255&lt;/td&gt;
      &lt;td&gt;1.118421&lt;/td&gt;
      &lt;td&gt;229&lt;/td&gt;
      &lt;td&gt;1.004386&lt;/td&gt;
      &lt;td&gt;4862&lt;/td&gt;
      &lt;td&gt;21.324561&lt;/td&gt;
      &lt;td&gt;26479&lt;/td&gt;
      &lt;td&gt;43.408197&lt;/td&gt;
      &lt;td&gt;610&lt;/td&gt;
      &lt;td&gt;6661356.419&lt;/td&gt;
      &lt;td&gt;10920.256425&lt;/td&gt;
      &lt;td&gt;5362&lt;/td&gt;
      &lt;td&gt;8.790164&lt;/td&gt;
      &lt;td&gt;2650&lt;/td&gt;
      &lt;td&gt;4.344262&lt;/td&gt;
      &lt;td&gt;1323&lt;/td&gt;
      &lt;td&gt;2.168852&lt;/td&gt;
      &lt;td&gt;1318&lt;/td&gt;
      &lt;td&gt;2.160656&lt;/td&gt;
      &lt;td&gt;23024&lt;/td&gt;
      &lt;td&gt;37.744262&lt;/td&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;2831&lt;/td&gt;
      &lt;td&gt;5.213628&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5480&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;6240&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;6280&lt;/td&gt;
      &lt;td&gt;-40&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-13&lt;/td&gt;
      &lt;td&gt;2007&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;ur0rGRoV2XJOYpNbzl5n/jBEV9PrKDwZX4QeO03gXl8=&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;20160822&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;9240.939&lt;/td&gt;
      &lt;td&gt;9240.939&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;371&lt;/td&gt;
      &lt;td&gt;61.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;107030.392&lt;/td&gt;
      &lt;td&gt;17838.398667&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;415&lt;/td&gt;
      &lt;td&gt;69.166667&lt;/td&gt;
      &lt;td&gt;756&lt;/td&gt;
      &lt;td&gt;68.727273&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;220080.304&lt;/td&gt;
      &lt;td&gt;20007.300364&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;5.272727&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;2.454545&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;843&lt;/td&gt;
      &lt;td&gt;76.636364&lt;/td&gt;
      &lt;td&gt;1766&lt;/td&gt;
      &lt;td&gt;65.407407&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;590614.385&lt;/td&gt;
      &lt;td&gt;21874.606852&lt;/td&gt;
      &lt;td&gt;138&lt;/td&gt;
      &lt;td&gt;5.111111&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.740741&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;0.592593&lt;/td&gt;
      &lt;td&gt;2275&lt;/td&gt;
      &lt;td&gt;84.259259&lt;/td&gt;
      &lt;td&gt;5486&lt;/td&gt;
      &lt;td&gt;66.096386&lt;/td&gt;
      &lt;td&gt;83&lt;/td&gt;
      &lt;td&gt;1899764.373&lt;/td&gt;
      &lt;td&gt;22888.727386&lt;/td&gt;
      &lt;td&gt;493&lt;/td&gt;
      &lt;td&gt;5.939759&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;1.397590&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;0.530120&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;0.493976&lt;/td&gt;
      &lt;td&gt;7351&lt;/td&gt;
      &lt;td&gt;88.566265&lt;/td&gt;
      &lt;td&gt;11591&lt;/td&gt;
      &lt;td&gt;68.994048&lt;/td&gt;
      &lt;td&gt;168&lt;/td&gt;
      &lt;td&gt;3408784.787&lt;/td&gt;
      &lt;td&gt;20290.385637&lt;/td&gt;
      &lt;td&gt;1131&lt;/td&gt;
      &lt;td&gt;6.732143&lt;/td&gt;
      &lt;td&gt;198&lt;/td&gt;
      &lt;td&gt;1.178571&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;0.535714&lt;/td&gt;
      &lt;td&gt;160&lt;/td&gt;
      &lt;td&gt;0.952381&lt;/td&gt;
      &lt;td&gt;13134&lt;/td&gt;
      &lt;td&gt;78.178571&lt;/td&gt;
      &lt;td&gt;12290&lt;/td&gt;
      &lt;td&gt;69.044944&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;3576194.197&lt;/td&gt;
      &lt;td&gt;20090.978635&lt;/td&gt;
      &lt;td&gt;1290&lt;/td&gt;
      &lt;td&gt;7.247191&lt;/td&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;1.151685&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;0.556180&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;13798&lt;/td&gt;
      &lt;td&gt;77.516854&lt;/td&gt;
      &lt;td&gt;12290&lt;/td&gt;
      &lt;td&gt;69.044944&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;3576194.197&lt;/td&gt;
      &lt;td&gt;20090.978635&lt;/td&gt;
      &lt;td&gt;1290&lt;/td&gt;
      &lt;td&gt;7.247191&lt;/td&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;1.151685&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;0.556180&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;13798&lt;/td&gt;
      &lt;td&gt;77.516854&lt;/td&gt;
      &lt;td&gt;210&lt;/td&gt;
      &lt;td&gt;1043&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;6078&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;6240&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6294&lt;/td&gt;
      &lt;td&gt;-54&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;M/PccoJW/A9myX+eCodcY8Z4LMD1r+d6YKzUNv4PMZo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;20130610&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;789&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3416.639&lt;/td&gt;
      &lt;td&gt;3416.639&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;29.142857&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;88005.151&lt;/td&gt;
      &lt;td&gt;12572.164429&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.714286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;395&lt;/td&gt;
      &lt;td&gt;56.428571&lt;/td&gt;
      &lt;td&gt;441&lt;/td&gt;
      &lt;td&gt;31.500000&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;168815.462&lt;/td&gt;
      &lt;td&gt;12058.247286&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;3.714286&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;2.214286&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;1.428571&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;735&lt;/td&gt;
      &lt;td&gt;52.500000&lt;/td&gt;
      &lt;td&gt;781&lt;/td&gt;
      &lt;td&gt;26.033333&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;303585.197&lt;/td&gt;
      &lt;td&gt;10119.506567&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;3.933333&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;3.033333&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;1.366667&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;1282&lt;/td&gt;
      &lt;td&gt;42.733333&lt;/td&gt;
      &lt;td&gt;1984&lt;/td&gt;
      &lt;td&gt;27.178082&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;581820.141&lt;/td&gt;
      &lt;td&gt;7970.138918&lt;/td&gt;
      &lt;td&gt;217&lt;/td&gt;
      &lt;td&gt;2.972603&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;2.438356&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;0.945205&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;0.328767&lt;/td&gt;
      &lt;td&gt;2343&lt;/td&gt;
      &lt;td&gt;32.095890&lt;/td&gt;
      &lt;td&gt;3501&lt;/td&gt;
      &lt;td&gt;25.554745&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;932913.407&lt;/td&gt;
      &lt;td&gt;6809.586912&lt;/td&gt;
      &lt;td&gt;373&lt;/td&gt;
      &lt;td&gt;2.722628&lt;/td&gt;
      &lt;td&gt;282&lt;/td&gt;
      &lt;td&gt;2.058394&lt;/td&gt;
      &lt;td&gt;106&lt;/td&gt;
      &lt;td&gt;0.773723&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.364964&lt;/td&gt;
      &lt;td&gt;3661&lt;/td&gt;
      &lt;td&gt;26.722628&lt;/td&gt;
      &lt;td&gt;7250&lt;/td&gt;
      &lt;td&gt;26.459854&lt;/td&gt;
      &lt;td&gt;274&lt;/td&gt;
      &lt;td&gt;1818035.906&lt;/td&gt;
      &lt;td&gt;6635.167540&lt;/td&gt;
      &lt;td&gt;768&lt;/td&gt;
      &lt;td&gt;2.802920&lt;/td&gt;
      &lt;td&gt;504&lt;/td&gt;
      &lt;td&gt;1.839416&lt;/td&gt;
      &lt;td&gt;196&lt;/td&gt;
      &lt;td&gt;0.715328&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;0.423358&lt;/td&gt;
      &lt;td&gt;7089&lt;/td&gt;
      &lt;td&gt;25.872263&lt;/td&gt;
      &lt;td&gt;17809&lt;/td&gt;
      &lt;td&gt;27.440678&lt;/td&gt;
      &lt;td&gt;649&lt;/td&gt;
      &lt;td&gt;4533034.736&lt;/td&gt;
      &lt;td&gt;6984.645202&lt;/td&gt;
      &lt;td&gt;1352&lt;/td&gt;
      &lt;td&gt;2.083205&lt;/td&gt;
      &lt;td&gt;937&lt;/td&gt;
      &lt;td&gt;1.443760&lt;/td&gt;
      &lt;td&gt;336&lt;/td&gt;
      &lt;td&gt;0.517720&lt;/td&gt;
      &lt;td&gt;198&lt;/td&gt;
      &lt;td&gt;0.305085&lt;/td&gt;
      &lt;td&gt;17432&lt;/td&gt;
      &lt;td&gt;26.859784&lt;/td&gt;
      &lt;td&gt;840&lt;/td&gt;
      &lt;td&gt;3631&lt;/td&gt;
      &lt;td&gt;4.322619&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5479&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;6264&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;6293&lt;/td&gt;
      &lt;td&gt;-29&lt;/td&gt;
      &lt;td&gt;-4&lt;/td&gt;
      &lt;td&gt;-25&lt;/td&gt;
      &lt;td&gt;2013&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;BZbN3U+ghA0lwOA34yF/GNHbJb73T48nEZGHc4bcikc=&lt;/th&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;20080410&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;788&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;13113.138&lt;/td&gt;
      &lt;td&gt;13113.138&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;16.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;33808.385&lt;/td&gt;
      &lt;td&gt;5634.730833&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;165&lt;/td&gt;
      &lt;td&gt;27.500000&lt;/td&gt;
      &lt;td&gt;157&lt;/td&gt;
      &lt;td&gt;13.083333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;48485.571&lt;/td&gt;
      &lt;td&gt;4040.464250&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;3.333333&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.750000&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;18.250000&lt;/td&gt;
      &lt;td&gt;484&lt;/td&gt;
      &lt;td&gt;21.043478&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;139573.866&lt;/td&gt;
      &lt;td&gt;6068.428957&lt;/td&gt;
      &lt;td&gt;97&lt;/td&gt;
      &lt;td&gt;4.217391&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.913043&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0.869565&lt;/td&gt;
      &lt;td&gt;554&lt;/td&gt;
      &lt;td&gt;24.086957&lt;/td&gt;
      &lt;td&gt;1416&lt;/td&gt;
      &lt;td&gt;22.838710&lt;/td&gt;
      &lt;td&gt;62&lt;/td&gt;
      &lt;td&gt;380409.666&lt;/td&gt;
      &lt;td&gt;6135.639774&lt;/td&gt;
      &lt;td&gt;213&lt;/td&gt;
      &lt;td&gt;3.435484&lt;/td&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td&gt;0.822581&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.806452&lt;/td&gt;
      &lt;td&gt;59&lt;/td&gt;
      &lt;td&gt;0.951613&lt;/td&gt;
      &lt;td&gt;1583&lt;/td&gt;
      &lt;td&gt;25.532258&lt;/td&gt;
      &lt;td&gt;4484&lt;/td&gt;
      &lt;td&gt;30.093960&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1179486.041&lt;/td&gt;
      &lt;td&gt;7916.013698&lt;/td&gt;
      &lt;td&gt;791&lt;/td&gt;
      &lt;td&gt;5.308725&lt;/td&gt;
      &lt;td&gt;162&lt;/td&gt;
      &lt;td&gt;1.087248&lt;/td&gt;
      &lt;td&gt;143&lt;/td&gt;
      &lt;td&gt;0.959732&lt;/td&gt;
      &lt;td&gt;259&lt;/td&gt;
      &lt;td&gt;1.738255&lt;/td&gt;
      &lt;td&gt;4752&lt;/td&gt;
      &lt;td&gt;31.892617&lt;/td&gt;
      &lt;td&gt;8142&lt;/td&gt;
      &lt;td&gt;26.607843&lt;/td&gt;
      &lt;td&gt;306&lt;/td&gt;
      &lt;td&gt;2174747.697&lt;/td&gt;
      &lt;td&gt;7107.018618&lt;/td&gt;
      &lt;td&gt;1684&lt;/td&gt;
      &lt;td&gt;5.503268&lt;/td&gt;
      &lt;td&gt;343&lt;/td&gt;
      &lt;td&gt;1.120915&lt;/td&gt;
      &lt;td&gt;312&lt;/td&gt;
      &lt;td&gt;1.019608&lt;/td&gt;
      &lt;td&gt;519&lt;/td&gt;
      &lt;td&gt;1.696078&lt;/td&gt;
      &lt;td&gt;8373&lt;/td&gt;
      &lt;td&gt;27.362745&lt;/td&gt;
      &lt;td&gt;12775&lt;/td&gt;
      &lt;td&gt;20.942623&lt;/td&gt;
      &lt;td&gt;610&lt;/td&gt;
      &lt;td&gt;3287076.077&lt;/td&gt;
      &lt;td&gt;5388.649307&lt;/td&gt;
      &lt;td&gt;2773&lt;/td&gt;
      &lt;td&gt;4.545902&lt;/td&gt;
      &lt;td&gt;602&lt;/td&gt;
      &lt;td&gt;0.986885&lt;/td&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;0.890164&lt;/td&gt;
      &lt;td&gt;926&lt;/td&gt;
      &lt;td&gt;1.518033&lt;/td&gt;
      &lt;td&gt;12292&lt;/td&gt;
      &lt;td&gt;20.150820&lt;/td&gt;
      &lt;td&gt;480&lt;/td&gt;
      &lt;td&gt;3278&lt;/td&gt;
      &lt;td&gt;6.829167&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5479&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;6299&lt;/td&gt;
      &lt;td&gt;-31&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-32&lt;/td&gt;
      &lt;td&gt;2008&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Reduce test set to 6% churn&lt;/span&gt;
&lt;span class="n"&gt;test_churn_split_factor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;churn_rate_test&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;churn_rate_actual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;churn_rate_actual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dummy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_sub&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;test_churn_split_factor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# test = pd.concat([test[test.is_churn==0], test_sub], ignore_index=True)&lt;/span&gt;
&lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;test_sub&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Test&lt;/span&gt;
&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;is_churn&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
      &lt;th&gt;registration_time&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;pGYTw4lPrmjHN9lLR7InnPhzwrtsEI+1auPYpgAk6b0=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;20160108&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;363&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;368.661&lt;/td&gt;
      &lt;td&gt;368.661&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;11875.661&lt;/td&gt;
      &lt;td&gt;5937.830500&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;57&lt;/td&gt;
      &lt;td&gt;28.500000&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;15.333333&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;20711.377&lt;/td&gt;
      &lt;td&gt;6903.792333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;33.000000&lt;/td&gt;
      &lt;td&gt;190&lt;/td&gt;
      &lt;td&gt;14.615385&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;56847.506&lt;/td&gt;
      &lt;td&gt;4372.885077&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;0.615385&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.230769&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.153846&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.307692&lt;/td&gt;
      &lt;td&gt;267&lt;/td&gt;
      &lt;td&gt;20.538462&lt;/td&gt;
      &lt;td&gt;268&lt;/td&gt;
      &lt;td&gt;14.888889&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;81202.505&lt;/td&gt;
      &lt;td&gt;4511.250278&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;0.777778&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.222222&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.277778&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;377&lt;/td&gt;
      &lt;td&gt;20.944444&lt;/td&gt;
      &lt;td&gt;290&lt;/td&gt;
      &lt;td&gt;13.181818&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;84854.309&lt;/td&gt;
      &lt;td&gt;3857.014045&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0.909091&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;0.363636&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;0.363636&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;386&lt;/td&gt;
      &lt;td&gt;17.545455&lt;/td&gt;
      &lt;td&gt;605&lt;/td&gt;
      &lt;td&gt;14.069767&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;158621.515&lt;/td&gt;
      &lt;td&gt;3688.872442&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;1.279070&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.488372&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0.465116&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;0.441860&lt;/td&gt;
      &lt;td&gt;663&lt;/td&gt;
      &lt;td&gt;15.418605&lt;/td&gt;
      &lt;td&gt;605&lt;/td&gt;
      &lt;td&gt;14.069767&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;158621.515&lt;/td&gt;
      &lt;td&gt;3688.872442&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;1.279070&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.488372&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0.465116&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;0.441860&lt;/td&gt;
      &lt;td&gt;663&lt;/td&gt;
      &lt;td&gt;15.418605&lt;/td&gt;
      &lt;td&gt;420&lt;/td&gt;
      &lt;td&gt;1386&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;6232&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;5869&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;6248&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;6276&lt;/td&gt;
      &lt;td&gt;-28&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;-44&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;BLQQH7Gf4iOW4DhlyTBC1YwJgYXEgYkq/0L8VCO/w74=&lt;/th&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;20130111&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;227&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;7849.636&lt;/td&gt;
      &lt;td&gt;7849.636&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;95&lt;/td&gt;
      &lt;td&gt;23.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;28433.210&lt;/td&gt;
      &lt;td&gt;7108.302500&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.250000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;106&lt;/td&gt;
      &lt;td&gt;26.500000&lt;/td&gt;
      &lt;td&gt;158&lt;/td&gt;
      &lt;td&gt;15.800000&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;48280.951&lt;/td&gt;
      &lt;td&gt;4828.095100&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;1.600000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.700000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.200000&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;1.400000&lt;/td&gt;
      &lt;td&gt;173&lt;/td&gt;
      &lt;td&gt;17.300000&lt;/td&gt;
      &lt;td&gt;458&lt;/td&gt;
      &lt;td&gt;17.615385&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;164517.024&lt;/td&gt;
      &lt;td&gt;6327.577846&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;1.692308&lt;/td&gt;
      &lt;td&gt;33&lt;/td&gt;
      &lt;td&gt;1.269231&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;1.653846&lt;/td&gt;
      &lt;td&gt;590&lt;/td&gt;
      &lt;td&gt;22.692308&lt;/td&gt;
      &lt;td&gt;1819&lt;/td&gt;
      &lt;td&gt;27.149254&lt;/td&gt;
      &lt;td&gt;67&lt;/td&gt;
      &lt;td&gt;513447.609&lt;/td&gt;
      &lt;td&gt;7663.397149&lt;/td&gt;
      &lt;td&gt;226&lt;/td&gt;
      &lt;td&gt;3.373134&lt;/td&gt;
      &lt;td&gt;139&lt;/td&gt;
      &lt;td&gt;2.074627&lt;/td&gt;
      &lt;td&gt;86&lt;/td&gt;
      &lt;td&gt;1.283582&lt;/td&gt;
      &lt;td&gt;97&lt;/td&gt;
      &lt;td&gt;1.447761&lt;/td&gt;
      &lt;td&gt;1808&lt;/td&gt;
      &lt;td&gt;26.985075&lt;/td&gt;
      &lt;td&gt;4124&lt;/td&gt;
      &lt;td&gt;32.992000&lt;/td&gt;
      &lt;td&gt;125&lt;/td&gt;
      &lt;td&gt;1148673.053&lt;/td&gt;
      &lt;td&gt;9189.384424&lt;/td&gt;
      &lt;td&gt;435&lt;/td&gt;
      &lt;td&gt;3.480000&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;1.752000&lt;/td&gt;
      &lt;td&gt;147&lt;/td&gt;
      &lt;td&gt;1.176000&lt;/td&gt;
      &lt;td&gt;194&lt;/td&gt;
      &lt;td&gt;1.552000&lt;/td&gt;
      &lt;td&gt;4106&lt;/td&gt;
      &lt;td&gt;32.848000&lt;/td&gt;
      &lt;td&gt;6030&lt;/td&gt;
      &lt;td&gt;37.453416&lt;/td&gt;
      &lt;td&gt;161&lt;/td&gt;
      &lt;td&gt;1588085.229&lt;/td&gt;
      &lt;td&gt;9863.883410&lt;/td&gt;
      &lt;td&gt;780&lt;/td&gt;
      &lt;td&gt;4.844720&lt;/td&gt;
      &lt;td&gt;540&lt;/td&gt;
      &lt;td&gt;3.354037&lt;/td&gt;
      &lt;td&gt;303&lt;/td&gt;
      &lt;td&gt;1.881988&lt;/td&gt;
      &lt;td&gt;273&lt;/td&gt;
      &lt;td&gt;1.695652&lt;/td&gt;
      &lt;td&gt;5519&lt;/td&gt;
      &lt;td&gt;34.279503&lt;/td&gt;
      &lt;td&gt;6030&lt;/td&gt;
      &lt;td&gt;37.453416&lt;/td&gt;
      &lt;td&gt;161&lt;/td&gt;
      &lt;td&gt;1588085.229&lt;/td&gt;
      &lt;td&gt;9863.883410&lt;/td&gt;
      &lt;td&gt;780&lt;/td&gt;
      &lt;td&gt;4.844720&lt;/td&gt;
      &lt;td&gt;540&lt;/td&gt;
      &lt;td&gt;3.354037&lt;/td&gt;
      &lt;td&gt;303&lt;/td&gt;
      &lt;td&gt;1.881988&lt;/td&gt;
      &lt;td&gt;273&lt;/td&gt;
      &lt;td&gt;1.695652&lt;/td&gt;
      &lt;td&gt;5519&lt;/td&gt;
      &lt;td&gt;34.279503&lt;/td&gt;
      &lt;td&gt;277&lt;/td&gt;
      &lt;td&gt;1043&lt;/td&gt;
      &lt;td&gt;3.765343&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;6041&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;6261&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;6260&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;2013&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;zm8t3xu/h5PxWJZw6A88Dp1lrzIdEPmqQkKVGhsVzpU=&lt;/th&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;47&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;20161203&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;43&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;463.075&lt;/td&gt;
      &lt;td&gt;463.075&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;463.075&lt;/td&gt;
      &lt;td&gt;463.075000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;47&lt;/td&gt;
      &lt;td&gt;7.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;4970.152&lt;/td&gt;
      &lt;td&gt;828.358667&lt;/td&gt;
      &lt;td&gt;38&lt;/td&gt;
      &lt;td&gt;6.333333&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;2.500000&lt;/td&gt;
      &lt;td&gt;214&lt;/td&gt;
      &lt;td&gt;11.888889&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;38819.765&lt;/td&gt;
      &lt;td&gt;2156.653611&lt;/td&gt;
      &lt;td&gt;105&lt;/td&gt;
      &lt;td&gt;5.833333&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.388889&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;0.611111&lt;/td&gt;
      &lt;td&gt;148&lt;/td&gt;
      &lt;td&gt;8.222222&lt;/td&gt;
      &lt;td&gt;464&lt;/td&gt;
      &lt;td&gt;17.185185&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;105892.311&lt;/td&gt;
      &lt;td&gt;3921.937444&lt;/td&gt;
      &lt;td&gt;286&lt;/td&gt;
      &lt;td&gt;10.592593&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;1.962963&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.851852&lt;/td&gt;
      &lt;td&gt;411&lt;/td&gt;
      &lt;td&gt;15.222222&lt;/td&gt;
      &lt;td&gt;464&lt;/td&gt;
      &lt;td&gt;17.185185&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;105892.311&lt;/td&gt;
      &lt;td&gt;3921.937444&lt;/td&gt;
      &lt;td&gt;286&lt;/td&gt;
      &lt;td&gt;10.592593&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;1.962963&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.851852&lt;/td&gt;
      &lt;td&gt;411&lt;/td&gt;
      &lt;td&gt;15.222222&lt;/td&gt;
      &lt;td&gt;464&lt;/td&gt;
      &lt;td&gt;17.185185&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;105892.311&lt;/td&gt;
      &lt;td&gt;3921.937444&lt;/td&gt;
      &lt;td&gt;286&lt;/td&gt;
      &lt;td&gt;10.592593&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;1.962963&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.851852&lt;/td&gt;
      &lt;td&gt;411&lt;/td&gt;
      &lt;td&gt;15.222222&lt;/td&gt;
      &lt;td&gt;464&lt;/td&gt;
      &lt;td&gt;17.185185&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;105892.311&lt;/td&gt;
      &lt;td&gt;3921.937444&lt;/td&gt;
      &lt;td&gt;286&lt;/td&gt;
      &lt;td&gt;10.592593&lt;/td&gt;
      &lt;td&gt;53&lt;/td&gt;
      &lt;td&gt;1.962963&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;0.851852&lt;/td&gt;
      &lt;td&gt;411&lt;/td&gt;
      &lt;td&gt;15.222222&lt;/td&gt;
      &lt;td&gt;120&lt;/td&gt;
      &lt;td&gt;396&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;6224&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;6252&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;6280&lt;/td&gt;
      &lt;td&gt;-28&lt;/td&gt;
      &lt;td&gt;-15&lt;/td&gt;
      &lt;td&gt;-13&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;oGtvKgIb+1vvcTTPdZWFyeyoUchFtc+9D+KOfR+DIdg=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;20160106&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;213&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;502.463&lt;/td&gt;
      &lt;td&gt;502.463&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;982.412&lt;/td&gt;
      &lt;td&gt;491.206000&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;4.500000&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;8.333333&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2976.693&lt;/td&gt;
      &lt;td&gt;992.231000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;3.666667&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.333333&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;2.666667&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2981.738&lt;/td&gt;
      &lt;td&gt;745.434500&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;196&lt;/td&gt;
      &lt;td&gt;16.333333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;47610.576&lt;/td&gt;
      &lt;td&gt;3967.548000&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1.250000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;183&lt;/td&gt;
      &lt;td&gt;15.250000&lt;/td&gt;
      &lt;td&gt;1672&lt;/td&gt;
      &lt;td&gt;23.222222&lt;/td&gt;
      &lt;td&gt;72&lt;/td&gt;
      &lt;td&gt;370688.635&lt;/td&gt;
      &lt;td&gt;5148.453264&lt;/td&gt;
      &lt;td&gt;256&lt;/td&gt;
      &lt;td&gt;3.555556&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;1.263889&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;0.611111&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;0.444444&lt;/td&gt;
      &lt;td&gt;1405&lt;/td&gt;
      &lt;td&gt;19.513889&lt;/td&gt;
      &lt;td&gt;2073&lt;/td&gt;
      &lt;td&gt;20.126214&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;453956.260&lt;/td&gt;
      &lt;td&gt;4407.342330&lt;/td&gt;
      &lt;td&gt;384&lt;/td&gt;
      &lt;td&gt;3.728155&lt;/td&gt;
      &lt;td&gt;126&lt;/td&gt;
      &lt;td&gt;1.223301&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;0.718447&lt;/td&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td&gt;0.475728&lt;/td&gt;
      &lt;td&gt;1685&lt;/td&gt;
      &lt;td&gt;16.359223&lt;/td&gt;
      &lt;td&gt;2073&lt;/td&gt;
      &lt;td&gt;20.126214&lt;/td&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;453956.260&lt;/td&gt;
      &lt;td&gt;4407.342330&lt;/td&gt;
      &lt;td&gt;384&lt;/td&gt;
      &lt;td&gt;3.728155&lt;/td&gt;
      &lt;td&gt;126&lt;/td&gt;
      &lt;td&gt;1.223301&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;0.718447&lt;/td&gt;
      &lt;td&gt;49&lt;/td&gt;
      &lt;td&gt;0.475728&lt;/td&gt;
      &lt;td&gt;1685&lt;/td&gt;
      &lt;td&gt;16.359223&lt;/td&gt;
      &lt;td&gt;390&lt;/td&gt;
      &lt;td&gt;1287&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6062&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;5849&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6245&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6273&lt;/td&gt;
      &lt;td&gt;-28&lt;/td&gt;
      &lt;td&gt;183&lt;/td&gt;
      &lt;td&gt;-211&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;shHx7K5hJ3W50FoA4BTEQfSyVcuqCidkjCtY21FdTLs=&lt;/th&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;20150916&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;531&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;42&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;8183.695&lt;/td&gt;
      &lt;td&gt;8183.695&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;232&lt;/td&gt;
      &lt;td&gt;33.142857&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;52512.478&lt;/td&gt;
      &lt;td&gt;7501.782571&lt;/td&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td&gt;7.285714&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0.857143&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1.142857&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;2.142857&lt;/td&gt;
      &lt;td&gt;207&lt;/td&gt;
      &lt;td&gt;29.571429&lt;/td&gt;
      &lt;td&gt;505&lt;/td&gt;
      &lt;td&gt;42.083333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;121942.448&lt;/td&gt;
      &lt;td&gt;10161.870667&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;5.333333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;1.583333&lt;/td&gt;
      &lt;td&gt;510&lt;/td&gt;
      &lt;td&gt;42.500000&lt;/td&gt;
      &lt;td&gt;806&lt;/td&gt;
      &lt;td&gt;36.636364&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;181926.222&lt;/td&gt;
      &lt;td&gt;8269.373727&lt;/td&gt;
      &lt;td&gt;182&lt;/td&gt;
      &lt;td&gt;8.272727&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;1.045455&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;1.363636&lt;/td&gt;
      &lt;td&gt;724&lt;/td&gt;
      &lt;td&gt;32.909091&lt;/td&gt;
      &lt;td&gt;1418&lt;/td&gt;
      &lt;td&gt;21.164179&lt;/td&gt;
      &lt;td&gt;67&lt;/td&gt;
      &lt;td&gt;406302.004&lt;/td&gt;
      &lt;td&gt;6064.209015&lt;/td&gt;
      &lt;td&gt;318&lt;/td&gt;
      &lt;td&gt;4.746269&lt;/td&gt;
      &lt;td&gt;56&lt;/td&gt;
      &lt;td&gt;0.835821&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;0.582090&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;0.895522&lt;/td&gt;
      &lt;td&gt;1548&lt;/td&gt;
      &lt;td&gt;23.104478&lt;/td&gt;
      &lt;td&gt;2369&lt;/td&gt;
      &lt;td&gt;16.451389&lt;/td&gt;
      &lt;td&gt;144&lt;/td&gt;
      &lt;td&gt;734855.804&lt;/td&gt;
      &lt;td&gt;5103.165306&lt;/td&gt;
      &lt;td&gt;468&lt;/td&gt;
      &lt;td&gt;3.250000&lt;/td&gt;
      &lt;td&gt;94&lt;/td&gt;
      &lt;td&gt;0.652778&lt;/td&gt;
      &lt;td&gt;63&lt;/td&gt;
      &lt;td&gt;0.437500&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;2760&lt;/td&gt;
      &lt;td&gt;19.166667&lt;/td&gt;
      &lt;td&gt;5487&lt;/td&gt;
      &lt;td&gt;19.052083&lt;/td&gt;
      &lt;td&gt;288&lt;/td&gt;
      &lt;td&gt;1727199.616&lt;/td&gt;
      &lt;td&gt;5997.220889&lt;/td&gt;
      &lt;td&gt;1096&lt;/td&gt;
      &lt;td&gt;3.805556&lt;/td&gt;
      &lt;td&gt;199&lt;/td&gt;
      &lt;td&gt;0.690972&lt;/td&gt;
      &lt;td&gt;157&lt;/td&gt;
      &lt;td&gt;0.545139&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;0.652778&lt;/td&gt;
      &lt;td&gt;6452&lt;/td&gt;
      &lt;td&gt;22.402778&lt;/td&gt;
      &lt;td&gt;5930&lt;/td&gt;
      &lt;td&gt;17.390029&lt;/td&gt;
      &lt;td&gt;341&lt;/td&gt;
      &lt;td&gt;1887033.172&lt;/td&gt;
      &lt;td&gt;5533.821619&lt;/td&gt;
      &lt;td&gt;1299&lt;/td&gt;
      &lt;td&gt;3.809384&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;0.668622&lt;/td&gt;
      &lt;td&gt;190&lt;/td&gt;
      &lt;td&gt;0.557185&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;0.648094&lt;/td&gt;
      &lt;td&gt;6986&lt;/td&gt;
      &lt;td&gt;20.486804&lt;/td&gt;
      &lt;td&gt;540&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;5737&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6294&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-1&lt;/td&gt;
      &lt;td&gt;-26&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Split data / labels&lt;/span&gt;
&lt;span class="n"&gt;train_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;train_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;dev_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;dev_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;test_labels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;test_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Validation&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;Check data sizes:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Train data / test: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;  Dev data / test: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; Test data / test: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_labels&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Baseline (if we guess all 0&amp;#39;s, this is what we get)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;Baseline Accuracy (dev): &lt;/span&gt;&lt;span class="si"&gt;{:.2%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;())))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Baseline Accuracy (test): &lt;/span&gt;&lt;span class="si"&gt;{:.2%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;())))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;Check&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Train&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53126&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;159&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;53126&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
  &lt;span class="n"&gt;Dev&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11681&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;159&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11681&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
 &lt;span class="n"&gt;Test&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;159&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7024&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;

&lt;span class="n"&gt;Baseline&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;span class="n"&gt;Baseline&lt;/span&gt; &lt;span class="n"&gt;Accuracy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of note, the overall data has a churn rate of roughly 6% (~6% of users churn, ~94% stay).  However, because we want our model to train well on both churned and non-churned users, this data set is split roughly 50/50 between churn and non-churn users.  So we use this 50/50 split to on our 'train' data set, but we reduce it back to 6/94 for both our 'dev' and 'test' data sets, by removing most of the churn cases after data is split into train, dev, and test.  In our initial models, we had not yet peformed the 50/50 spilt of the training data, and our best recall score (of the dev data) was 78%.  Upon making this change to 50/50, our recall score of our best models improved dramattically, to 96%!&lt;/p&gt;
&lt;p&gt;Having split our data, we perform some quick inspections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;class &amp;#39;pandas.core.frame.DataFrame&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;Index: 11681 entries, x5+AtzOZKAtnAJBsCIdAyiRl+1p9nIvAYchIkS4zaS4= to IDkK5VQYefRBzy2GAJgs2ChDorWoKcIBPrnBQGOimbA=&lt;/span&gt;
&lt;span class="c"&gt;Columns: 159 entries, city to registration_time&lt;/span&gt;
&lt;span class="c"&gt;dtypes: float64(61), int64(96), uint8(2)&lt;/span&gt;
&lt;span class="err"&gt;memory usage: 14.1+ MB&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isnull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;city                                 0&lt;/span&gt;
&lt;span class="err"&gt;bd                                   0&lt;/span&gt;
&lt;span class="err"&gt;registered_via                       0&lt;/span&gt;
&lt;span class="err"&gt;registration_init_time               0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatelistening_tenure    0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqsum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqmean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_unqcount            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1total_secssum           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1total_secsmean          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_25sum               0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_25mean              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_50sum               0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_50mean              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_75sum               0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_75mean              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_985sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_985mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_100sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_1num_100mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqsum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqmean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_unqcount            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7total_secssum           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7total_secsmean          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_25sum               0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_25mean              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_50sum               0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_50mean              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_75sum               0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_75mean              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_985sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_985mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_100sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_7num_100mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqsum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqmean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_unqcount           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14total_secssum          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14total_secsmean         0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_25sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_25mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_50sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_50mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_75sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_75mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_985sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_985mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_100sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_14num_100mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqsum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqmean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_unqcount           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31total_secssum          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31total_secsmean         0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_25sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_25mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_50sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_50mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_75sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_75mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_985sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_985mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_100sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_31num_100mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqsum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqmean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_unqcount           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90total_secssum          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90total_secsmean         0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_25sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_25mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_50sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_50mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_75sum              0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_75mean             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_985sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_985mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_100sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_90num_100mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqsum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqmean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_unqcount          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180total_secssum         0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180total_secsmean        0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_25sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_25mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_50sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_50mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_75sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_75mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_985sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_985mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_100sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_180num_100mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqsum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqmean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_unqcount          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365total_secssum         0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365total_secsmean        0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_25sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_25mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_50sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_50mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_75sum             0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_75mean            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_985sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_985mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_100sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_365num_100mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqsum           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqmean          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_unqcount         0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999total_secssum        0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999total_secsmean       0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_25sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_25mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_50sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_50mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_75sum            0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_75mean           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_985sum           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_985mean          0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_100sum           0&lt;/span&gt;
&lt;span class="err"&gt;within_days_9999num_100mean          0&lt;/span&gt;
&lt;span class="err"&gt;total_plan_days                      0&lt;/span&gt;
&lt;span class="err"&gt;total_amount_paid                    0&lt;/span&gt;
&lt;span class="err"&gt;amount_paid_per_day                  0&lt;/span&gt;
&lt;span class="err"&gt;diff_renewal_duration                0&lt;/span&gt;
&lt;span class="err"&gt;diff_plan_amount_paid_per_day        0&lt;/span&gt;
&lt;span class="err"&gt;latest_payment_method_id             0&lt;/span&gt;
&lt;span class="err"&gt;latest_plan_days                     0&lt;/span&gt;
&lt;span class="err"&gt;latest_plan_list_price               0&lt;/span&gt;
&lt;span class="err"&gt;latest_amount_paid                   0&lt;/span&gt;
&lt;span class="err"&gt;latest_auto_renew                    0&lt;/span&gt;
&lt;span class="err"&gt;latest_is_cancel                     0&lt;/span&gt;
&lt;span class="err"&gt;latest_amount_paid_per_day           0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_year       0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_month      0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_day        0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemax_date_absday     0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_year       0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_month      0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_day        0&lt;/span&gt;
&lt;span class="err"&gt;date_featuresdatemin_date_absday     0&lt;/span&gt;
&lt;span class="err"&gt;female                               0&lt;/span&gt;
&lt;span class="err"&gt;male                                 0&lt;/span&gt;
&lt;span class="err"&gt;latest_transaction_date_year         0&lt;/span&gt;
&lt;span class="err"&gt;latest_transaction_date_month        0&lt;/span&gt;
&lt;span class="err"&gt;latest_transaction_date_day          0&lt;/span&gt;
&lt;span class="err"&gt;latest_transaction_date_absday       0&lt;/span&gt;
&lt;span class="err"&gt;latest_expire_date_year              0&lt;/span&gt;
&lt;span class="err"&gt;latest_expire_date_month             0&lt;/span&gt;
&lt;span class="err"&gt;latest_expire_date_day               0&lt;/span&gt;
&lt;span class="err"&gt;latest_expire_date_absday            0&lt;/span&gt;
&lt;span class="err"&gt;latest_trans_vs_expire               0&lt;/span&gt;
&lt;span class="err"&gt;latest_trans_vs_log                  0&lt;/span&gt;
&lt;span class="err"&gt;latest_log_vs_expire                 0&lt;/span&gt;
&lt;span class="err"&gt;registration_time                    0&lt;/span&gt;
&lt;span class="c"&gt;dtype: int64&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;all&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
      &lt;th&gt;registration_time&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.0&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.00000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;1.168100e+04&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
      &lt;td&gt;11681.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;mean&lt;/th&gt;
      &lt;td&gt;5.826727&lt;/td&gt;
      &lt;td&gt;13.443712&lt;/td&gt;
      &lt;td&gt;6.935536&lt;/td&gt;
      &lt;td&gt;2.013228e+07&lt;/td&gt;
      &lt;td&gt;514.284479&lt;/td&gt;
      &lt;td&gt;22.295009&lt;/td&gt;
      &lt;td&gt;22.295009&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;5841.428795&lt;/td&gt;
      &lt;td&gt;5841.428795&lt;/td&gt;
      &lt;td&gt;5.029535&lt;/td&gt;
      &lt;td&gt;5.029535&lt;/td&gt;
      &lt;td&gt;1.189967&lt;/td&gt;
      &lt;td&gt;1.189967&lt;/td&gt;
      &lt;td&gt;0.743258&lt;/td&gt;
      &lt;td&gt;0.743258&lt;/td&gt;
      &lt;td&gt;0.839055&lt;/td&gt;
      &lt;td&gt;0.839055&lt;/td&gt;
      &lt;td&gt;22.308963&lt;/td&gt;
      &lt;td&gt;22.308963&lt;/td&gt;
      &lt;td&gt;111.650372&lt;/td&gt;
      &lt;td&gt;22.691406&lt;/td&gt;
      &lt;td&gt;4.167109&lt;/td&gt;
      &lt;td&gt;30503.988013&lt;/td&gt;
      &lt;td&gt;5985.177092&lt;/td&gt;
      &lt;td&gt;23.840938&lt;/td&gt;
      &lt;td&gt;5.122138&lt;/td&gt;
      &lt;td&gt;5.884342&lt;/td&gt;
      &lt;td&gt;1.257663&lt;/td&gt;
      &lt;td&gt;3.699854&lt;/td&gt;
      &lt;td&gt;0.775567&lt;/td&gt;
      &lt;td&gt;4.381988&lt;/td&gt;
      &lt;td&gt;0.882703&lt;/td&gt;
      &lt;td&gt;116.822104&lt;/td&gt;
      &lt;td&gt;22.752969&lt;/td&gt;
      &lt;td&gt;211.99221&lt;/td&gt;
      &lt;td&gt;22.719871&lt;/td&gt;
      &lt;td&gt;7.785720&lt;/td&gt;
      &lt;td&gt;5.828727e+04&lt;/td&gt;
      &lt;td&gt;6014.422805&lt;/td&gt;
      &lt;td&gt;45.381132&lt;/td&gt;
      &lt;td&gt;5.193618&lt;/td&gt;
      &lt;td&gt;11.183289&lt;/td&gt;
      &lt;td&gt;1.276905&lt;/td&gt;
      &lt;td&gt;7.068487&lt;/td&gt;
      &lt;td&gt;0.781544&lt;/td&gt;
      &lt;td&gt;8.186114&lt;/td&gt;
      &lt;td&gt;0.874601&lt;/td&gt;
      &lt;td&gt;223.294067&lt;/td&gt;
      &lt;td&gt;22.854394&lt;/td&gt;
      &lt;td&gt;452.812602&lt;/td&gt;
      &lt;td&gt;23.127815&lt;/td&gt;
      &lt;td&gt;16.307337&lt;/td&gt;
      &lt;td&gt;1.236928e+05&lt;/td&gt;
      &lt;td&gt;6085.946547&lt;/td&gt;
      &lt;td&gt;97.905830&lt;/td&gt;
      &lt;td&gt;5.332152&lt;/td&gt;
      &lt;td&gt;24.019262&lt;/td&gt;
      &lt;td&gt;1.308603&lt;/td&gt;
      &lt;td&gt;15.254601&lt;/td&gt;
      &lt;td&gt;0.806773&lt;/td&gt;
      &lt;td&gt;17.757298&lt;/td&gt;
      &lt;td&gt;0.900429&lt;/td&gt;
      &lt;td&gt;473.865679&lt;/td&gt;
      &lt;td&gt;23.104524&lt;/td&gt;
      &lt;td&gt;1318.713552&lt;/td&gt;
      &lt;td&gt;23.924663&lt;/td&gt;
      &lt;td&gt;46.052050&lt;/td&gt;
      &lt;td&gt;3.594315e+05&lt;/td&gt;
      &lt;td&gt;6305.510455&lt;/td&gt;
      &lt;td&gt;291.725880&lt;/td&gt;
      &lt;td&gt;5.636081&lt;/td&gt;
      &lt;td&gt;70.684017&lt;/td&gt;
      &lt;td&gt;1.378342&lt;/td&gt;
      &lt;td&gt;45.068659&lt;/td&gt;
      &lt;td&gt;0.848118&lt;/td&gt;
      &lt;td&gt;51.324972&lt;/td&gt;
      &lt;td&gt;0.930059&lt;/td&gt;
      &lt;td&gt;1373.024655&lt;/td&gt;
      &lt;td&gt;23.880023&lt;/td&gt;
      &lt;td&gt;2541.436093&lt;/td&gt;
      &lt;td&gt;24.333497&lt;/td&gt;
      &lt;td&gt;87.509545&lt;/td&gt;
      &lt;td&gt;6.874662e+05&lt;/td&gt;
      &lt;td&gt;6385.243171&lt;/td&gt;
      &lt;td&gt;573.163428&lt;/td&gt;
      &lt;td&gt;5.812711&lt;/td&gt;
      &lt;td&gt;137.585053&lt;/td&gt;
      &lt;td&gt;1.428488&lt;/td&gt;
      &lt;td&gt;87.280284&lt;/td&gt;
      &lt;td&gt;0.871057&lt;/td&gt;
      &lt;td&gt;99.230717&lt;/td&gt;
      &lt;td&gt;0.948863&lt;/td&gt;
      &lt;td&gt;2611.563993&lt;/td&gt;
      &lt;td&gt;24.068495&lt;/td&gt;
      &lt;td&gt;4755.631624&lt;/td&gt;
      &lt;td&gt;24.737577&lt;/td&gt;
      &lt;td&gt;161.709357&lt;/td&gt;
      &lt;td&gt;-3.948022e+12&lt;/td&gt;
      &lt;td&gt;-1.532762e+10&lt;/td&gt;
      &lt;td&gt;1078.856776&lt;/td&gt;
      &lt;td&gt;5.960090&lt;/td&gt;
      &lt;td&gt;258.348087&lt;/td&gt;
      &lt;td&gt;1.471240&lt;/td&gt;
      &lt;td&gt;162.010273&lt;/td&gt;
      &lt;td&gt;0.885842&lt;/td&gt;
      &lt;td&gt;183.662272&lt;/td&gt;
      &lt;td&gt;0.956174&lt;/td&gt;
      &lt;td&gt;4859.338670&lt;/td&gt;
      &lt;td&gt;24.379361&lt;/td&gt;
      &lt;td&gt;8451.857803&lt;/td&gt;
      &lt;td&gt;25.175002&lt;/td&gt;
      &lt;td&gt;279.380104&lt;/td&gt;
      &lt;td&gt;-3.963815e+14&lt;/td&gt;
      &lt;td&gt;-7.873946e+11&lt;/td&gt;
      &lt;td&gt;1888.557315&lt;/td&gt;
      &lt;td&gt;6.049168&lt;/td&gt;
      &lt;td&gt;455.579402&lt;/td&gt;
      &lt;td&gt;1.507384&lt;/td&gt;
      &lt;td&gt;283.676826&lt;/td&gt;
      &lt;td&gt;0.901029&lt;/td&gt;
      &lt;td&gt;319.495163&lt;/td&gt;
      &lt;td&gt;0.963754&lt;/td&gt;
      &lt;td&gt;8641.108980&lt;/td&gt;
      &lt;td&gt;24.792486&lt;/td&gt;
      &lt;td&gt;485.222327&lt;/td&gt;
      &lt;td&gt;2256.692492&lt;/td&gt;
      &lt;td&gt;4.543509&lt;/td&gt;
      &lt;td&gt;-0.072768&lt;/td&gt;
      &lt;td&gt;0.012520&lt;/td&gt;
      &lt;td&gt;38.756956&lt;/td&gt;
      &lt;td&gt;35.180978&lt;/td&gt;
      &lt;td&gt;152.782210&lt;/td&gt;
      &lt;td&gt;152.550381&lt;/td&gt;
      &lt;td&gt;0.874583&lt;/td&gt;
      &lt;td&gt;0.027395&lt;/td&gt;
      &lt;td&gt;4.379098&lt;/td&gt;
      &lt;td&gt;2016.894444&lt;/td&gt;
      &lt;td&gt;2.516480&lt;/td&gt;
      &lt;td&gt;24.400822&lt;/td&gt;
      &lt;td&gt;6241.423166&lt;/td&gt;
      &lt;td&gt;2015.381217&lt;/td&gt;
      &lt;td&gt;4.273264&lt;/td&gt;
      &lt;td&gt;10.564506&lt;/td&gt;
      &lt;td&gt;5727.138687&lt;/td&gt;
      &lt;td&gt;0.211797&lt;/td&gt;
      &lt;td&gt;0.235254&lt;/td&gt;
      &lt;td&gt;2016.962503&lt;/td&gt;
      &lt;td&gt;2.059755&lt;/td&gt;
      &lt;td&gt;17.265902&lt;/td&gt;
      &lt;td&gt;6245.262135&lt;/td&gt;
      &lt;td&gt;2016.997089&lt;/td&gt;
      &lt;td&gt;2.901293&lt;/td&gt;
      &lt;td&gt;16.254944&lt;/td&gt;
      &lt;td&gt;6280.439346&lt;/td&gt;
      &lt;td&gt;-35.177211&lt;/td&gt;
      &lt;td&gt;3.838969&lt;/td&gt;
      &lt;td&gt;-39.016180&lt;/td&gt;
      &lt;td&gt;2013.161031&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;std&lt;/th&gt;
      &lt;td&gt;6.345094&lt;/td&gt;
      &lt;td&gt;18.346119&lt;/td&gt;
      &lt;td&gt;1.899316&lt;/td&gt;
      &lt;td&gt;2.984823e+04&lt;/td&gt;
      &lt;td&gt;270.362724&lt;/td&gt;
      &lt;td&gt;27.289473&lt;/td&gt;
      &lt;td&gt;27.289473&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;8142.475535&lt;/td&gt;
      &lt;td&gt;8142.475535&lt;/td&gt;
      &lt;td&gt;12.678597&lt;/td&gt;
      &lt;td&gt;12.678597&lt;/td&gt;
      &lt;td&gt;2.871737&lt;/td&gt;
      &lt;td&gt;2.871737&lt;/td&gt;
      &lt;td&gt;1.536068&lt;/td&gt;
      &lt;td&gt;1.536068&lt;/td&gt;
      &lt;td&gt;2.135428&lt;/td&gt;
      &lt;td&gt;2.135428&lt;/td&gt;
      &lt;td&gt;33.871304&lt;/td&gt;
      &lt;td&gt;33.871304&lt;/td&gt;
      &lt;td&gt;136.367988&lt;/td&gt;
      &lt;td&gt;21.627585&lt;/td&gt;
      &lt;td&gt;2.148945&lt;/td&gt;
      &lt;td&gt;43854.406776&lt;/td&gt;
      &lt;td&gt;6856.053431&lt;/td&gt;
      &lt;td&gt;44.162816&lt;/td&gt;
      &lt;td&gt;9.053400&lt;/td&gt;
      &lt;td&gt;10.632452&lt;/td&gt;
      &lt;td&gt;2.175187&lt;/td&gt;
      &lt;td&gt;5.571651&lt;/td&gt;
      &lt;td&gt;1.087507&lt;/td&gt;
      &lt;td&gt;14.222665&lt;/td&gt;
      &lt;td&gt;2.166218&lt;/td&gt;
      &lt;td&gt;184.086949&lt;/td&gt;
      &lt;td&gt;28.805492&lt;/td&gt;
      &lt;td&gt;258.14289&lt;/td&gt;
      &lt;td&gt;20.281673&lt;/td&gt;
      &lt;td&gt;4.420964&lt;/td&gt;
      &lt;td&gt;8.320901e+04&lt;/td&gt;
      &lt;td&gt;6553.882438&lt;/td&gt;
      &lt;td&gt;78.772433&lt;/td&gt;
      &lt;td&gt;8.337512&lt;/td&gt;
      &lt;td&gt;18.067398&lt;/td&gt;
      &lt;td&gt;1.992995&lt;/td&gt;
      &lt;td&gt;10.110025&lt;/td&gt;
      &lt;td&gt;0.975385&lt;/td&gt;
      &lt;td&gt;22.794720&lt;/td&gt;
      &lt;td&gt;1.916294&lt;/td&gt;
      &lt;td&gt;347.684326&lt;/td&gt;
      &lt;td&gt;27.606710&lt;/td&gt;
      &lt;td&gt;535.120295&lt;/td&gt;
      &lt;td&gt;18.870724&lt;/td&gt;
      &lt;td&gt;9.586211&lt;/td&gt;
      &lt;td&gt;1.718042e+05&lt;/td&gt;
      &lt;td&gt;6076.212087&lt;/td&gt;
      &lt;td&gt;157.448568&lt;/td&gt;
      &lt;td&gt;7.413234&lt;/td&gt;
      &lt;td&gt;34.991492&lt;/td&gt;
      &lt;td&gt;1.694762&lt;/td&gt;
      &lt;td&gt;20.295165&lt;/td&gt;
      &lt;td&gt;0.858649&lt;/td&gt;
      &lt;td&gt;44.748413&lt;/td&gt;
      &lt;td&gt;1.836051&lt;/td&gt;
      &lt;td&gt;723.190582&lt;/td&gt;
      &lt;td&gt;25.730783&lt;/td&gt;
      &lt;td&gt;1517.857170&lt;/td&gt;
      &lt;td&gt;18.160695&lt;/td&gt;
      &lt;td&gt;27.728096&lt;/td&gt;
      &lt;td&gt;4.829295e+05&lt;/td&gt;
      &lt;td&gt;5968.782229&lt;/td&gt;
      &lt;td&gt;530.007545&lt;/td&gt;
      &lt;td&gt;7.367072&lt;/td&gt;
      &lt;td&gt;96.768111&lt;/td&gt;
      &lt;td&gt;1.495532&lt;/td&gt;
      &lt;td&gt;58.757332&lt;/td&gt;
      &lt;td&gt;0.825757&lt;/td&gt;
      &lt;td&gt;103.773302&lt;/td&gt;
      &lt;td&gt;1.558319&lt;/td&gt;
      &lt;td&gt;2005.149579&lt;/td&gt;
      &lt;td&gt;25.270982&lt;/td&gt;
      &lt;td&gt;2919.897164&lt;/td&gt;
      &lt;td&gt;17.656294&lt;/td&gt;
      &lt;td&gt;54.891995&lt;/td&gt;
      &lt;td&gt;9.095613e+05&lt;/td&gt;
      &lt;td&gt;5808.165290&lt;/td&gt;
      &lt;td&gt;1734.932914&lt;/td&gt;
      &lt;td&gt;10.458405&lt;/td&gt;
      &lt;td&gt;189.308082&lt;/td&gt;
      &lt;td&gt;1.479933&lt;/td&gt;
      &lt;td&gt;111.811107&lt;/td&gt;
      &lt;td&gt;0.802158&lt;/td&gt;
      &lt;td&gt;214.083712&lt;/td&gt;
      &lt;td&gt;1.619215&lt;/td&gt;
      &lt;td&gt;3713.410676&lt;/td&gt;
      &lt;td&gt;24.500432&lt;/td&gt;
      &lt;td&gt;5632.153118&lt;/td&gt;
      &lt;td&gt;17.528812&lt;/td&gt;
      &lt;td&gt;109.365613&lt;/td&gt;
      &lt;td&gt;1.907921e+14&lt;/td&gt;
      &lt;td&gt;7.496272e+11&lt;/td&gt;
      &lt;td&gt;5003.389049&lt;/td&gt;
      &lt;td&gt;14.538201&lt;/td&gt;
      &lt;td&gt;373.301292&lt;/td&gt;
      &lt;td&gt;1.474342&lt;/td&gt;
      &lt;td&gt;212.337775&lt;/td&gt;
      &lt;td&gt;0.765136&lt;/td&gt;
      &lt;td&gt;346.952630&lt;/td&gt;
      &lt;td&gt;1.211172&lt;/td&gt;
      &lt;td&gt;6845.962816&lt;/td&gt;
      &lt;td&gt;23.693800&lt;/td&gt;
      &lt;td&gt;10989.815430&lt;/td&gt;
      &lt;td&gt;17.273936&lt;/td&gt;
      &lt;td&gt;222.393064&lt;/td&gt;
      &lt;td&gt;4.817483e+15&lt;/td&gt;
      &lt;td&gt;8.540636e+12&lt;/td&gt;
      &lt;td&gt;8821.608529&lt;/td&gt;
      &lt;td&gt;13.306385&lt;/td&gt;
      &lt;td&gt;713.431408&lt;/td&gt;
      &lt;td&gt;1.477271&lt;/td&gt;
      &lt;td&gt;407.737201&lt;/td&gt;
      &lt;td&gt;0.756774&lt;/td&gt;
      &lt;td&gt;564.771146&lt;/td&gt;
      &lt;td&gt;1.035766&lt;/td&gt;
      &lt;td&gt;13023.760298&lt;/td&gt;
      &lt;td&gt;23.003918&lt;/td&gt;
      &lt;td&gt;230.848005&lt;/td&gt;
      &lt;td&gt;1230.002058&lt;/td&gt;
      &lt;td&gt;1.051432&lt;/td&gt;
      &lt;td&gt;28.009957&lt;/td&gt;
      &lt;td&gt;0.528422&lt;/td&gt;
      &lt;td&gt;3.769322&lt;/td&gt;
      &lt;td&gt;38.381381&lt;/td&gt;
      &lt;td&gt;162.935104&lt;/td&gt;
      &lt;td&gt;163.028018&lt;/td&gt;
      &lt;td&gt;0.331206&lt;/td&gt;
      &lt;td&gt;0.163238&lt;/td&gt;
      &lt;td&gt;0.969957&lt;/td&gt;
      &lt;td&gt;0.357509&lt;/td&gt;
      &lt;td&gt;2.062157&lt;/td&gt;
      &lt;td&gt;6.319689&lt;/td&gt;
      &lt;td&gt;89.576130&lt;/td&gt;
      &lt;td&gt;0.544543&lt;/td&gt;
      &lt;td&gt;3.891219&lt;/td&gt;
      &lt;td&gt;9.562939&lt;/td&gt;
      &lt;td&gt;255.133800&lt;/td&gt;
      &lt;td&gt;0.408599&lt;/td&gt;
      &lt;td&gt;0.424176&lt;/td&gt;
      &lt;td&gt;0.209692&lt;/td&gt;
      &lt;td&gt;1.358014&lt;/td&gt;
      &lt;td&gt;9.357640&lt;/td&gt;
      &lt;td&gt;47.726121&lt;/td&gt;
      &lt;td&gt;0.056964&lt;/td&gt;
      &lt;td&gt;0.405357&lt;/td&gt;
      &lt;td&gt;9.199672&lt;/td&gt;
      &lt;td&gt;20.838048&lt;/td&gt;
      &lt;td&gt;40.945475&lt;/td&gt;
      &lt;td&gt;100.327736&lt;/td&gt;
      &lt;td&gt;89.066643&lt;/td&gt;
      &lt;td&gt;2.987074&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;2.004033e+07&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.255000&lt;/td&gt;
      &lt;td&gt;0.255000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.255000&lt;/td&gt;
      &lt;td&gt;0.255000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.00000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.550000e-01&lt;/td&gt;
      &lt;td&gt;0.255000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7.620000e-01&lt;/td&gt;
      &lt;td&gt;0.762000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7.620000e-01&lt;/td&gt;
      &lt;td&gt;0.762000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;7.620000e-01&lt;/td&gt;
      &lt;td&gt;0.762000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-9.223372e+15&lt;/td&gt;
      &lt;td&gt;-4.521261e+13&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;-3.135946e+17&lt;/td&gt;
      &lt;td&gt;-4.077954e+14&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-400.000000&lt;/td&gt;
      &lt;td&gt;-6.000000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5482.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5479.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5729.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5791.000000&lt;/td&gt;
      &lt;td&gt;-522.000000&lt;/td&gt;
      &lt;td&gt;-538.000000&lt;/td&gt;
      &lt;td&gt;-813.000000&lt;/td&gt;
      &lt;td&gt;2004.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;25%&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2.012021e+07&lt;/td&gt;
      &lt;td&gt;274.000000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;1035.354000&lt;/td&gt;
      &lt;td&gt;1035.354000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;8.666667&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5144.756000&lt;/td&gt;
      &lt;td&gt;1989.096750&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.200000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
      &lt;td&gt;6.800000&lt;/td&gt;
      &lt;td&gt;43.00000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;1.006196e+04&lt;/td&gt;
      &lt;td&gt;2297.794167&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;1.333333&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.200000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.200000&lt;/td&gt;
      &lt;td&gt;35.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;100.000000&lt;/td&gt;
      &lt;td&gt;11.307692&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;2.419783e+04&lt;/td&gt;
      &lt;td&gt;2669.606818&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;1.727273&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;0.458333&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.300000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.307692&lt;/td&gt;
      &lt;td&gt;85.000000&lt;/td&gt;
      &lt;td&gt;9.333333&lt;/td&gt;
      &lt;td&gt;309.000000&lt;/td&gt;
      &lt;td&gt;12.625000&lt;/td&gt;
      &lt;td&gt;21.000000&lt;/td&gt;
      &lt;td&gt;7.378727e+04&lt;/td&gt;
      &lt;td&gt;3015.113367&lt;/td&gt;
      &lt;td&gt;53.000000&lt;/td&gt;
      &lt;td&gt;2.117647&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;0.571429&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;0.387097&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;0.392157&lt;/td&gt;
      &lt;td&gt;258.000000&lt;/td&gt;
      &lt;td&gt;10.553846&lt;/td&gt;
      &lt;td&gt;578.000000&lt;/td&gt;
      &lt;td&gt;13.242857&lt;/td&gt;
      &lt;td&gt;38.000000&lt;/td&gt;
      &lt;td&gt;1.407210e+05&lt;/td&gt;
      &lt;td&gt;3138.226153&lt;/td&gt;
      &lt;td&gt;106.000000&lt;/td&gt;
      &lt;td&gt;2.295082&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;0.619048&lt;/td&gt;
      &lt;td&gt;19.000000&lt;/td&gt;
      &lt;td&gt;0.422535&lt;/td&gt;
      &lt;td&gt;19.000000&lt;/td&gt;
      &lt;td&gt;0.425926&lt;/td&gt;
      &lt;td&gt;499.000000&lt;/td&gt;
      &lt;td&gt;11.021978&lt;/td&gt;
      &lt;td&gt;1011.000000&lt;/td&gt;
      &lt;td&gt;13.879630&lt;/td&gt;
      &lt;td&gt;63.000000&lt;/td&gt;
      &lt;td&gt;2.432913e+05&lt;/td&gt;
      &lt;td&gt;3.271425e+03&lt;/td&gt;
      &lt;td&gt;192.000000&lt;/td&gt;
      &lt;td&gt;2.485714&lt;/td&gt;
      &lt;td&gt;52.000000&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;0.452128&lt;/td&gt;
      &lt;td&gt;34.000000&lt;/td&gt;
      &lt;td&gt;0.452586&lt;/td&gt;
      &lt;td&gt;865.000000&lt;/td&gt;
      &lt;td&gt;11.553398&lt;/td&gt;
      &lt;td&gt;1440.000000&lt;/td&gt;
      &lt;td&gt;14.409774&lt;/td&gt;
      &lt;td&gt;82.000000&lt;/td&gt;
      &lt;td&gt;2.978761e+05&lt;/td&gt;
      &lt;td&gt;3.232108e+03&lt;/td&gt;
      &lt;td&gt;283.000000&lt;/td&gt;
      &lt;td&gt;2.615385&lt;/td&gt;
      &lt;td&gt;77.000000&lt;/td&gt;
      &lt;td&gt;0.707483&lt;/td&gt;
      &lt;td&gt;49.000000&lt;/td&gt;
      &lt;td&gt;0.473180&lt;/td&gt;
      &lt;td&gt;49.000000&lt;/td&gt;
      &lt;td&gt;0.470721&lt;/td&gt;
      &lt;td&gt;1220.000000&lt;/td&gt;
      &lt;td&gt;11.852590&lt;/td&gt;
      &lt;td&gt;300.000000&lt;/td&gt;
      &lt;td&gt;1192.000000&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;38.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;6262.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;5480.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;6243.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;6273.000000&lt;/td&gt;
      &lt;td&gt;-31.000000&lt;/td&gt;
      &lt;td&gt;-22.000000&lt;/td&gt;
      &lt;td&gt;-29.000000&lt;/td&gt;
      &lt;td&gt;2012.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;50%&lt;/th&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;2.014052e+07&lt;/td&gt;
      &lt;td&gt;554.000000&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;3004.783000&lt;/td&gt;
      &lt;td&gt;3004.783000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;11.000000&lt;/td&gt;
      &lt;td&gt;68.000000&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;16648.129000&lt;/td&gt;
      &lt;td&gt;4122.421714&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;2.833333&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;0.714286&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;61.000000&lt;/td&gt;
      &lt;td&gt;15.000000&lt;/td&gt;
      &lt;td&gt;130.00000&lt;/td&gt;
      &lt;td&gt;17.750000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;3.209375e+04&lt;/td&gt;
      &lt;td&gt;4286.554286&lt;/td&gt;
      &lt;td&gt;21.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;0.538462&lt;/td&gt;
      &lt;td&gt;4.000000&lt;/td&gt;
      &lt;td&gt;0.571429&lt;/td&gt;
      &lt;td&gt;118.000000&lt;/td&gt;
      &lt;td&gt;15.800000&lt;/td&gt;
      &lt;td&gt;291.000000&lt;/td&gt;
      &lt;td&gt;18.705882&lt;/td&gt;
      &lt;td&gt;17.000000&lt;/td&gt;
      &lt;td&gt;7.235517e+04&lt;/td&gt;
      &lt;td&gt;4544.279786&lt;/td&gt;
      &lt;td&gt;49.000000&lt;/td&gt;
      &lt;td&gt;3.500000&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;0.916667&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;0.611111&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;0.625000&lt;/td&gt;
      &lt;td&gt;264.000000&lt;/td&gt;
      &lt;td&gt;16.800000&lt;/td&gt;
      &lt;td&gt;868.000000&lt;/td&gt;
      &lt;td&gt;19.787234&lt;/td&gt;
      &lt;td&gt;47.000000&lt;/td&gt;
      &lt;td&gt;2.160170e+05&lt;/td&gt;
      &lt;td&gt;4801.588723&lt;/td&gt;
      &lt;td&gt;156.000000&lt;/td&gt;
      &lt;td&gt;3.873239&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;0.666667&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;0.683333&lt;/td&gt;
      &lt;td&gt;793.000000&lt;/td&gt;
      &lt;td&gt;17.769231&lt;/td&gt;
      &lt;td&gt;1667.000000&lt;/td&gt;
      &lt;td&gt;20.263158&lt;/td&gt;
      &lt;td&gt;87.000000&lt;/td&gt;
      &lt;td&gt;4.120246e+05&lt;/td&gt;
      &lt;td&gt;4944.808905&lt;/td&gt;
      &lt;td&gt;301.000000&lt;/td&gt;
      &lt;td&gt;4.098765&lt;/td&gt;
      &lt;td&gt;81.000000&lt;/td&gt;
      &lt;td&gt;1.042553&lt;/td&gt;
      &lt;td&gt;53.000000&lt;/td&gt;
      &lt;td&gt;0.689189&lt;/td&gt;
      &lt;td&gt;55.000000&lt;/td&gt;
      &lt;td&gt;0.710227&lt;/td&gt;
      &lt;td&gt;1513.000000&lt;/td&gt;
      &lt;td&gt;18.123967&lt;/td&gt;
      &lt;td&gt;3051.000000&lt;/td&gt;
      &lt;td&gt;20.703180&lt;/td&gt;
      &lt;td&gt;153.000000&lt;/td&gt;
      &lt;td&gt;7.594609e+05&lt;/td&gt;
      &lt;td&gt;5.081905e+03&lt;/td&gt;
      &lt;td&gt;560.000000&lt;/td&gt;
      &lt;td&gt;4.229050&lt;/td&gt;
      &lt;td&gt;152.000000&lt;/td&gt;
      &lt;td&gt;1.100000&lt;/td&gt;
      &lt;td&gt;99.000000&lt;/td&gt;
      &lt;td&gt;0.713178&lt;/td&gt;
      &lt;td&gt;101.000000&lt;/td&gt;
      &lt;td&gt;0.733813&lt;/td&gt;
      &lt;td&gt;2786.000000&lt;/td&gt;
      &lt;td&gt;18.671875&lt;/td&gt;
      &lt;td&gt;4851.000000&lt;/td&gt;
      &lt;td&gt;21.420779&lt;/td&gt;
      &lt;td&gt;228.000000&lt;/td&gt;
      &lt;td&gt;1.129275e+06&lt;/td&gt;
      &lt;td&gt;5.141641e+03&lt;/td&gt;
      &lt;td&gt;894.000000&lt;/td&gt;
      &lt;td&gt;4.393484&lt;/td&gt;
      &lt;td&gt;246.000000&lt;/td&gt;
      &lt;td&gt;1.145631&lt;/td&gt;
      &lt;td&gt;157.000000&lt;/td&gt;
      &lt;td&gt;0.737609&lt;/td&gt;
      &lt;td&gt;162.000000&lt;/td&gt;
      &lt;td&gt;0.749035&lt;/td&gt;
      &lt;td&gt;4455.000000&lt;/td&gt;
      &lt;td&gt;19.231343&lt;/td&gt;
      &lt;td&gt;480.000000&lt;/td&gt;
      &lt;td&gt;2117.000000&lt;/td&gt;
      &lt;td&gt;4.850000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;6267.000000&lt;/td&gt;
      &lt;td&gt;2015.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;5684.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
      &lt;td&gt;6253.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;16.000000&lt;/td&gt;
      &lt;td&gt;6283.000000&lt;/td&gt;
      &lt;td&gt;-28.000000&lt;/td&gt;
      &lt;td&gt;-10.000000&lt;/td&gt;
      &lt;td&gt;-19.000000&lt;/td&gt;
      &lt;td&gt;2014.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;75%&lt;/th&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;2.016011e+07&lt;/td&gt;
      &lt;td&gt;786.000000&lt;/td&gt;
      &lt;td&gt;29.000000&lt;/td&gt;
      &lt;td&gt;29.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;7237.710000&lt;/td&gt;
      &lt;td&gt;7237.710000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;27.000000&lt;/td&gt;
      &lt;td&gt;150.000000&lt;/td&gt;
      &lt;td&gt;29.714286&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;38096.915000&lt;/td&gt;
      &lt;td&gt;7444.710333&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;5.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;142.000000&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;283.00000&lt;/td&gt;
      &lt;td&gt;29.142857&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;7.219161e+04&lt;/td&gt;
      &lt;td&gt;7302.134333&lt;/td&gt;
      &lt;td&gt;55.000000&lt;/td&gt;
      &lt;td&gt;6.214286&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;1.555556&lt;/td&gt;
      &lt;td&gt;9.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;10.000000&lt;/td&gt;
      &lt;td&gt;1.076923&lt;/td&gt;
      &lt;td&gt;269.000000&lt;/td&gt;
      &lt;td&gt;27.750000&lt;/td&gt;
      &lt;td&gt;604.000000&lt;/td&gt;
      &lt;td&gt;29.310345&lt;/td&gt;
      &lt;td&gt;25.000000&lt;/td&gt;
      &lt;td&gt;1.554336e+05&lt;/td&gt;
      &lt;td&gt;7393.735423&lt;/td&gt;
      &lt;td&gt;120.000000&lt;/td&gt;
      &lt;td&gt;6.538462&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;1.625000&lt;/td&gt;
      &lt;td&gt;20.000000&lt;/td&gt;
      &lt;td&gt;1.033333&lt;/td&gt;
      &lt;td&gt;21.000000&lt;/td&gt;
      &lt;td&gt;1.111111&lt;/td&gt;
      &lt;td&gt;579.000000&lt;/td&gt;
      &lt;td&gt;27.950000&lt;/td&gt;
      &lt;td&gt;1795.000000&lt;/td&gt;
      &lt;td&gt;29.746835&lt;/td&gt;
      &lt;td&gt;71.000000&lt;/td&gt;
      &lt;td&gt;4.604427e+05&lt;/td&gt;
      &lt;td&gt;7549.245559&lt;/td&gt;
      &lt;td&gt;359.000000&lt;/td&gt;
      &lt;td&gt;6.902439&lt;/td&gt;
      &lt;td&gt;92.000000&lt;/td&gt;
      &lt;td&gt;1.702703&lt;/td&gt;
      &lt;td&gt;59.000000&lt;/td&gt;
      &lt;td&gt;1.059524&lt;/td&gt;
      &lt;td&gt;64.000000&lt;/td&gt;
      &lt;td&gt;1.129870&lt;/td&gt;
      &lt;td&gt;1717.000000&lt;/td&gt;
      &lt;td&gt;28.437500&lt;/td&gt;
      &lt;td&gt;3468.000000&lt;/td&gt;
      &lt;td&gt;30.159722&lt;/td&gt;
      &lt;td&gt;136.000000&lt;/td&gt;
      &lt;td&gt;8.872624e+05&lt;/td&gt;
      &lt;td&gt;7643.410298&lt;/td&gt;
      &lt;td&gt;708.000000&lt;/td&gt;
      &lt;td&gt;7.084507&lt;/td&gt;
      &lt;td&gt;180.000000&lt;/td&gt;
      &lt;td&gt;1.763514&lt;/td&gt;
      &lt;td&gt;116.000000&lt;/td&gt;
      &lt;td&gt;1.080882&lt;/td&gt;
      &lt;td&gt;122.000000&lt;/td&gt;
      &lt;td&gt;1.152000&lt;/td&gt;
      &lt;td&gt;3306.000000&lt;/td&gt;
      &lt;td&gt;28.680556&lt;/td&gt;
      &lt;td&gt;6457.000000&lt;/td&gt;
      &lt;td&gt;30.614493&lt;/td&gt;
      &lt;td&gt;255.000000&lt;/td&gt;
      &lt;td&gt;1.655791e+06&lt;/td&gt;
      &lt;td&gt;7.835299e+03&lt;/td&gt;
      &lt;td&gt;1332.000000&lt;/td&gt;
      &lt;td&gt;7.212766&lt;/td&gt;
      &lt;td&gt;337.000000&lt;/td&gt;
      &lt;td&gt;1.812500&lt;/td&gt;
      &lt;td&gt;215.000000&lt;/td&gt;
      &lt;td&gt;1.104046&lt;/td&gt;
      &lt;td&gt;229.000000&lt;/td&gt;
      &lt;td&gt;1.161616&lt;/td&gt;
      &lt;td&gt;6188.000000&lt;/td&gt;
      &lt;td&gt;29.495098&lt;/td&gt;
      &lt;td&gt;11311.000000&lt;/td&gt;
      &lt;td&gt;31.182957&lt;/td&gt;
      &lt;td&gt;446.000000&lt;/td&gt;
      &lt;td&gt;2.804311e+06&lt;/td&gt;
      &lt;td&gt;7.882326e+03&lt;/td&gt;
      &lt;td&gt;2293.000000&lt;/td&gt;
      &lt;td&gt;7.281139&lt;/td&gt;
      &lt;td&gt;591.000000&lt;/td&gt;
      &lt;td&gt;1.862069&lt;/td&gt;
      &lt;td&gt;375.000000&lt;/td&gt;
      &lt;td&gt;1.121495&lt;/td&gt;
      &lt;td&gt;399.000000&lt;/td&gt;
      &lt;td&gt;1.175532&lt;/td&gt;
      &lt;td&gt;10945.000000&lt;/td&gt;
      &lt;td&gt;29.963964&lt;/td&gt;
      &lt;td&gt;720.000000&lt;/td&gt;
      &lt;td&gt;3354.000000&lt;/td&gt;
      &lt;td&gt;5.165333&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;30.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;149.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;28.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2016.000000&lt;/td&gt;
      &lt;td&gt;8.000000&lt;/td&gt;
      &lt;td&gt;18.000000&lt;/td&gt;
      &lt;td&gt;5936.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;6262.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;3.000000&lt;/td&gt;
      &lt;td&gt;24.000000&lt;/td&gt;
      &lt;td&gt;6291.000000&lt;/td&gt;
      &lt;td&gt;-28.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;-8.000000&lt;/td&gt;
      &lt;td&gt;2016.000000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;td&gt;22.000000&lt;/td&gt;
      &lt;td&gt;942.000000&lt;/td&gt;
      &lt;td&gt;13.000000&lt;/td&gt;
      &lt;td&gt;2.017022e+07&lt;/td&gt;
      &lt;td&gt;789.000000&lt;/td&gt;
      &lt;td&gt;530.000000&lt;/td&gt;
      &lt;td&gt;530.000000&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;121364.969000&lt;/td&gt;
      &lt;td&gt;121364.969000&lt;/td&gt;
      &lt;td&gt;570.000000&lt;/td&gt;
      &lt;td&gt;570.000000&lt;/td&gt;
      &lt;td&gt;97.000000&lt;/td&gt;
      &lt;td&gt;97.000000&lt;/td&gt;
      &lt;td&gt;47.000000&lt;/td&gt;
      &lt;td&gt;47.000000&lt;/td&gt;
      &lt;td&gt;117.000000&lt;/td&gt;
      &lt;td&gt;117.000000&lt;/td&gt;
      &lt;td&gt;507.000000&lt;/td&gt;
      &lt;td&gt;507.000000&lt;/td&gt;
      &lt;td&gt;2101.000000&lt;/td&gt;
      &lt;td&gt;322.500000&lt;/td&gt;
      &lt;td&gt;7.000000&lt;/td&gt;
      &lt;td&gt;604487.476000&lt;/td&gt;
      &lt;td&gt;121364.969000&lt;/td&gt;
      &lt;td&gt;2328.000000&lt;/td&gt;
      &lt;td&gt;338.000000&lt;/td&gt;
      &lt;td&gt;354.000000&lt;/td&gt;
      &lt;td&gt;66.000000&lt;/td&gt;
      &lt;td&gt;109.000000&lt;/td&gt;
      &lt;td&gt;26.500000&lt;/td&gt;
      &lt;td&gt;1207.000000&lt;/td&gt;
      &lt;td&gt;172.428571&lt;/td&gt;
      &lt;td&gt;3205.000000&lt;/td&gt;
      &lt;td&gt;507.000000&lt;/td&gt;
      &lt;td&gt;4287.00000&lt;/td&gt;
      &lt;td&gt;322.500000&lt;/td&gt;
      &lt;td&gt;14.000000&lt;/td&gt;
      &lt;td&gt;1.188867e+06&lt;/td&gt;
      &lt;td&gt;121364.969000&lt;/td&gt;
      &lt;td&gt;3623.000000&lt;/td&gt;
      &lt;td&gt;338.000000&lt;/td&gt;
      &lt;td&gt;574.000000&lt;/td&gt;
      &lt;td&gt;66.000000&lt;/td&gt;
      &lt;td&gt;197.000000&lt;/td&gt;
      &lt;td&gt;19.000000&lt;/td&gt;
      &lt;td&gt;1877.000000&lt;/td&gt;
      &lt;td&gt;156.416667&lt;/td&gt;
      &lt;td&gt;5765.000000&lt;/td&gt;
      &lt;td&gt;507.000000&lt;/td&gt;
      &lt;td&gt;8345.000000&lt;/td&gt;
      &lt;td&gt;322.500000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;2.418630e+06&lt;/td&gt;
      &lt;td&gt;81498.962379&lt;/td&gt;
      &lt;td&gt;7309.000000&lt;/td&gt;
      &lt;td&gt;338.000000&lt;/td&gt;
      &lt;td&gt;1131.000000&lt;/td&gt;
      &lt;td&gt;66.000000&lt;/td&gt;
      &lt;td&gt;403.000000&lt;/td&gt;
      &lt;td&gt;15.454545&lt;/td&gt;
      &lt;td&gt;3492.000000&lt;/td&gt;
      &lt;td&gt;151.826087&lt;/td&gt;
      &lt;td&gt;13493.000000&lt;/td&gt;
      &lt;td&gt;449.766667&lt;/td&gt;
      &lt;td&gt;23425.000000&lt;/td&gt;
      &lt;td&gt;275.588235&lt;/td&gt;
      &lt;td&gt;90.000000&lt;/td&gt;
      &lt;td&gt;7.056073e+06&lt;/td&gt;
      &lt;td&gt;102261.927435&lt;/td&gt;
      &lt;td&gt;35029.000000&lt;/td&gt;
      &lt;td&gt;393.584270&lt;/td&gt;
      &lt;td&gt;3017.000000&lt;/td&gt;
      &lt;td&gt;33.898876&lt;/td&gt;
      &lt;td&gt;1207.000000&lt;/td&gt;
      &lt;td&gt;21.785714&lt;/td&gt;
      &lt;td&gt;6953.000000&lt;/td&gt;
      &lt;td&gt;124.160714&lt;/td&gt;
      &lt;td&gt;35188.000000&lt;/td&gt;
      &lt;td&gt;443.492754&lt;/td&gt;
      &lt;td&gt;29562.000000&lt;/td&gt;
      &lt;td&gt;200.588235&lt;/td&gt;
      &lt;td&gt;180.000000&lt;/td&gt;
      &lt;td&gt;1.376347e+07&lt;/td&gt;
      &lt;td&gt;87110.569297&lt;/td&gt;
      &lt;td&gt;166936.000000&lt;/td&gt;
      &lt;td&gt;932.603352&lt;/td&gt;
      &lt;td&gt;8311.000000&lt;/td&gt;
      &lt;td&gt;46.430168&lt;/td&gt;
      &lt;td&gt;3287.000000&lt;/td&gt;
      &lt;td&gt;18.363128&lt;/td&gt;
      &lt;td&gt;14946.000000&lt;/td&gt;
      &lt;td&gt;133.446429&lt;/td&gt;
      &lt;td&gt;60842.000000&lt;/td&gt;
      &lt;td&gt;426.651163&lt;/td&gt;
      &lt;td&gt;77035.000000&lt;/td&gt;
      &lt;td&gt;249.500000&lt;/td&gt;
      &lt;td&gt;365.000000&lt;/td&gt;
      &lt;td&gt;2.178917e+07&lt;/td&gt;
      &lt;td&gt;7.669030e+04&lt;/td&gt;
      &lt;td&gt;519451.000000&lt;/td&gt;
      &lt;td&gt;1427.063187&lt;/td&gt;
      &lt;td&gt;19246.000000&lt;/td&gt;
      &lt;td&gt;52.873626&lt;/td&gt;
      &lt;td&gt;8016.000000&lt;/td&gt;
      &lt;td&gt;22.021978&lt;/td&gt;
      &lt;td&gt;15637.000000&lt;/td&gt;
      &lt;td&gt;65.701681&lt;/td&gt;
      &lt;td&gt;96565.000000&lt;/td&gt;
      &lt;td&gt;426.651163&lt;/td&gt;
      &lt;td&gt;154375.000000&lt;/td&gt;
      &lt;td&gt;212.053571&lt;/td&gt;
      &lt;td&gt;789.000000&lt;/td&gt;
      &lt;td&gt;1.424409e+09&lt;/td&gt;
      &lt;td&gt;3.050126e+06&lt;/td&gt;
      &lt;td&gt;911417.000000&lt;/td&gt;
      &lt;td&gt;1298.314815&lt;/td&gt;
      &lt;td&gt;37859.000000&lt;/td&gt;
      &lt;td&gt;53.930199&lt;/td&gt;
      &lt;td&gt;16436.000000&lt;/td&gt;
      &lt;td&gt;23.413105&lt;/td&gt;
      &lt;td&gt;17188.000000&lt;/td&gt;
      &lt;td&gt;32.588378&lt;/td&gt;
      &lt;td&gt;251662.000000&lt;/td&gt;
      &lt;td&gt;360.992857&lt;/td&gt;
      &lt;td&gt;1200.000000&lt;/td&gt;
      &lt;td&gt;5669.000000&lt;/td&gt;
      &lt;td&gt;13.450000&lt;/td&gt;
      &lt;td&gt;420.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;41.000000&lt;/td&gt;
      &lt;td&gt;450.000000&lt;/td&gt;
      &lt;td&gt;1788.000000&lt;/td&gt;
      &lt;td&gt;1788.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;6.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6268.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
      &lt;td&gt;12.000000&lt;/td&gt;
      &lt;td&gt;31.000000&lt;/td&gt;
      &lt;td&gt;6299.000000&lt;/td&gt;
      &lt;td&gt;46.000000&lt;/td&gt;
      &lt;td&gt;782.000000&lt;/td&gt;
      &lt;td&gt;353.000000&lt;/td&gt;
      &lt;td&gt;2017.000000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h1&gt;3. Predictive Modeling!&lt;/h1&gt;
&lt;p&gt;With our data in good shape, we move on to build predictive models.&lt;/p&gt;
&lt;p&gt;We begin by building a couple functions to help automate the evaluation of our models:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Confusion Matrix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Blues&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    This function prints and plots the confusion matrix.&lt;/span&gt;
&lt;span class="sd"&gt;    Normalization can be applied by setting `normalize=True`.&lt;/span&gt;

&lt;span class="sd"&gt;    Source: http://scikit-learn.org/stable/auto_examples/model_selection/plot_confusion_matrix.html&lt;/span&gt;

&lt;span class="sd"&gt;    Documented here as it is in the source.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;astype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;float&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)[:,&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;newaxis&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Normalized Confusion Matrix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Confusion Matrix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interpolation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nearest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;colorbar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;tick_marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tick_marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rotation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yticks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tick_marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;fmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.1%&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;thresh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;2.&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;itertools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])):&lt;/span&gt;
        &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;horizontalalignment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;center&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;white&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;thresh&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;True label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Predicted label&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classifier&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Function to automate the displaying modeling results.&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        classifier (a sklearn classifier):  The classifier to plot.&lt;/span&gt;

&lt;span class="sd"&gt;    Kwargs: &lt;/span&gt;
&lt;span class="sd"&gt;        data (dataframe):  The data on which to predict labels.  Defaults to dev_data.&lt;/span&gt;
&lt;span class="sd"&gt;        labels (dataframe):  The correct labels.  Defaults to dev_labels.&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;        None, but prints and plots summary metrics.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="c1"&gt;#Print Results&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Accuracy: &lt;/span&gt;&lt;span class="si"&gt;{:.2%}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classifier&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;classification_report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classifier&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

    &lt;span class="c1"&gt;#Plot Results&lt;/span&gt;
    &lt;span class="n"&gt;class_names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# Compute confusion matrix&lt;/span&gt;
    &lt;span class="n"&gt;cnf_matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classifier&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_printoptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;precision&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot non-normalized confusion matrix&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plot_confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnf_matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;class_names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Confusion Matrix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Plot normalized confusion matrix&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;plot_confusion_matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cnf_matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;class_names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                          &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Normalized Confusion Matrix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Model Evaluation&lt;/h3&gt;
&lt;p&gt;We're placing an emphasis on recall as our primary metric, moreso than accuracy. Our thinking here is that accuracy has a 'baseline' of 94% (predicting all 0's, i.e., no users churn), making our current best prediction of ~98% much less impressive. Moreover, we're okay with some false positives but would prefer to minimize false negatives. In other words, we'd rather predict a few customers as likely to churn when in fact they would actually stay (false positives) as opposed to predicting customers who would stay but who actually churn (false negatives). This assumption presumes that the long-term cost of keeping customers (for example, the cost of offering discounts) is less than the long-term loss associated with losing customers. Admittedly, more domain knowledge would be required to validate this assumption, but we consider that validation beyond the scope of the project.&lt;/p&gt;
&lt;p&gt;In summary, though we calculate several evaluation metrics below, recall is our primary scoring metric, so long as we have a reasonably low False Positive rate.&lt;/p&gt;
&lt;h3&gt;Poorly Performing Classifiers&lt;/h3&gt;
&lt;p&gt;We initially tried a few different models:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gaussian Naive Bayes&lt;/li&gt;
&lt;li&gt;K-Nearest Neighbors&lt;/li&gt;
&lt;li&gt;Support Vector Machines&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;None of these had promising results, as shown in the output of the cell below.&lt;/p&gt;
&lt;p&gt;Note, though not shown here, the team explored several tuning options with these classifiers, but none of them performed as well as the classifiers further down.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### NB Attempt ###&lt;/span&gt;
&lt;span class="n"&gt;clf_NB_Gauss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GaussianNB&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;clf_NB_Gauss&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NAIVE BAYES CLASSIFIER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_NB_Gauss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;### KNN Attempt ###&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;KNN CLASSIFIER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_neigh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;KNeighborsClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_neighbors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;#Accuracy plateaus around n=10, all 0&amp;#39;s&lt;/span&gt;
&lt;span class="n"&gt;clf_neigh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_neigh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#### SVM Attempts ###&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;SVM CLASSIFIER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_SVM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;svm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SVC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rbf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_iter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;probability&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;#max_iter=635 gives 6% accuracy ... need new approach / tuning&lt;/span&gt;
&lt;span class="n"&gt;clf_SVM&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_SVM&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;NAIVE&lt;/span&gt; &lt;span class="n"&gt;BAYES&lt;/span&gt; &lt;span class="n"&gt;CLASSIFIER&lt;/span&gt;
&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;93&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
             &lt;span class="k"&gt;precision&lt;/span&gt;    &lt;span class="n"&gt;recall&lt;/span&gt;  &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;   &lt;span class="n"&gt;support&lt;/span&gt;

          &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;94&lt;/span&gt;      &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;     &lt;span class="mi"&gt;10986&lt;/span&gt;
          &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;       &lt;span class="mi"&gt;695&lt;/span&gt;

&lt;span class="k"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;89&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;94&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;     &lt;span class="mi"&gt;11681&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;10976&lt;/span&gt;    &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;  &lt;span class="mi"&gt;694&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;44&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_148_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_148_2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;KNN&lt;/span&gt; &lt;span class="n"&gt;CLASSIFIER&lt;/span&gt;
&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;67&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
             &lt;span class="k"&gt;precision&lt;/span&gt;    &lt;span class="n"&gt;recall&lt;/span&gt;  &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;   &lt;span class="n"&gt;support&lt;/span&gt;

          &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;     &lt;span class="mi"&gt;10986&lt;/span&gt;
          &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;       &lt;span class="mi"&gt;695&lt;/span&gt;

&lt;span class="k"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;67&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;76&lt;/span&gt;     &lt;span class="mi"&gt;11681&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;7512&lt;/span&gt; &lt;span class="mi"&gt;3474&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mi"&gt;379&lt;/span&gt;  &lt;span class="mi"&gt;316&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_148_4.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_148_5.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SVM&lt;/span&gt; &lt;span class="s"&gt;CLASSIFIER&lt;/span&gt;


&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Local&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;svm&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;218&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ConvergenceWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Solver&lt;/span&gt; &lt;span class="n"&gt;terminated&lt;/span&gt; &lt;span class="n"&gt;early&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_iter&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;  &lt;span class="n"&gt;Consider&lt;/span&gt; &lt;span class="n"&gt;pre&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;processing&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;StandardScaler&lt;/span&gt; &lt;span class="n"&gt;or&lt;/span&gt; &lt;span class="n"&gt;MinMaxScaler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="c"&gt;% self.max_iter, ConvergenceWarning)&lt;/span&gt;


&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;6.06&lt;/span&gt;&lt;span class="c"&gt;%&lt;/span&gt;
             &lt;span class="n"&gt;precision&lt;/span&gt;    &lt;span class="s"&gt;recall&lt;/span&gt;  &lt;span class="s"&gt;f1-score&lt;/span&gt;   &lt;span class="s"&gt;support&lt;/span&gt;

          &lt;span class="n"&gt;0&lt;/span&gt;       &lt;span class="s"&gt;1.00&lt;/span&gt;      &lt;span class="s"&gt;0.00&lt;/span&gt;      &lt;span class="s"&gt;0.00&lt;/span&gt;     &lt;span class="s"&gt;10986&lt;/span&gt;
          &lt;span class="n"&gt;1&lt;/span&gt;       &lt;span class="s"&gt;0.06&lt;/span&gt;      &lt;span class="s"&gt;1.00&lt;/span&gt;      &lt;span class="s"&gt;0.11&lt;/span&gt;       &lt;span class="s"&gt;695&lt;/span&gt;

&lt;span class="n"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mf"&gt;0.94&lt;/span&gt;      &lt;span class="mf"&gt;0.06&lt;/span&gt;      &lt;span class="mf"&gt;0.01&lt;/span&gt;     &lt;span class="mi"&gt;11681&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="s"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;   &lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;10973&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;695&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="s"&gt;Confusion&lt;/span&gt; &lt;span class="s"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mf"&gt;0.&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.&lt;/span&gt; &lt;span class="mf"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_148_9.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_148_10.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;h3&gt;Random Forest Classifier&lt;/h3&gt;
&lt;p&gt;Having had little success with the classifiers above, we next tried a random forest, which performed very well:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### Random Forest Attempt ###&lt;/span&gt;
&lt;span class="n"&gt;clf_RF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomForestClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_estimators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_RF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_RF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_RF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_params&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;97.40&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
             &lt;span class="n"&gt;precision&lt;/span&gt;    &lt;span class="n"&gt;recall&lt;/span&gt;  &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;   &lt;span class="n"&gt;support&lt;/span&gt;

          &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mf"&gt;1.00&lt;/span&gt;      &lt;span class="mf"&gt;0.97&lt;/span&gt;      &lt;span class="mf"&gt;0.99&lt;/span&gt;     &lt;span class="mi"&gt;10986&lt;/span&gt;
          &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mf"&gt;0.70&lt;/span&gt;      &lt;span class="mf"&gt;0.98&lt;/span&gt;      &lt;span class="mf"&gt;0.82&lt;/span&gt;       &lt;span class="mi"&gt;695&lt;/span&gt;

&lt;span class="n"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mf"&gt;0.98&lt;/span&gt;      &lt;span class="mf"&gt;0.97&lt;/span&gt;      &lt;span class="mf"&gt;0.98&lt;/span&gt;     &lt;span class="mi"&gt;11681&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;10696&lt;/span&gt;   &lt;span class="mi"&gt;290&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;   &lt;span class="mi"&gt;14&lt;/span&gt;   &lt;span class="mi"&gt;681&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="mf"&gt;0.97&lt;/span&gt; &lt;span class="mf"&gt;0.03&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.02&lt;/span&gt; &lt;span class="mf"&gt;0.98&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_150_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_150_2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;{&amp;#39;bootstrap&amp;#39;: True, &amp;#39;class_weight&amp;#39;: None, &amp;#39;criterion&amp;#39;: &amp;#39;gini&amp;#39;, &amp;#39;max_depth&amp;#39;: None, &amp;#39;max_features&amp;#39;: &amp;#39;auto&amp;#39;, &amp;#39;max_leaf_nodes&amp;#39;: None, &amp;#39;min_impurity_decrease&amp;#39;: 0.0, &amp;#39;min_impurity_split&amp;#39;: None, &amp;#39;min_samples_leaf&amp;#39;: 1, &amp;#39;min_samples_split&amp;#39;: 2, &amp;#39;min_weight_fraction_leaf&amp;#39;: 0.0, &amp;#39;n_estimators&amp;#39;: 23, &amp;#39;n_jobs&amp;#39;: 8, &amp;#39;oob_score&amp;#39;: False, &amp;#39;random_state&amp;#39;: None, &amp;#39;verbose&amp;#39;: 0, &amp;#39;warm_start&amp;#39;: False}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Random Forest with GridSearchCV&lt;/h3&gt;
&lt;p&gt;We next tried Random Forest with GridSearchCV to further tune our parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#RF Classifier with Grid Search&lt;/span&gt;
&lt;span class="n"&gt;tuned_parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;n_estimators&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                     &lt;span class="s1"&gt;&amp;#39;max_features&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                     &lt;span class="s1"&gt;&amp;#39;min_samples_leaf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

                    &lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="n"&gt;clf_GS_RF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RandomForestClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="n"&gt;tuned_parameters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="c1"&gt;#cv=4,&lt;/span&gt;
                   &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recall&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_GS_RF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_RF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid_scores_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_RF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_estimator_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_RF&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;best_params_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_RF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[mean: 0.97473, std: 0.00126, params: {&amp;#39;max_features&amp;#39;: 20, &amp;#39;min_samples_leaf&amp;#39;: 2, &amp;#39;n_estimators&amp;#39;: 150}]&lt;/span&gt;
&lt;span class="na"&gt;RandomForestClassifier(bootstrap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;True, class_weight=None, criterion=&amp;#39;gini&amp;#39;,&lt;/span&gt;
&lt;span class="s"&gt;            max_depth=None, max_features=20, max_leaf_nodes=None,&lt;/span&gt;
&lt;span class="s"&gt;            min_impurity_decrease=0.0, min_impurity_split=None,&lt;/span&gt;
&lt;span class="s"&gt;            min_samples_leaf=2, min_samples_split=2,&lt;/span&gt;
&lt;span class="s"&gt;            min_weight_fraction_leaf=0.0, n_estimators=150, n_jobs=8,&lt;/span&gt;
&lt;span class="s"&gt;            oob_score=False, random_state=None, verbose=0,&lt;/span&gt;
&lt;span class="s"&gt;            warm_start=False)&lt;/span&gt;
&lt;span class="na"&gt;{&amp;#39;max_features&amp;#39;: 20, &amp;#39;min_samples_leaf&amp;#39;: 2, &amp;#39;n_estimators&amp;#39;: 150}&lt;/span&gt;
&lt;span class="na"&gt;Accuracy: 98.13%&lt;/span&gt;
             &lt;span class="na"&gt;precision    recall  f1-score   support&lt;/span&gt;

          &lt;span class="na"&gt;0       1.00      0.97      0.99     10986&lt;/span&gt;
          &lt;span class="na"&gt;1       0.70      0.98      0.82       695&lt;/span&gt;

&lt;span class="na"&gt;avg / total       0.98      0.97      0.98     11681&lt;/span&gt;

&lt;span class="na"&gt;Confusion Matrix&lt;/span&gt;
&lt;span class="k"&gt;[[10699   287]&lt;/span&gt;
 &lt;span class="k"&gt;[   13   682]]&lt;/span&gt;
&lt;span class="na"&gt;Normalized Confusion Matrix&lt;/span&gt;
&lt;span class="k"&gt;[[0.97 0.03]&lt;/span&gt;
 &lt;span class="k"&gt;[0.02 0.98]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_152_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_152_2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The best parameters turned out to be max_features = 20, min_samples_leaf = 2, and n_estimators = 150, which produced a recall of 0.96890.&lt;/p&gt;
&lt;p&gt;Of these parameters, n_estimators seemed to have the most effect on model performance, but it was still fairly small, and none of the parameters showed much difference (our total range was 0.0027, from 0.9662 - 0.9689).&lt;/p&gt;
&lt;p&gt;To keep the run time down, we removed all the tuning trials for running multiple tuning parameters.  However, the results of those trials are listed below:&lt;/p&gt;
&lt;p&gt;Output of 'print(clf_GS_RF.grid_scores_)':&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tuning max_features, min_samples_leaf, and n_estimators&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mean: 0.96619, std: 0.00077, params: {'max_features': 20, 'min_samples_leaf': 1, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96663, std: 0.00076, params: {'max_features': 20, 'min_samples_leaf': 1, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96782, std: 0.00066, params: {'max_features': 20, 'min_samples_leaf': 1, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96660, std: 0.00143, params: {'max_features': 20, 'min_samples_leaf': 2, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96786, std: 0.00028, params: {'max_features': 20, 'min_samples_leaf': 2, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96868, std: 0.00055, params: {'max_features': 20, 'min_samples_leaf': 2, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96816, std: 0.00048, params: {'max_features': 20, 'min_samples_leaf': 4, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96838, std: 0.00060, params: {'max_features': 20, 'min_samples_leaf': 4, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96853, std: 0.00101, params: {'max_features': 20, 'min_samples_leaf': 4, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96704, std: 0.00057, params: {'max_features': 20, 'min_samples_leaf': 8, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96786, std: 0.00032, params: {'max_features': 20, 'min_samples_leaf': 8, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96734, std: 0.00089, params: {'max_features': 20, 'min_samples_leaf': 8, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96704, std: 0.00016, params: {'max_features': 40, 'min_samples_leaf': 1, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96753, std: 0.00068, params: {'max_features': 40, 'min_samples_leaf': 1, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96819, std: 0.00080, params: {'max_features': 40, 'min_samples_leaf': 1, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96838, std: 0.00024, params: {'max_features': 40, 'min_samples_leaf': 2, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96819, std: 0.00064, params: {'max_features': 40, 'min_samples_leaf': 2, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96860, std: 0.00048, params: {'max_features': 40, 'min_samples_leaf': 2, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96868, std: 0.00046, params: {'max_features': 40, 'min_samples_leaf': 4, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96860, std: 0.00009, params: {'max_features': 40, 'min_samples_leaf': 4, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96827, std: 0.00027, params: {'max_features': 40, 'min_samples_leaf': 4, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96834, std: 0.00032, params: {'max_features': 40, 'min_samples_leaf': 8, 'n_estimators': 40},&lt;/li&gt;
&lt;li&gt;mean: 0.96860, std: 0.00069, params: {'max_features': 40, 'min_samples_leaf': 8, 'n_estimators': 50},&lt;/li&gt;
&lt;li&gt;mean: 0.96864, std: 0.00059, params: {'max_features': 40, 'min_samples_leaf': 8, 'n_estimators': 100}]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; Further tuning n_estimators&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mean: 0.96842, std: 0.00073, params: {'max_features': 20, 'min_samples_leaf': 2, 'n_estimators': 100},&lt;/li&gt;
&lt;li&gt;mean: 0.96890, std: 0.00082, params: {'max_features': 20, 'min_samples_leaf': 2, 'n_estimators': 150},&lt;/li&gt;
&lt;li&gt;mean: 0.96838, std: 0.00078, params: {'max_features': 20, 'min_samples_leaf': 2, 'n_estimators': 200}]&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;XGBoost Classifier&lt;/h3&gt;
&lt;p&gt;Having seen strong performance from Random Forest models, we next tried an XGBoost classifier:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Basic XGB Classifier&lt;/span&gt;
&lt;span class="n"&gt;clf_XGB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xgboost&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XGBClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_XGB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_XGB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
             &lt;span class="k"&gt;precision&lt;/span&gt;    &lt;span class="n"&gt;recall&lt;/span&gt;  &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;   &lt;span class="n"&gt;support&lt;/span&gt;

          &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;     &lt;span class="mi"&gt;10986&lt;/span&gt;
          &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;68&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;       &lt;span class="mi"&gt;695&lt;/span&gt;

&lt;span class="k"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;     &lt;span class="mi"&gt;11681&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;10667&lt;/span&gt;   &lt;span class="mi"&gt;319&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;   &lt;span class="mi"&gt;18&lt;/span&gt;   &lt;span class="mi"&gt;677&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_155_2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_155_3.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The results of the XGBoost classifier were also very promising.  With no tuning, they weren't quite as good as the Random Forest, but they were very close.&lt;/p&gt;
&lt;h3&gt;XGBoost with GridSearchCV&lt;/h3&gt;
&lt;p&gt;We next tried XGBoost with GridSearchCV to further tune our parameters:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#XGB Classifier with Grid Search&lt;/span&gt;
&lt;span class="n"&gt;tuned_parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;reg_lambda&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                     &lt;span class="c1"&gt;#&amp;#39;learning_rate&amp;#39;: [0.01, 0.1, 1],&lt;/span&gt;
                     &lt;span class="c1"&gt;#&amp;#39;max_depth&amp;#39;: [3, 5, 7, 9],&lt;/span&gt;
                     &lt;span class="s1"&gt;&amp;#39;max_depth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;#Landed on 5&lt;/span&gt;
                     &lt;span class="c1"&gt;#&amp;#39;min_child_weight&amp;#39;: [1, 3, 5],&lt;/span&gt;
                     &lt;span class="s1"&gt;&amp;#39;min_child_weight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;#Landed on 1&lt;/span&gt;
                     &lt;span class="c1"&gt;#&amp;#39;gamma&amp;#39;:[i/10.0 for i in range(0,5)],&lt;/span&gt;
                     &lt;span class="s1"&gt;&amp;#39;gamma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;#Landed on 0.01&lt;/span&gt;
                     &lt;span class="c1"&gt;#&amp;#39;reg_alpha&amp;#39;:[1e-5, 1e-2, 0.1, 1, 100], #NEXT TRY THIS, BUT NOT WITH COMBO ABOVE&lt;/span&gt;
                     &lt;span class="s1"&gt;&amp;#39;reg_alpha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xgboost&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;XGBClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n_jobs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                   &lt;span class="n"&gt;tuned_parameters&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                   &lt;span class="c1"&gt;#cv=4,&lt;/span&gt;
                   &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recall&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;train_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;train_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;97&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;84&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
             &lt;span class="k"&gt;precision&lt;/span&gt;    &lt;span class="n"&gt;recall&lt;/span&gt;  &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;   &lt;span class="n"&gt;support&lt;/span&gt;

          &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;     &lt;span class="mi"&gt;10986&lt;/span&gt;
          &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;       &lt;span class="mi"&gt;695&lt;/span&gt;

&lt;span class="k"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;     &lt;span class="mi"&gt;11681&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;10713&lt;/span&gt;   &lt;span class="mi"&gt;273&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;   &lt;span class="mi"&gt;15&lt;/span&gt;   &lt;span class="mi"&gt;680&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_157_2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_157_3.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;From the code and results shown above, we were able to get results that slightly exceeded the Random Forest model.&lt;/p&gt;
&lt;p&gt;To keep the run time down, we commented out the cells that ran multiple tuning parameters.  However, the results of those trials are as follows:&lt;/p&gt;
&lt;p&gt;Output of 'print(clf_GS_XGB.grid_scores_)':&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tuning max depth and min child weight&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mean: 0.96971, std: 0.00072, params: {'max_depth': 3, 'min_child_weight': 1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.96990, std: 0.00064, params: {'max_depth': 3, 'min_child_weight': 3, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.96990, std: 0.00061, params: {'max_depth': 3, 'min_child_weight': 5, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97012, std: 0.00023, params: {'max_depth': 5, 'min_child_weight': 1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97042, std: 0.00014, params: {'max_depth': 5, 'min_child_weight': 3, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.96983, std: 0.00055, params: {'max_depth': 5, 'min_child_weight': 5, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.96994, std: 0.00048, params: {'max_depth': 7, 'min_child_weight': 1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97038, std: 0.00125, params: {'max_depth': 7, 'min_child_weight': 3, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97031, std: 0.00026, params: {'max_depth': 7, 'min_child_weight': 5, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97038, std: 0.00096, params: {'max_depth': 9, 'min_child_weight': 1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97057, std: 0.00115, params: {'max_depth': 9, 'min_child_weight': 3, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97038, std: 0.00024, params: {'max_depth': 9, 'min_child_weight': 5, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tuning reg_alpha (with optimal values from above)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mean: 0.97005, std: 0.00018, params: {'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 1e-05, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97012, std: 0.00052, params: {'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.01, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97016, std: 0.00016, params: {'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97009, std: 0.00045, params: {'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.96738, std: 0.00057, params: {'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 100, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tuning gamma (with optimal values from above)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mean: 0.97016, std: 0.00016, params: {'gamma': 0.0, 'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97020, std: 0.00029, params: {'gamma': 0.1, 'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97001, std: 0.00028, params: {'gamma': 0.2, 'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97016, std: 0.00083, params: {'gamma': 0.3, 'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;li&gt;mean: 0.97012, std: 0.00056, params: {'gamma': 0.4, 'max_depth': 5, 'min_child_weight': 1, 'reg_alpha': 0.1, 'reg_lambda': 0.01}&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9784172661870504&lt;/span&gt;


&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Final Run on Test Data&lt;/h2&gt;
&lt;p&gt;The cell below runs our best model on the not-yet-touched test data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;summarize_results&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;


&lt;span class="n"&gt;Accuracy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;
             &lt;span class="k"&gt;precision&lt;/span&gt;    &lt;span class="n"&gt;recall&lt;/span&gt;  &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;score&lt;/span&gt;   &lt;span class="n"&gt;support&lt;/span&gt;

          &lt;span class="mi"&gt;0&lt;/span&gt;       &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;      &lt;span class="mi"&gt;6609&lt;/span&gt;
          &lt;span class="mi"&gt;1&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;83&lt;/span&gt;       &lt;span class="mi"&gt;415&lt;/span&gt;

&lt;span class="k"&gt;avg&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;       &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;      &lt;span class="mi"&gt;7024&lt;/span&gt;

&lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;6444&lt;/span&gt;  &lt;span class="mi"&gt;165&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;   &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="mi"&gt;408&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;span class="n"&gt;Normalized&lt;/span&gt; &lt;span class="n"&gt;Confusion&lt;/span&gt; &lt;span class="n"&gt;Matrix&lt;/span&gt;
&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_161_2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/churn/output_161_3.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The test results confirm the same strong findings we saw in the dev data.&lt;/p&gt;
&lt;h2&gt;Modeling Results&lt;/h2&gt;
&lt;p&gt;Here are the key points summarizing our predictive modeling findings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;XGBoost worked the best, slightly outperforming Random Forest.  No other model we tried came close to their results.&lt;/li&gt;
&lt;li&gt;Scores:&lt;ul&gt;
&lt;li&gt;We achieved a recall of 97.8% with the dev data, and 98.3% with the test data (not used to tune any of the models), which resulted in correctly predicting 680 / 408 users who churned and only missing 15 / 7 in the dev / test data, respectively.&lt;/li&gt;
&lt;li&gt;Our false positive rate was 2.5% in both the dev and test data, incorrectly predicting 273 / 165 users who actually did not churn in the dev / test data, respectively.  The economic modeling below will give more insight into if these levels are acceptable, but they seem quite good for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;In our initial models, we had not yet peformed the 50/50 spilt of the training data, and our best recall score (of the dev data) was 78%.  Upon making this change to 50/50, our recall score of our best models improved dramattically, to 96%!&lt;/li&gt;
&lt;li&gt;Additional feature engineering proved useful also.  Notably, adding features of date interactions (expiry date, last transaction, and last usage, along with the differences among these dates), reduced false positives in our dev data from 415 to 273, a big improvement.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;4. Calculating Probabilities&lt;/h1&gt;
&lt;p&gt;Our model has shown very promising results both in terms of recall and accuracy, meaning we can accurately predict which customers will churn. However from a business perspective, we would also like to go further and look at the probability of churn, in order to determine how much should be spent to prevent churn. &lt;/p&gt;
&lt;p&gt;When looking at probility we want to ensure that it is accurately calibrated (ie when the model predicts 60% probability of churn, 60% of customers did churn). We can do this by creating a calibration plot. &lt;/p&gt;
&lt;p&gt;When we performed the train/dev/test split, we kept a 50% churn proportion in the train dataset, but a 6% (native) churn proportion in both the dev and test splits. Therefore, because we trained on the train dataset, but our proportions are very different between train/dev datasets, our calibration is very innacurate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;plot_calibration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testing_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;testing_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; This function plots calibration plot using sklearn packages in order to visualize&lt;/span&gt;
&lt;span class="sd"&gt;    the efficiency in which models predict probabilities. It is based on the work presented&lt;/span&gt;
&lt;span class="sd"&gt;    in the sklearn documentation (http://scikit-learn.org/stable/auto_examples/calibration/plot_calibration_curve.html).&lt;/span&gt;

&lt;span class="sd"&gt;    Also prints the brier score for reference.&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        models: A list of tuples that contain the pre-fit model (with predict_proba as a method)&lt;/span&gt;
&lt;span class="sd"&gt;            as well as a string of the name of the model&lt;/span&gt;
&lt;span class="sd"&gt;        testing_data: Data used for testing the pre-fit model. **Data should not have previously&lt;/span&gt;
&lt;span class="sd"&gt;            been used for testing&lt;/span&gt;
&lt;span class="sd"&gt;        testing_labels: Labels for the testing data&lt;/span&gt;
&lt;span class="sd"&gt;        title: String to be used as title for plot&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;        N/A: Prints plot to screen&lt;/span&gt;


&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot2grid&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;rowspan&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplot2grid&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;k:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Perfect Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;#Get probabilities for the specific model using the test dataset&lt;/span&gt;
        &lt;span class="n"&gt;prob_pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict_proba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_data&lt;/span&gt;&lt;span class="p"&gt;)[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="c1"&gt;#Use sklearn calibraiton_curve implementation to extract data to plot in calibration curve&lt;/span&gt;
        &lt;span class="n"&gt;frac_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mean_pred&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;calibration_curve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prob_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_bins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean_pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;frac_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;s-&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,))&lt;/span&gt;
        &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prob_pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;bins&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;histtype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;step&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;#Print the Brier Score - used for quantifying calibration success&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; Brier Score: &lt;/span&gt;&lt;span class="si"&gt;%1.3f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;brier_score_loss&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prob_pos&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Fraction of positives&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylim&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.05&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lower right&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mean predicted value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ax2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;upper center&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ncol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tight_layout&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Baseline score using models that were previously computed to optimize for recall and accuracy&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;clf_NB_Gauss&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Naive Bayes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_neigh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Nearest Neighbors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_RF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Random Forest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_SVM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Support Vector Machine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_XGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XG Boost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XG Boost Optimized&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Calibration Plot for Previously Computed Models&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;plot_calibration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Naive Bayes Brier Score: 0.060&lt;/span&gt;
&lt;span class="err"&gt;Nearest Neighbors Brier Score: 0.243&lt;/span&gt;
&lt;span class="err"&gt;Random Forest Brier Score: 0.027&lt;/span&gt;
&lt;span class="err"&gt;Support Vector Machine Brier Score: 0.256&lt;/span&gt;
&lt;span class="err"&gt;XG Boost Brier Score: 0.025&lt;/span&gt;
&lt;span class="err"&gt;XG Boost Optimized Brier Score: 0.022&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_166_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Because of the very different proportion of churn data between the train and dev dataset, our calibration curves for all models performs very poorly. We therefore need to run a calibration model (trained on the dev set - which hasn't been used for training and provides the correct proportion of churn). Training using the dev set, we can then determine calibration efficiency by looking at the test set which until now has not been utilized. Due to the limited size of our dataset, we will train on the dev set, however an additional subset of data that hasn't previously been used would be a preferred approach and is recommended for future development. &lt;/p&gt;
&lt;p&gt;We can see the affect of different proportion churn datsets for train and test in the histogram underneath the calibration curve. We know that in the dev set 94% of the data is labeled 0 (so should have a small probability) however there are peaks around the 50% mark especially in the SVM model. This distorts the probability computation and causes the models to be poorly calibrated. &lt;/p&gt;
&lt;p&gt;We will start by training using the built in sklearn packages which utilizes Platt's scaling (fitting a logistic regression model) or isotonic calibration procedures. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Fit isotonic and sigmoid calibration to the XG Boost Model&lt;/span&gt;
&lt;span class="n"&gt;clf_isotonic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CalibratedClassifierCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;isotonic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_isotonic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;clf_sigmoid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CalibratedClassifierCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sigmoid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;clf_sigmoid&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="k"&gt;C&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AOlson&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;AppData&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="k"&gt;Local&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;Continuum&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;anaconda3&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;sklearn&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;preprocessing&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;151&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;truth&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;ambiguous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Returning&lt;/span&gt; &lt;span class="k"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;future&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;check&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="nb"&gt;array&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;





&lt;span class="n"&gt;CalibratedClassifierCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_estimator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GridSearchCV&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raise&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;estimator&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;XGBClassifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;base_score&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;booster&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gbtree&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;colsample_bylevel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;colsample_bytree&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gamma&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;learning_rate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_delta_step&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;max_depth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;min_child_weight&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;missing&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n_estimators&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;n_jo&lt;/span&gt;&lt;span class="p"&gt;....&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;reg_alpha&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
       &lt;span class="n"&gt;pre_dispatch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2*n_jobs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;refit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scoring&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;recall&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;verbose&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="n"&gt;cv&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sigmoid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The sklearn calibration functions utilize the dataset in raw form (rather than feeding in predicted probabilities from the prior model). Below when we implement our own model, we train on the former predicted model probabilities (clf_GS_XGB) to compute the calibrated model. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XG Boost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_isotonic&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XGB Isotonic Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_sigmoid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;XGB Sigmoid Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Calibration Plot for Isotonic and Sigmoid Calibration Functions&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;plot_calibration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;XG Boost Brier Score: 0.021&lt;/span&gt;
&lt;span class="err"&gt;XGB Isotonic Calibration Brier Score: 0.013&lt;/span&gt;
&lt;span class="err"&gt;XGB Sigmoid Calibration Brier Score: 0.015&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_170_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;We can see that both calibration procedures significantly improved over the non-calibrated XG-Boost method (we are calibrating on XG Boost because this provided the highest accuracy and recall). The isotonic calibration worked better than sigmoid. &lt;/p&gt;
&lt;p&gt;From the histogram plot we can see that most predictions have a low probability, which makes sense based on the skew in the dev and test datasets (only 6% churn). &lt;/p&gt;
&lt;p&gt;We then wanted to test other methods of calibration to determine if our own implementation would result in improved calibration. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Initialize models used for calibration&lt;/span&gt;
&lt;span class="n"&gt;clf_LR_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LogisticRegression&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;clf_RF_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RandomForestClassifier&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;clf_NB_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GaussianNB&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;clf_SVM_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;svm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SVC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rbf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;probability&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Get probability data from the former model (XG Boost) in order to fit the calibration model&lt;/span&gt;
&lt;span class="n"&gt;probs_dev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict_proba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;)[:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;probs_dev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;probs_dev&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;probs_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf_GS_XGB&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict_proba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;)[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;probs_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;probs_test&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reshape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;clf_LR_class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Logistic Regression Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_RF_class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Random Forrest Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_NB_class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Naive Bayes Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                 &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clf_SVM_class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SVM Calibration&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="c1"&gt;#Fit the models used for calibration with the probability output from XG Boost&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;clf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;probs_dev&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dev_labels&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Calibration Plot for Implementation of Calibrated Models using other ML Models&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;plot_calibration&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;probs_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_labels&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Logistic Regression Calibration Brier Score: 0.013&lt;/span&gt;
&lt;span class="err"&gt;Random Forrest Calibration Brier Score: 0.017&lt;/span&gt;
&lt;span class="err"&gt;Naive Bayes Calibration Brier Score: 0.020&lt;/span&gt;
&lt;span class="err"&gt;SVM Calibration Brier Score: 0.011&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_172_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Here we can see that our implementation, using the default hyperparameters for the sklearn modeling packages, improved the baseline accuracy (clf_GS_XGB). Additionally, while visually all lines appear to be less calibrated than the former calibration steps (isotonic and sigmoid), the brier score for the SVM implementation was actually lower (better) than the isotonic implementation. The dataset here was limited (5000 samples) and visually isotonic does appear to follow the 45 deg line more closely than SVM. We can see that in several locations SVM is very close to the 45 deg line which may help to bring down the brier score calculation on this limited dataset, but overall performance would be hindered. &lt;/p&gt;
&lt;p&gt;Because the intent of the calibration is to feed an economic model that will analyze probability of churn over a range of probabilities, we will utilize the isotonic calibration model as it stays closs to the 45 deg line throughout the range of probabilities where we would like to recommend action taken to prevent churn. &lt;/p&gt;
&lt;p&gt;Future work should involve larger datasets to validate the use of the isotonic calibration or support an alternative method. &lt;/p&gt;
&lt;p&gt;We can now use our calibrated probabilities to feed our economic model and allow business insight into the problem of business churn.&lt;/p&gt;
&lt;h1&gt;5. Economic Impact&lt;/h1&gt;
&lt;h2&gt;Economic model to plug into the business plan&lt;/h2&gt;
&lt;p&gt;To this point we have the following information:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;*Users who could churn (from the model)&lt;/span&gt;
&lt;span class="err"&gt;*Probability for churn (from the calibrated model)&lt;/span&gt;
&lt;span class="err"&gt;*Spending metrics (from the data)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next step would be to guide the business on worthwhile spending to keep the customers at risk. We'll come up with a model for this spend (marketing spend) and then apply it to our data. The marketing spend can be used for loyalty programs, incentives or other kinds of tiered discounting programs. We'll keep the spend formfactor out of scope for this report. &lt;/p&gt;
&lt;p&gt;For the economic analysis, data has been provided in NTD (New Taiwan Dollars). This will be the currency used throughout this analysis.&lt;/p&gt;
&lt;h3&gt;Coming up with the economic model for retention&lt;/h3&gt;
&lt;p&gt;We'll start with some metrics for the customer and business that are visible from the data or our feature list&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Optimum&lt;/span&gt; &lt;span class="n"&gt;lifetime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;assumed&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;revenue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;highest&lt;/span&gt; &lt;span class="n"&gt;paying&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;purpose&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;report&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;calculate&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Optimum&lt;/span&gt; &lt;span class="n"&gt;lifetime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;OLTV&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;max&lt;/span&gt; &lt;span class="n"&gt;paid&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;day&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Optimum&lt;/span&gt; &lt;span class="n"&gt;lietime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;OLTV3y&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Lifetime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt; &lt;span class="n"&gt;revenue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;again&lt;/span&gt; &lt;span class="n"&gt;consider&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Life&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;LTV&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;actuals&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;day&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Life&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;LTV3y&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Average&lt;/span&gt; &lt;span class="n"&gt;lifetime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;average&lt;/span&gt; &lt;span class="n"&gt;what&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;paid&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;customers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;metrics&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Average&lt;/span&gt; &lt;span class="n"&gt;life&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ALTV&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;average&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;day&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Average&lt;/span&gt; &lt;span class="n"&gt;life&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;altv3y&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Average 3 year life value of a customer can help us make assumptions on what can be spend to acuire the customer in the first place (CAC). We're assuming that this value is 10% of the average lifetime value
    *CAC = .1 * altv3y&lt;/p&gt;
&lt;p&gt;Now know the value (revenue) of our customers and what it cost to acquire them. We'll move on to find out the spend to keep them. CAC is relevant as it helps us establish a ceiling for our retention/reacquisition cost (RAC) spend. We'll assert that the reacquistion cost for the customer cannot exceed 75% of the original acquisition cost.&lt;/p&gt;
&lt;p&gt;We'd not want to spend the "reacquistion $" equally on all customers. We'd want to optimize this spend based on the forllowing: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;ltv&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;oltv&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;lifetime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lifetime&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;optimum&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="n"&gt;representation&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;simplistic&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;leaves&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;intangibles&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="n"&gt;social&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="n"&gt;cost&lt;/span&gt; &lt;span class="n"&gt;impact&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;some&lt;/span&gt; &lt;span class="n"&gt;customers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;easily&lt;/span&gt; &lt;span class="n"&gt;extend&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;those&lt;/span&gt; &lt;span class="n"&gt;factors&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Risk&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;flight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;probability&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;churn&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="n"&gt;represention&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Combining all of the above, we arrive at the following model for reacqusition spending (RAC)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;** RAC = .75 * CAC * POC * (LTV/OLTV)**&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We'll calculate this value individually for each customer.&lt;/p&gt;
&lt;p&gt;An enchancement to our recommendation can be finding RAC clusters to suggest tiers of spending. We've not attempted that in this report.&lt;/p&gt;
&lt;h3&gt;Probabilities from our model&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Get the probabilities for economic model&lt;/span&gt;
&lt;span class="c1"&gt;# We&amp;#39;ll use the calibrated model&lt;/span&gt;

&lt;span class="c1"&gt;# Prediction probabilities&lt;/span&gt;
&lt;span class="n"&gt;predictions_prob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf_isotonic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict_proba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Predictions&lt;/span&gt;
&lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;clf_isotonic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Test&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="s1"&gt;Dev data shape: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Predictions shape: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Sample of predictions: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Prediction probabilities shape: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Sample of prediction probabilities: &lt;/span&gt;
&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;predictions_prob&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;predictions_prob&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Dev data shape: (11681, 159)&lt;/span&gt;
&lt;span class="err"&gt;Predictions shape: (11681,)&lt;/span&gt;
&lt;span class="err"&gt;Sample of predictions: [0 0 0 0 0]&lt;/span&gt;
&lt;span class="err"&gt;Prediction probabilities shape: (11681, 2)&lt;/span&gt;
&lt;span class="err"&gt;Sample of prediction probabilities: &lt;/span&gt;
&lt;span class="err"&gt;[[9.91e-01 8.57e-03]&lt;/span&gt;
&lt;span class="err"&gt; [9.98e-01 1.70e-03]&lt;/span&gt;
&lt;span class="err"&gt; [9.99e-01 1.18e-03]&lt;/span&gt;
&lt;span class="err"&gt; [1.00e+00 0.00e+00]&lt;/span&gt;
&lt;span class="err"&gt; [1.00e+00 2.04e-04]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Starting the marketing data frame&lt;/span&gt;

&lt;span class="n"&gt;marketing_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;dev_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;deep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Test&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;Marketing_data shape: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Marketing_data shape: (11681, 159)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Adding predictions and probability (From the model)&lt;/span&gt;

&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;predictions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;
&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;probability_churn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;predictions_prob&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Lifetime value metrics for the customers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Optimum life time value (per day ) can be represented by the max of &amp;quot;amount paid per day&amp;quot; among our sample&lt;/span&gt;

&lt;span class="n"&gt;oltv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;oltv3y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;oltv&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;Optimum lifetime value of the customer per day (NTD/day): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.2f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Optimum lifetime value of the customer (3 Years) (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.2f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;oltv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;oltv3y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Optimum lifetime value of the customer per day (NTD/day): NT$13.45&lt;/span&gt;
&lt;span class="err"&gt;Optimum lifetime value of the customer (3 Years) (NTD): NT$14,727.75&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Average lifetime value (ALTV) can be represented by spend/day &lt;/span&gt;
&lt;span class="c1"&gt;# Over 3 years it helps us calculate the cost to acquire the customer (CAC)&lt;/span&gt;
&lt;span class="c1"&gt;# The business plan allows CAC to be 10% of revenue from the customer&lt;/span&gt;

&lt;span class="n"&gt;altv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;altv3y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;365&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;cac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;altv3y&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;Average lifetime value of the customer per day (NTD/day): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Average lifetime value of the customer: (3 Years) (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Customer acquisition cost (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;altv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;altv3y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cac&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Average lifetime value of the customer per day (NTD/day): NT$4.5435&lt;/span&gt;
&lt;span class="err"&gt;Average lifetime value of the customer: (3 Years) (NTD): NT$4,975.1425&lt;/span&gt;
&lt;span class="err"&gt;Customer acquisition cost (NTD): NT$497.5143&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Adding the reacquisition cost suggestion to our model&lt;/h3&gt;
&lt;h3&gt;RAC = .75 * CAC * POC * (LTV/OLTV)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Reacquistion cost (marketing spend to prevent churn):&lt;/span&gt;
&lt;span class="c1"&gt;# RAC = .75 * CAC * POC * (LTV/OLTV)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="s1"&gt;Shape of predictions: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Shape of predictions_prob: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Shape of marketing_data[&amp;#39;amount_paid_per_day&amp;#39;]: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions_prob&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;cac&lt;/span&gt;
                                    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;predictions_prob&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                                    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt;
                                    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;oltv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                                    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Shape of predictions: (11681,)&lt;/span&gt;
&lt;span class="err"&gt;Shape of predictions_prob: (11681,)&lt;/span&gt;
&lt;span class="err"&gt;Shape of marketing_data[&amp;#39;amount_paid_per_day&amp;#39;]: (11681,)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Test&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;(11681, 162)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;city&lt;/th&gt;
      &lt;th&gt;bd&lt;/th&gt;
      &lt;th&gt;registered_via&lt;/th&gt;
      &lt;th&gt;registration_init_time&lt;/th&gt;
      &lt;th&gt;date_featuresdatelistening_tenure&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_1total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_1total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_1num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_1num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_1num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_7total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_7total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_7num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_7num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_7num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_14total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_14total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_14num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_14num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_14num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_31total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_31total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_31num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_31num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_31num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_90total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_90total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_90num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_90num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_90num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_180total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_180total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_180num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_180num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_180num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_365total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_365total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_365num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_365num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_365num_100mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqsum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_unqcount&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secssum&lt;/th&gt;
      &lt;th&gt;within_days_9999total_secsmean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_25mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_50mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_75mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_985mean&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100sum&lt;/th&gt;
      &lt;th&gt;within_days_9999num_100mean&lt;/th&gt;
      &lt;th&gt;total_plan_days&lt;/th&gt;
      &lt;th&gt;total_amount_paid&lt;/th&gt;
      &lt;th&gt;amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;diff_renewal_duration&lt;/th&gt;
      &lt;th&gt;diff_plan_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;latest_payment_method_id&lt;/th&gt;
      &lt;th&gt;latest_plan_days&lt;/th&gt;
      &lt;th&gt;latest_plan_list_price&lt;/th&gt;
      &lt;th&gt;latest_amount_paid&lt;/th&gt;
      &lt;th&gt;latest_auto_renew&lt;/th&gt;
      &lt;th&gt;latest_is_cancel&lt;/th&gt;
      &lt;th&gt;latest_amount_paid_per_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemax_date_absday&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_year&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_month&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_day&lt;/th&gt;
      &lt;th&gt;date_featuresdatemin_date_absday&lt;/th&gt;
      &lt;th&gt;female&lt;/th&gt;
      &lt;th&gt;male&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_year&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_month&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_day&lt;/th&gt;
      &lt;th&gt;latest_transaction_date_absday&lt;/th&gt;
      &lt;th&gt;latest_expire_date_year&lt;/th&gt;
      &lt;th&gt;latest_expire_date_month&lt;/th&gt;
      &lt;th&gt;latest_expire_date_day&lt;/th&gt;
      &lt;th&gt;latest_expire_date_absday&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_expire&lt;/th&gt;
      &lt;th&gt;latest_trans_vs_log&lt;/th&gt;
      &lt;th&gt;latest_log_vs_expire&lt;/th&gt;
      &lt;th&gt;registration_time&lt;/th&gt;
      &lt;th&gt;predictions&lt;/th&gt;
      &lt;th&gt;probability_churn&lt;/th&gt;
      &lt;th&gt;proposed_spend&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;msno&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;x5+AtzOZKAtnAJBsCIdAyiRl+1p9nIvAYchIkS4zaS4=&lt;/th&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;20150202&lt;/td&gt;
      &lt;td&gt;748&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;330.174&lt;/td&gt;
      &lt;td&gt;330.174&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;179&lt;/td&gt;
      &lt;td&gt;44.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;41022.435&lt;/td&gt;
      &lt;td&gt;10255.608750&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;7.750000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;153&lt;/td&gt;
      &lt;td&gt;38.250000&lt;/td&gt;
      &lt;td&gt;193&lt;/td&gt;
      &lt;td&gt;38.600000&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;43158.296&lt;/td&gt;
      &lt;td&gt;8631.659200&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;6.800000&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;2.200000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.200000&lt;/td&gt;
      &lt;td&gt;158&lt;/td&gt;
      &lt;td&gt;31.600000&lt;/td&gt;
      &lt;td&gt;275&lt;/td&gt;
      &lt;td&gt;22.916667&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;59410.879&lt;/td&gt;
      &lt;td&gt;4950.906583&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;4.333333&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;1.500000&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.583333&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.583333&lt;/td&gt;
      &lt;td&gt;214&lt;/td&gt;
      &lt;td&gt;17.833333&lt;/td&gt;
      &lt;td&gt;1687&lt;/td&gt;
      &lt;td&gt;33.740000&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;372126.228&lt;/td&gt;
      &lt;td&gt;7442.524560&lt;/td&gt;
      &lt;td&gt;371&lt;/td&gt;
      &lt;td&gt;7.420000&lt;/td&gt;
      &lt;td&gt;79&lt;/td&gt;
      &lt;td&gt;1.580000&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;1.040000&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1303&lt;/td&gt;
      &lt;td&gt;26.060000&lt;/td&gt;
      &lt;td&gt;4329&lt;/td&gt;
      &lt;td&gt;36.686441&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;997354.598&lt;/td&gt;
      &lt;td&gt;8452.157610&lt;/td&gt;
      &lt;td&gt;719&lt;/td&gt;
      &lt;td&gt;6.093220&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;1.161017&lt;/td&gt;
      &lt;td&gt;92&lt;/td&gt;
      &lt;td&gt;0.779661&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;3595&lt;/td&gt;
      &lt;td&gt;30.466102&lt;/td&gt;
      &lt;td&gt;8460&lt;/td&gt;
      &lt;td&gt;35.696203&lt;/td&gt;
      &lt;td&gt;237&lt;/td&gt;
      &lt;td&gt;1947010.556&lt;/td&gt;
      &lt;td&gt;8215.234414&lt;/td&gt;
      &lt;td&gt;1507&lt;/td&gt;
      &lt;td&gt;6.358650&lt;/td&gt;
      &lt;td&gt;272&lt;/td&gt;
      &lt;td&gt;1.147679&lt;/td&gt;
      &lt;td&gt;155&lt;/td&gt;
      &lt;td&gt;0.654008&lt;/td&gt;
      &lt;td&gt;171&lt;/td&gt;
      &lt;td&gt;0.721519&lt;/td&gt;
      &lt;td&gt;7136&lt;/td&gt;
      &lt;td&gt;30.109705&lt;/td&gt;
      &lt;td&gt;21497&lt;/td&gt;
      &lt;td&gt;39.883117&lt;/td&gt;
      &lt;td&gt;539&lt;/td&gt;
      &lt;td&gt;5178191.657&lt;/td&gt;
      &lt;td&gt;9607.034614&lt;/td&gt;
      &lt;td&gt;3037&lt;/td&gt;
      &lt;td&gt;5.634508&lt;/td&gt;
      &lt;td&gt;686&lt;/td&gt;
      &lt;td&gt;1.272727&lt;/td&gt;
      &lt;td&gt;365&lt;/td&gt;
      &lt;td&gt;0.677180&lt;/td&gt;
      &lt;td&gt;367&lt;/td&gt;
      &lt;td&gt;0.680891&lt;/td&gt;
      &lt;td&gt;19132&lt;/td&gt;
      &lt;td&gt;35.495362&lt;/td&gt;
      &lt;td&gt;555&lt;/td&gt;
      &lt;td&gt;2682&lt;/td&gt;
      &lt;td&gt;4.832432&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;6259&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5511&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;6241&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-18&lt;/td&gt;
      &lt;td&gt;-9&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.008569&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;WiVvUGUuxmRviEX69svzHUC/zhpyJZdAm3ZyExXsjHA=&lt;/th&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;20071006&lt;/td&gt;
      &lt;td&gt;787&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;11779.310&lt;/td&gt;
      &lt;td&gt;11779.310&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;46&lt;/td&gt;
      &lt;td&gt;105&lt;/td&gt;
      &lt;td&gt;26.250000&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;26890.522&lt;/td&gt;
      &lt;td&gt;6722.630500&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;104&lt;/td&gt;
      &lt;td&gt;26.000000&lt;/td&gt;
      &lt;td&gt;145&lt;/td&gt;
      &lt;td&gt;20.714286&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;36302.890&lt;/td&gt;
      &lt;td&gt;5186.127143&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.142857&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;19.571429&lt;/td&gt;
      &lt;td&gt;276&lt;/td&gt;
      &lt;td&gt;25.090909&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;55003.399&lt;/td&gt;
      &lt;td&gt;5000.309000&lt;/td&gt;
      &lt;td&gt;67&lt;/td&gt;
      &lt;td&gt;6.090909&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;2.636364&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.818182&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0.545455&lt;/td&gt;
      &lt;td&gt;188&lt;/td&gt;
      &lt;td&gt;17.090909&lt;/td&gt;
      &lt;td&gt;1425&lt;/td&gt;
      &lt;td&gt;24.568966&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;322053.197&lt;/td&gt;
      &lt;td&gt;5552.641328&lt;/td&gt;
      &lt;td&gt;275&lt;/td&gt;
      &lt;td&gt;4.741379&lt;/td&gt;
      &lt;td&gt;170&lt;/td&gt;
      &lt;td&gt;2.931034&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;1.275862&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;0.689655&lt;/td&gt;
      &lt;td&gt;1101&lt;/td&gt;
      &lt;td&gt;18.982759&lt;/td&gt;
      &lt;td&gt;2771&lt;/td&gt;
      &lt;td&gt;23.091667&lt;/td&gt;
      &lt;td&gt;120&lt;/td&gt;
      &lt;td&gt;596865.459&lt;/td&gt;
      &lt;td&gt;4973.878825&lt;/td&gt;
      &lt;td&gt;617&lt;/td&gt;
      &lt;td&gt;5.141667&lt;/td&gt;
      &lt;td&gt;347&lt;/td&gt;
      &lt;td&gt;2.891667&lt;/td&gt;
      &lt;td&gt;140&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;110&lt;/td&gt;
      &lt;td&gt;0.916667&lt;/td&gt;
      &lt;td&gt;2002&lt;/td&gt;
      &lt;td&gt;16.683333&lt;/td&gt;
      &lt;td&gt;6125&lt;/td&gt;
      &lt;td&gt;26.864035&lt;/td&gt;
      &lt;td&gt;228&lt;/td&gt;
      &lt;td&gt;1388082.365&lt;/td&gt;
      &lt;td&gt;6088.080548&lt;/td&gt;
      &lt;td&gt;1567&lt;/td&gt;
      &lt;td&gt;6.872807&lt;/td&gt;
      &lt;td&gt;538&lt;/td&gt;
      &lt;td&gt;2.359649&lt;/td&gt;
      &lt;td&gt;255&lt;/td&gt;
      &lt;td&gt;1.118421&lt;/td&gt;
      &lt;td&gt;229&lt;/td&gt;
      &lt;td&gt;1.004386&lt;/td&gt;
      &lt;td&gt;4862&lt;/td&gt;
      &lt;td&gt;21.324561&lt;/td&gt;
      &lt;td&gt;26479&lt;/td&gt;
      &lt;td&gt;43.408197&lt;/td&gt;
      &lt;td&gt;610&lt;/td&gt;
      &lt;td&gt;6661356.419&lt;/td&gt;
      &lt;td&gt;10920.256425&lt;/td&gt;
      &lt;td&gt;5362&lt;/td&gt;
      &lt;td&gt;8.790164&lt;/td&gt;
      &lt;td&gt;2650&lt;/td&gt;
      &lt;td&gt;4.344262&lt;/td&gt;
      &lt;td&gt;1323&lt;/td&gt;
      &lt;td&gt;2.168852&lt;/td&gt;
      &lt;td&gt;1318&lt;/td&gt;
      &lt;td&gt;2.160656&lt;/td&gt;
      &lt;td&gt;23024&lt;/td&gt;
      &lt;td&gt;37.744262&lt;/td&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;2831&lt;/td&gt;
      &lt;td&gt;5.213628&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5480&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;6240&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;6280&lt;/td&gt;
      &lt;td&gt;-40&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-13&lt;/td&gt;
      &lt;td&gt;2007&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.001696&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;ur0rGRoV2XJOYpNbzl5n/jBEV9PrKDwZX4QeO03gXl8=&lt;/th&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;20160822&lt;/td&gt;
      &lt;td&gt;189&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;36&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;9240.939&lt;/td&gt;
      &lt;td&gt;9240.939&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;35&lt;/td&gt;
      &lt;td&gt;371&lt;/td&gt;
      &lt;td&gt;61.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;107030.392&lt;/td&gt;
      &lt;td&gt;17838.398667&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.500000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0.166667&lt;/td&gt;
      &lt;td&gt;415&lt;/td&gt;
      &lt;td&gt;69.166667&lt;/td&gt;
      &lt;td&gt;756&lt;/td&gt;
      &lt;td&gt;68.727273&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;220080.304&lt;/td&gt;
      &lt;td&gt;20007.300364&lt;/td&gt;
      &lt;td&gt;58&lt;/td&gt;
      &lt;td&gt;5.272727&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;2.454545&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.454545&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;0.636364&lt;/td&gt;
      &lt;td&gt;843&lt;/td&gt;
      &lt;td&gt;76.636364&lt;/td&gt;
      &lt;td&gt;1766&lt;/td&gt;
      &lt;td&gt;65.407407&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;590614.385&lt;/td&gt;
      &lt;td&gt;21874.606852&lt;/td&gt;
      &lt;td&gt;138&lt;/td&gt;
      &lt;td&gt;5.111111&lt;/td&gt;
      &lt;td&gt;74&lt;/td&gt;
      &lt;td&gt;2.740741&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;0.555556&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;0.592593&lt;/td&gt;
      &lt;td&gt;2275&lt;/td&gt;
      &lt;td&gt;84.259259&lt;/td&gt;
      &lt;td&gt;5486&lt;/td&gt;
      &lt;td&gt;66.096386&lt;/td&gt;
      &lt;td&gt;83&lt;/td&gt;
      &lt;td&gt;1899764.373&lt;/td&gt;
      &lt;td&gt;22888.727386&lt;/td&gt;
      &lt;td&gt;493&lt;/td&gt;
      &lt;td&gt;5.939759&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;1.397590&lt;/td&gt;
      &lt;td&gt;44&lt;/td&gt;
      &lt;td&gt;0.530120&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;0.493976&lt;/td&gt;
      &lt;td&gt;7351&lt;/td&gt;
      &lt;td&gt;88.566265&lt;/td&gt;
      &lt;td&gt;11591&lt;/td&gt;
      &lt;td&gt;68.994048&lt;/td&gt;
      &lt;td&gt;168&lt;/td&gt;
      &lt;td&gt;3408784.787&lt;/td&gt;
      &lt;td&gt;20290.385637&lt;/td&gt;
      &lt;td&gt;1131&lt;/td&gt;
      &lt;td&gt;6.732143&lt;/td&gt;
      &lt;td&gt;198&lt;/td&gt;
      &lt;td&gt;1.178571&lt;/td&gt;
      &lt;td&gt;90&lt;/td&gt;
      &lt;td&gt;0.535714&lt;/td&gt;
      &lt;td&gt;160&lt;/td&gt;
      &lt;td&gt;0.952381&lt;/td&gt;
      &lt;td&gt;13134&lt;/td&gt;
      &lt;td&gt;78.178571&lt;/td&gt;
      &lt;td&gt;12290&lt;/td&gt;
      &lt;td&gt;69.044944&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;3576194.197&lt;/td&gt;
      &lt;td&gt;20090.978635&lt;/td&gt;
      &lt;td&gt;1290&lt;/td&gt;
      &lt;td&gt;7.247191&lt;/td&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;1.151685&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;0.556180&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;13798&lt;/td&gt;
      &lt;td&gt;77.516854&lt;/td&gt;
      &lt;td&gt;12290&lt;/td&gt;
      &lt;td&gt;69.044944&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;3576194.197&lt;/td&gt;
      &lt;td&gt;20090.978635&lt;/td&gt;
      &lt;td&gt;1290&lt;/td&gt;
      &lt;td&gt;7.247191&lt;/td&gt;
      &lt;td&gt;205&lt;/td&gt;
      &lt;td&gt;1.151685&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;0.556180&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;13798&lt;/td&gt;
      &lt;td&gt;77.516854&lt;/td&gt;
      &lt;td&gt;210&lt;/td&gt;
      &lt;td&gt;1043&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;39&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
      &lt;td&gt;6078&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;6240&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;6294&lt;/td&gt;
      &lt;td&gt;-54&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;-27&lt;/td&gt;
      &lt;td&gt;2016&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.001179&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;M/PccoJW/A9myX+eCodcY8Z4LMD1r+d6YKzUNv4PMZo=&lt;/th&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;20130610&lt;/td&gt;
      &lt;td&gt;789&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3416.639&lt;/td&gt;
      &lt;td&gt;3416.639&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;204&lt;/td&gt;
      &lt;td&gt;29.142857&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;88005.151&lt;/td&gt;
      &lt;td&gt;12572.164429&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0.714286&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.285714&lt;/td&gt;
      &lt;td&gt;395&lt;/td&gt;
      &lt;td&gt;56.428571&lt;/td&gt;
      &lt;td&gt;441&lt;/td&gt;
      &lt;td&gt;31.500000&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;168815.462&lt;/td&gt;
      &lt;td&gt;12058.247286&lt;/td&gt;
      &lt;td&gt;52&lt;/td&gt;
      &lt;td&gt;3.714286&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;2.214286&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;1.428571&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;0.428571&lt;/td&gt;
      &lt;td&gt;735&lt;/td&gt;
      &lt;td&gt;52.500000&lt;/td&gt;
      &lt;td&gt;781&lt;/td&gt;
      &lt;td&gt;26.033333&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;303585.197&lt;/td&gt;
      &lt;td&gt;10119.506567&lt;/td&gt;
      &lt;td&gt;118&lt;/td&gt;
      &lt;td&gt;3.933333&lt;/td&gt;
      &lt;td&gt;91&lt;/td&gt;
      &lt;td&gt;3.033333&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;1.366667&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;1282&lt;/td&gt;
      &lt;td&gt;42.733333&lt;/td&gt;
      &lt;td&gt;1984&lt;/td&gt;
      &lt;td&gt;27.178082&lt;/td&gt;
      &lt;td&gt;73&lt;/td&gt;
      &lt;td&gt;581820.141&lt;/td&gt;
      &lt;td&gt;7970.138918&lt;/td&gt;
      &lt;td&gt;217&lt;/td&gt;
      &lt;td&gt;2.972603&lt;/td&gt;
      &lt;td&gt;178&lt;/td&gt;
      &lt;td&gt;2.438356&lt;/td&gt;
      &lt;td&gt;69&lt;/td&gt;
      &lt;td&gt;0.945205&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;0.328767&lt;/td&gt;
      &lt;td&gt;2343&lt;/td&gt;
      &lt;td&gt;32.095890&lt;/td&gt;
      &lt;td&gt;3501&lt;/td&gt;
      &lt;td&gt;25.554745&lt;/td&gt;
      &lt;td&gt;137&lt;/td&gt;
      &lt;td&gt;932913.407&lt;/td&gt;
      &lt;td&gt;6809.586912&lt;/td&gt;
      &lt;td&gt;373&lt;/td&gt;
      &lt;td&gt;2.722628&lt;/td&gt;
      &lt;td&gt;282&lt;/td&gt;
      &lt;td&gt;2.058394&lt;/td&gt;
      &lt;td&gt;106&lt;/td&gt;
      &lt;td&gt;0.773723&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.364964&lt;/td&gt;
      &lt;td&gt;3661&lt;/td&gt;
      &lt;td&gt;26.722628&lt;/td&gt;
      &lt;td&gt;7250&lt;/td&gt;
      &lt;td&gt;26.459854&lt;/td&gt;
      &lt;td&gt;274&lt;/td&gt;
      &lt;td&gt;1818035.906&lt;/td&gt;
      &lt;td&gt;6635.167540&lt;/td&gt;
      &lt;td&gt;768&lt;/td&gt;
      &lt;td&gt;2.802920&lt;/td&gt;
      &lt;td&gt;504&lt;/td&gt;
      &lt;td&gt;1.839416&lt;/td&gt;
      &lt;td&gt;196&lt;/td&gt;
      &lt;td&gt;0.715328&lt;/td&gt;
      &lt;td&gt;116&lt;/td&gt;
      &lt;td&gt;0.423358&lt;/td&gt;
      &lt;td&gt;7089&lt;/td&gt;
      &lt;td&gt;25.872263&lt;/td&gt;
      &lt;td&gt;17809&lt;/td&gt;
      &lt;td&gt;27.440678&lt;/td&gt;
      &lt;td&gt;649&lt;/td&gt;
      &lt;td&gt;4533034.736&lt;/td&gt;
      &lt;td&gt;6984.645202&lt;/td&gt;
      &lt;td&gt;1352&lt;/td&gt;
      &lt;td&gt;2.083205&lt;/td&gt;
      &lt;td&gt;937&lt;/td&gt;
      &lt;td&gt;1.443760&lt;/td&gt;
      &lt;td&gt;336&lt;/td&gt;
      &lt;td&gt;0.517720&lt;/td&gt;
      &lt;td&gt;198&lt;/td&gt;
      &lt;td&gt;0.305085&lt;/td&gt;
      &lt;td&gt;17432&lt;/td&gt;
      &lt;td&gt;26.859784&lt;/td&gt;
      &lt;td&gt;840&lt;/td&gt;
      &lt;td&gt;3631&lt;/td&gt;
      &lt;td&gt;4.322619&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;41&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;99&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3.300000&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5479&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;24&lt;/td&gt;
      &lt;td&gt;6264&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;6293&lt;/td&gt;
      &lt;td&gt;-29&lt;/td&gt;
      &lt;td&gt;-4&lt;/td&gt;
      &lt;td&gt;-25&lt;/td&gt;
      &lt;td&gt;2013&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;BZbN3U+ghA0lwOA34yF/GNHbJb73T48nEZGHc4bcikc=&lt;/th&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;20080410&lt;/td&gt;
      &lt;td&gt;788&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;25&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;13113.138&lt;/td&gt;
      &lt;td&gt;13113.138&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;93&lt;/td&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;16.833333&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;33808.385&lt;/td&gt;
      &lt;td&gt;5634.730833&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;4.833333&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;2.000000&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;165&lt;/td&gt;
      &lt;td&gt;27.500000&lt;/td&gt;
      &lt;td&gt;157&lt;/td&gt;
      &lt;td&gt;13.083333&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;48485.571&lt;/td&gt;
      &lt;td&gt;4040.464250&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;3.333333&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;0.333333&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;1.166667&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;0.750000&lt;/td&gt;
      &lt;td&gt;219&lt;/td&gt;
      &lt;td&gt;18.250000&lt;/td&gt;
      &lt;td&gt;484&lt;/td&gt;
      &lt;td&gt;21.043478&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;139573.866&lt;/td&gt;
      &lt;td&gt;6068.428957&lt;/td&gt;
      &lt;td&gt;97&lt;/td&gt;
      &lt;td&gt;4.217391&lt;/td&gt;
      &lt;td&gt;21&lt;/td&gt;
      &lt;td&gt;0.913043&lt;/td&gt;
      &lt;td&gt;23&lt;/td&gt;
      &lt;td&gt;1.000000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;0.869565&lt;/td&gt;
      &lt;td&gt;554&lt;/td&gt;
      &lt;td&gt;24.086957&lt;/td&gt;
      &lt;td&gt;1416&lt;/td&gt;
      &lt;td&gt;22.838710&lt;/td&gt;
      &lt;td&gt;62&lt;/td&gt;
      &lt;td&gt;380409.666&lt;/td&gt;
      &lt;td&gt;6135.639774&lt;/td&gt;
      &lt;td&gt;213&lt;/td&gt;
      &lt;td&gt;3.435484&lt;/td&gt;
      &lt;td&gt;51&lt;/td&gt;
      &lt;td&gt;0.822581&lt;/td&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;0.806452&lt;/td&gt;
      &lt;td&gt;59&lt;/td&gt;
      &lt;td&gt;0.951613&lt;/td&gt;
      &lt;td&gt;1583&lt;/td&gt;
      &lt;td&gt;25.532258&lt;/td&gt;
      &lt;td&gt;4484&lt;/td&gt;
      &lt;td&gt;30.093960&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1179486.041&lt;/td&gt;
      &lt;td&gt;7916.013698&lt;/td&gt;
      &lt;td&gt;791&lt;/td&gt;
      &lt;td&gt;5.308725&lt;/td&gt;
      &lt;td&gt;162&lt;/td&gt;
      &lt;td&gt;1.087248&lt;/td&gt;
      &lt;td&gt;143&lt;/td&gt;
      &lt;td&gt;0.959732&lt;/td&gt;
      &lt;td&gt;259&lt;/td&gt;
      &lt;td&gt;1.738255&lt;/td&gt;
      &lt;td&gt;4752&lt;/td&gt;
      &lt;td&gt;31.892617&lt;/td&gt;
      &lt;td&gt;8142&lt;/td&gt;
      &lt;td&gt;26.607843&lt;/td&gt;
      &lt;td&gt;306&lt;/td&gt;
      &lt;td&gt;2174747.697&lt;/td&gt;
      &lt;td&gt;7107.018618&lt;/td&gt;
      &lt;td&gt;1684&lt;/td&gt;
      &lt;td&gt;5.503268&lt;/td&gt;
      &lt;td&gt;343&lt;/td&gt;
      &lt;td&gt;1.120915&lt;/td&gt;
      &lt;td&gt;312&lt;/td&gt;
      &lt;td&gt;1.019608&lt;/td&gt;
      &lt;td&gt;519&lt;/td&gt;
      &lt;td&gt;1.696078&lt;/td&gt;
      &lt;td&gt;8373&lt;/td&gt;
      &lt;td&gt;27.362745&lt;/td&gt;
      &lt;td&gt;12775&lt;/td&gt;
      &lt;td&gt;20.942623&lt;/td&gt;
      &lt;td&gt;610&lt;/td&gt;
      &lt;td&gt;3287076.077&lt;/td&gt;
      &lt;td&gt;5388.649307&lt;/td&gt;
      &lt;td&gt;2773&lt;/td&gt;
      &lt;td&gt;4.545902&lt;/td&gt;
      &lt;td&gt;602&lt;/td&gt;
      &lt;td&gt;0.986885&lt;/td&gt;
      &lt;td&gt;543&lt;/td&gt;
      &lt;td&gt;0.890164&lt;/td&gt;
      &lt;td&gt;926&lt;/td&gt;
      &lt;td&gt;1.518033&lt;/td&gt;
      &lt;td&gt;12292&lt;/td&gt;
      &lt;td&gt;20.150820&lt;/td&gt;
      &lt;td&gt;480&lt;/td&gt;
      &lt;td&gt;3278&lt;/td&gt;
      &lt;td&gt;6.829167&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;34&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;149&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4.966667&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;27&lt;/td&gt;
      &lt;td&gt;6267&lt;/td&gt;
      &lt;td&gt;2015&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5479&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;28&lt;/td&gt;
      &lt;td&gt;6268&lt;/td&gt;
      &lt;td&gt;2017&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;31&lt;/td&gt;
      &lt;td&gt;6299&lt;/td&gt;
      &lt;td&gt;-31&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;-32&lt;/td&gt;
      &lt;td&gt;2008&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000204&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Validation&lt;/h3&gt;
&lt;p&gt;We're working out the following to make sure that the nubmers for the reacquistion marketing spend make sense in the context of our business:
    * Total marketing spend
    * Marketing spend per customer (all customers)
    * Marketing spend per customer with probability of churn (indicated as churn by the model)
    * Comparison with the earnings from the sample&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Validation&lt;/span&gt;
&lt;span class="c1"&gt;# What is the total proposed marketing spend? &lt;/span&gt;
&lt;span class="n"&gt;tpms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# Averaging (per user)&lt;/span&gt;
&lt;span class="n"&gt;tpmsa&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Averaging (for users marked for churn)&lt;/span&gt;
&lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count_nonzero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;tpmsac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;Total proposed marketing spend (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Total number of users in the sample: &lt;/span&gt;&lt;span class="si"&gt;{:d}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Average Reacquisition/retention marketing spend/user (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Total number of users projected to churn (any probability): &lt;/span&gt;&lt;span class="si"&gt;{:d}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Average Reacquisition/rention marketing spend for users marked to churn (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;tpmsa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;tpmsac&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Total proposed marketing spend (NTD): NT$77,025&lt;/span&gt;
&lt;span class="err"&gt;Total number of users in the sample: 11681&lt;/span&gt;
&lt;span class="err"&gt;Average Reacquisition/retention marketing spend/user (NTD): NT$6.5940&lt;/span&gt;
&lt;span class="err"&gt;Total number of users projected to churn (any probability): 705&lt;/span&gt;
&lt;span class="err"&gt;Average Reacquisition/rention marketing spend for users marked to churn (NTD): NT$109.2551&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Validation&lt;/span&gt;
&lt;span class="c1"&gt;# How does the marketing spend compare to the projected earnings from this sample&lt;/span&gt;

&lt;span class="c1"&gt;# Ratio of marketing(per user) to topline for this sample&lt;/span&gt;
&lt;span class="n"&gt;rms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;altv3y&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;Projected 3 year earnings from users in dev data (per user) (NTD): NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Ratio of Reacquistion/Retention marketing to topline from users in dev data: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;altv3y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Projected 3 year earnings from users in dev data (per user) (NTD): NT$4,975.1425&lt;/span&gt;
&lt;span class="err"&gt;Ratio of Reacquistion/Retention marketing to topline from users in dev data: 0.0013&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Visual for marketing spend - amoung spent/day by all the customers&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Marketing spend - amount spent/day by the users&lt;/span&gt;
&lt;span class="c1"&gt;# plt.scatter(marketing_data[&amp;#39;amount_paid_per_day&amp;#39;], marketing_data[&amp;#39;proposed_spend&amp;#39;], s=4,&lt;/span&gt;
           &lt;span class="c1"&gt;#c=cm.hot(marketing_data[&amp;#39;proposed_spend&amp;#39;]))&lt;/span&gt;

&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Amount paid per day by a customer (NTD)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proposed retention marketing spend per customer (NTD)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Retention marketing spend - Amount paid per day by a customer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amount_paid_per_day&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_190_0.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The plot above looks at proposed retention spend by customer against the amount paid per day by customer. Some scatter exists in the plot showing that not all members at a specific NTD/day price level are equal in terms of risk of churn. The proposed retention spend is calculated over the three year (assumed lifetime) of the customer (so at a level of 100 NTD, the proposed incentive per day would be ~0.09 NTD). &lt;/p&gt;
&lt;h4&gt;Visual for marketing spend in the context of the total number of customers&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Visual of spend in context of the number of users&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proposed retention marketing spend spread among all customers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Proposed retention marketing spend per customer&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Number of customers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_193_0.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;From the plot above, we can see that for most users, the proposed spend is 0, due to the predicted probability that they won't churn, and therefore no incentives should be offered. This makes economic sense as our dataset only contains 6% churn, and we cannot afford to offer incentives to too many members if their unlikely to churn. &lt;/p&gt;
&lt;p&gt;We do see that there is some data for proposed spend between 50-150 which is consistent with the former scatter plot, however overwhemingly the proposed spend on a customer is 0 NTD (New Taiwan Dollar). &lt;/p&gt;
&lt;h4&gt;Visual for marketing spend per user&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Scatter Plot to Show Proposed Spend per User&lt;/span&gt;
&lt;span class="n"&gt;sorted_marketing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;marketing_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sorted_marketing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted_marketing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;sorted_marketing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;sorted_marketing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted_marketing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sorted_marketing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sorted_marketing&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;proposed_spend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xlabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Member - re-indexed to integer for plotting purposes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ylabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Maximum proposed spend on each user (NTD)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Sorted proposed spend on user over 3 year lifetime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;Text(0.5,1,&amp;#39;Sorted proposed spend on user over 3 year lifetime&amp;#39;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img src="images/churn/output_196_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;The plot above looks at the sorted proposed spend for users. The plot has been sorted in order to determine if there are any insights that can be made by looking at proposed spend levels. We can see near the 85 NTD (New Taiwan Dollar) mark there is a slight plateau, which could indicate a good level of incentive to offer users. &lt;/p&gt;
&lt;p&gt;Beyond the slight plateau the maximum proposed spend appears to increase approximately linearly over the range of 75 to 130 NTD. Indication from this plot shows that users who's proposed spend is &amp;gt;130 may not be worthwhile pursuing due to the high cost of incentives. &lt;/p&gt;
&lt;p&gt;The proposed spend is the maximum spend allocated over the customer lifetime (assumed 3 years) and would be distributed through discounts and incentives. It may be possible to prevent churn by offering less than this maximum spend amount, which is an opportunity for a future ML model. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Recap of key metrics&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="s1"&gt;------&amp;gt; Key metrics from the model:&lt;/span&gt;

&lt;span class="s1"&gt;Total number of users in the sample: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Total number of users projected to churn (any probability): &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;Total proposed marketing spend: NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Total revenue (3 year) from all users in the sample: NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Total revenue (3 year) from users at risk in the sample: NT$&lt;/span&gt;&lt;span class="si"&gt;{:,.0f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;Average Reacquisition/retention marketing spend/user: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Average Reacquisition/retention marketing spend for users marked to churn: &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;Ratio of Reacquistion marketing spend to revenue from all users: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;
&lt;span class="s1"&gt;Ratio of Reacquistion marketing spend to reveuene from at risk users: &lt;/span&gt;&lt;span class="si"&gt;{:.4f}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;

&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;altv3y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
            &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;altv3y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tpmsa&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tpmsac&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
           &lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;altv3y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;predictions&lt;/span&gt;&lt;span class="p"&gt;))),&lt;/span&gt;
           &lt;span class="n"&gt;tpms&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;altv3y&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;------&amp;gt; Key metrics from the model:&lt;/span&gt;

&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11681&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;projected&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;churn&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;any&lt;/span&gt; &lt;span class="n"&gt;probability&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="mi"&gt;705&lt;/span&gt;

&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;proposed&lt;/span&gt; &lt;span class="n"&gt;marketing&lt;/span&gt; &lt;span class="n"&gt;spend&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NT$77&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;024&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;revenue&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NT$58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;114&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;639&lt;/span&gt;
&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;revenue&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;risk&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;NT$3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;507&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;475&lt;/span&gt;

&lt;span class="n"&gt;Average&lt;/span&gt; &lt;span class="n"&gt;Reacquisition&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;retention&lt;/span&gt; &lt;span class="n"&gt;marketing&lt;/span&gt; &lt;span class="n"&gt;spend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Average&lt;/span&gt; &lt;span class="n"&gt;Reacquisition&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;retention&lt;/span&gt; &lt;span class="n"&gt;marketing&lt;/span&gt; &lt;span class="n"&gt;spend&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="n"&gt;marked&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;churn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;109&lt;/span&gt;

&lt;span class="n"&gt;Ratio&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Reacquistion&lt;/span&gt; &lt;span class="n"&gt;marketing&lt;/span&gt; &lt;span class="n"&gt;spend&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;revenue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0013&lt;/span&gt;
&lt;span class="n"&gt;Ratio&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;Reacquistion&lt;/span&gt; &lt;span class="n"&gt;marketing&lt;/span&gt; &lt;span class="n"&gt;spend&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;reveuene&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;risk&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0220&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Economic Impact Summary&lt;/h2&gt;
&lt;p&gt;We're able to create a very usable model for the retention/reacquistion effort in the business.  In summary, of our NT\$58M 3-year revenue from our customer base, we estimate we will lose NT\$3.5M to churn.  Accounting for the probability that users will actually churn, the team recommends spending NT\$77K on trying to retain these users.  In the marketing data, the NT\$77K is broken down by user, however, we would recommend a discount program with a few tiers, as opposed to custom offers for every user.&lt;/p&gt;
&lt;p&gt;The marketing data base keeps most original customer parameters and adds the following for use in business planning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;predictions - Will the customer churn (1 will churn)&lt;/li&gt;
&lt;li&gt;predctions_prob - What's the probability of the customer leaving (Higher is bad)&lt;/li&gt;
&lt;li&gt;proposed_spend - We can spend up to this value to keep this customer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our calculations (mostly for validation in the report) show that the retention marketing spend is inline with the revenue opportunity for the business. Key metrics are calculated again above.&lt;/p&gt;
&lt;p&gt;One caveat to our assertion is effectiveness of reacquistion marketing spend. Feedback on that could influence the value of our spend as we put the model into production.&lt;/p&gt;
&lt;p&gt;Another thing to note in our model is that we're proposing a spend for every customer at risk. Reality may be that we cannot save customers above 80% probability of churn. Should we invest in these users?&lt;/p&gt;
&lt;h1&gt;6. Final Insights and Takeaways&lt;/h1&gt;
&lt;p&gt;Here are our insights and commentary from our analysis:&lt;/p&gt;
&lt;h2&gt;Predictive Modeling Summary and Future Considerations&lt;/h2&gt;
&lt;p&gt;As discussed in the modeling section, the final model had a recall performance of 98.3% (on the test data), correctly predicting almost every user who actually churned (408 of 415 users), and also correctly predicting amost every user who would actually stay (6,444 of 6,609 users).&lt;/p&gt;
&lt;p&gt;Given the strong performance of the current model, any future enhancements would need to balance the cost of making those enhancements against the potential benefits of retaining a few more users.  That said, the team thinks the best place to find additional gains in the model is by engineering additional features from the users, potentially from reviewing user listening habits such as music genre.&lt;/p&gt;
&lt;h2&gt;Economic Impact&lt;/h2&gt;
&lt;p&gt;We created and validated a model to guide retention program spending for customers at the risk of churn (&lt;strong&gt;RAC = .75 * CAC * POC * (LTV/OLTV)&lt;/strong&gt; where RAC is the Reacquistion cost or retention spending/customer, CAC is the cost of customer acquistion, LTV is the lifetime value of a customer and OLTV is the optimum lifetime value (the revenue from our best customer). &lt;/p&gt;
&lt;p&gt;The model works with a spend ceiling (Customer acquisiton cost) that's about 10% of the lifetime value of an average customer. We stay below this limit by reducing the amount by value of the customer and her probability of churn. &lt;/p&gt;
&lt;p&gt;A sample run with our development data shows a total marketing spend between 77K to protect ~3.5 M of revenue. The model shows how this amount can be divvied up among the customers (in the marketing data frame).&lt;/p&gt;
&lt;p&gt;A production version of this model can guide the business on both the candidates and amount for retention spending among the customer base.&lt;/p&gt;
&lt;h2&gt;Productization and Future Development&lt;/h2&gt;
&lt;h3&gt;Implementation as a pipeline, performance testing and feedback loop&lt;/h3&gt;
&lt;p&gt;Our assessment is that at least the following would have to be done to put the model into production:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;Implementation&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;quite&lt;/span&gt; &lt;span class="n"&gt;efficient&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;implemented&lt;/span&gt; &lt;span class="n"&gt;offline&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;near&lt;/span&gt; &lt;span class="n"&gt;realtime&lt;/span&gt; &lt;span class="k"&gt;implementation&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;offline&lt;/span&gt; &lt;span class="k"&gt;implementation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;picked&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;backup&lt;/span&gt; &lt;span class="n"&gt;databases&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;pumped&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;system&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="n"&gt;HDFS&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Calculations&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;done&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;compute&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;Hadoop&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="n"&gt;SPARK&lt;/span&gt;   
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;realtime&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;built&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;duplicating&lt;/span&gt; &lt;span class="k"&gt;usage&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;KAFKA&lt;/span&gt;&lt;span class="c1"&gt;---&amp;gt;SPARK---&amp;gt;HDFS pipeline for writing and then batch processing similar to above&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Performance&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Further&lt;/span&gt; &lt;span class="n"&gt;performance&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;recommended&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;both&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;offline&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;realtime&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Our&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt; &lt;span class="n"&gt;subset&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;laptop&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;reflect&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;needs&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;enterprise&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Feedback&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;feedback&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;experiments&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;could&lt;/span&gt; &lt;span class="n"&gt;increase&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;efficacy&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Predictions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Feedback&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;predictions&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;implemented&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;having&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt; &lt;span class="n"&gt;control&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;retention&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Retention&lt;/span&gt; &lt;span class="n"&gt;spending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Feedback&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;retention&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;directly&lt;/span&gt; &lt;span class="n"&gt;come&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="k"&gt;In&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;simplest&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;just&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;customer&lt;/span&gt; &lt;span class="n"&gt;stayed&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;service&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;Models&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;calibration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Testing&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;calibration&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;needed&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;once&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The goal of above would be to maintain or improve the performance vs accuracy/recall for the model while rolling it out to growing customer cohorts. From this analysis, we hope to provide insight into customers that have a potential to churn, and recommend incentives for those customers to prevent churn. We believe that the future work listed above will help to make a significant impact in business operations which will generate more revenue and profit for the company.&lt;/p&gt;
&lt;p&gt;An additional topic that could be explored in the future is understanding at what incentive level a user won't churn. Here we present the maximum incentive spend (over a 3 year span) for a customer, however from a business sens we would like to offer the minimum incentive to prevent churn. This model can build on what has alredy been developed here and will require additional data to capture incentives that have previously been offered and the outcome of the offering. &lt;/p&gt;
&lt;h1&gt;Initial Data Filter and QC&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;google.datalab.bigquery&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;bq&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pasted here is the code that was initially ran. As mentioned in the report, our dataset is large (~31GB combined tables) and couldn't all be ran on a single computer. For the sake of this analysis, we have filtered the data down to a mangageable size (~1.5GB). Additionally, we saw initially that our dataset contained only 6% churn. In order to help improve our model, we wanted to have a filtered dataset that contained a 50/50 split between churn and not churn. &lt;/p&gt;
&lt;p&gt;The methodology to get this data into a useable format was the following:
    - Upload data into google cloud storage
    - Utilize Google BigQuery to run SQL statement against the datasets
    - Export the datasets as CSV files to be managed locally&lt;/p&gt;
&lt;p&gt;For our dataset we wanted to have approximately 100k members (total dataset size is ~993k members so approximately 10% of our data). Utilizing a 50/50 split we therefore wantedk 50k members who did churn and 50k members who didn't churn. In order to filter the tables we first ran a query to get 50k members who did churn in the labels table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;SELECT * FROM [w207_kkbox_bq_data.labels] WHERE (RAND(5) &amp;lt; 50000/(SELECT COUNT(*) FROM [w207_kkbox_bq_data.labels] WHERE is_churn = 0) AND is_churn = 0)&lt;/span&gt;
&lt;span class="err"&gt;SELECT * FROM [w207_kkbox_bq_data.labels] WHERE (RAND(5) &amp;lt; 50000/(SELECT COUNT(*) FROM [w207_kkbox_bq_data.labels] WHERE is_churn = 0) AND is_churn = 1)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These two tables were written to cloud storage and provided the baseline of the members that we would keep when querying other tables. The labels table contains member ID as well as the is_churn (dependent) variable. We now utilize these two tables to query the other datasets joining on the members ID [we kept these two tables separate and then combined the is_churn = 0 and is_churn = 1 into a combined table at the end, in hindsight it would have been more efficient to combine the labels table first]. &lt;/p&gt;
&lt;p&gt;Members Table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;SELECT members.*  FROM [w207_kkbox_bq_data.members] as members INNER JOIN [w207_kkbox_bq_data.labels_filtered_50k_churn_1] as lab ON members.msno = lab.msno&lt;/span&gt;
&lt;span class="err"&gt;SELECT members.*  FROM [w207_kkbox_bq_data.members] as members INNER JOIN [w207_kkbox_bq_data.labels_filtered_50k_churn_0] as lab ON members.msno = lab.msno&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Transactions Table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;SELECT transactions.*  FROM [w207_kkbox_bq_data.transactions] as transactions INNER JOIN [w207_kkbox_bq_data.labels_filtered_50k_churn_0] as lab ON transactions.msno = lab.msno&lt;/span&gt;
&lt;span class="err"&gt;SELECT transactions.*  FROM [w207_kkbox_bq_data.transactions] as transactions INNER JOIN [w207_kkbox_bq_data.labels_filtered_50k_churn_1] as lab ON transactions.msno = lab.msno&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;User_Logs Table:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;    SELECT user_logs.*  FROM [w207_kkbox_bq_data.user_logs] as user_logs INNER JOIN [w207_kkbox_bq_data.labels_filtered_50k_churn_1] as lab ON user_logs.msno = lab.msno&lt;/span&gt;
&lt;span class="err"&gt;    SELECT user_logs.*  FROM [w207_kkbox_bq_data.user_logs] as user_logs INNER JOIN [w207_kkbox_bq_data.labels_filtered_50k_churn_0] as lab ON user_logs.msno = lab.msno&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this methodology there was two tables (is_churn = 0 and is_churn = 1) for each table in the original dataset. We then combined/appended the two tables back into a singular table and exported to csv (labels_filtered.csv, members_filtered.csv, transactions_filtered.csv, user_logs_filtered.csv). From these local files we then began development towards predcting churn. &lt;/p&gt;
&lt;p&gt;While we moved ahead with this filtered dataset, we also wanted to perform quick EDA on the entire dataset to the filtered dataset, to compare and contrast some of the features in the dataset. We understand that we artificially inflated the is_churn = 1 statistic for purposes of model training, therefore there will be some changes between the filtered and original dataset. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;is_churn_large&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;is_churn_large&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="10_152436758645"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;f0_&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0.06392287077349786&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.3s, cached, job: job_WFvTJUNTiVU0lg8eZM7HiKzbFhYR)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!10_152436758645', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 0.06392287077349786}]}], "cols": [{"label": "f0_", "id": "f0_", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 0, fields: 'f0_'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;is_churn_small&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_churn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;labels_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;labels&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;is_churn_small&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="11_152436758857"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;f0_&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0.5005559729526672&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.1s, cached, job: job_6qccT3EvuDYAbLt8e7bMXy_rQuJC)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!11_152436758857', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 0.5005559729526672}]}], "cols": [{"label": "f0_", "id": "f0_", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 9, fields: 'f0_'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;Here we look at the proportion of is_churn data. We can see that we manipulated the churn percentage in the filtered dataset. This was intentional in order to create an approximate even split between is churn and is_not_churn to benefit the model training and increase the number of examples of is_churn (since our original dataset only contains 6% is_churn). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;cities&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;population&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; 
&lt;span class="n"&gt;GROUP&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="12_152436759069"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;city&lt;/th&gt;&lt;th&gt;population&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;4804326&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;385069&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;47639&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;135200&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;246848&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;320978&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;210407&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;89940&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;45975&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;190213&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;27772&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;32482&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;47489&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;38039&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;66843&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;5092&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;30837&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;11610&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;27282&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;1199&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;4233&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 21, time: 0.1s, cached, job: job_VRruJOzjmzBAePlRp8ei86w2l3uB)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!12_152436759069', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 1}, {"v": 4804326}]}, {"c": [{"v": 5}, {"v": 385069}]}, {"c": [{"v": 9}, {"v": 47639}]}, {"c": [{"v": 6}, {"v": 135200}]}, {"c": [{"v": 4}, {"v": 246848}]}, {"c": [{"v": 13}, {"v": 320978}]}, {"c": [{"v": 22}, {"v": 210407}]}, {"c": [{"v": 14}, {"v": 89940}]}, {"c": [{"v": 8}, {"v": 45975}]}, {"c": [{"v": 15}, {"v": 190213}]}, {"c": [{"v": 17}, {"v": 27772}]}, {"c": [{"v": 10}, {"v": 32482}]}, {"c": [{"v": 11}, {"v": 47489}]}, {"c": [{"v": 18}, {"v": 38039}]}, {"c": [{"v": 12}, {"v": 66843}]}, {"c": [{"v": 16}, {"v": 5092}]}, {"c": [{"v": 21}, {"v": 30837}]}, {"c": [{"v": 7}, {"v": 11610}]}, {"c": [{"v": 3}, {"v": 27282}]}, {"c": [{"v": 19}, {"v": 1199}]}, {"c": [{"v": 20}, {"v": 4233}]}], "cols": [{"label": "city", "id": "city", "type": "number"}, {"label": "population", "id": "population", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 10, fields: 'city,population'},
        0,
        21);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;cities&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;population&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqgc-container"&gt;

  &lt;div class="bqgc " id="4_152436759091"&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;

&lt;script&gt;

  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });

  require(['datalab/charting',
           'datalab/element!4_152436759091',
           'base/js/events',
           'datalab/style!/nbextensions/gcpdatalab/charting.css'
          ],
    function(charts, dom, events) {
      charts.render(
          'gcharts',
          dom,
          events,
          'columns',
          [],
          {"rows": [{"c": [{"v": 1}, {"v": 4804326}]}, {"c": [{"v": 5}, {"v": 385069}]}, {"c": [{"v": 9}, {"v": 47639}]}, {"c": [{"v": 6}, {"v": 135200}]}, {"c": [{"v": 4}, {"v": 246848}]}, {"c": [{"v": 13}, {"v": 320978}]}, {"c": [{"v": 22}, {"v": 210407}]}, {"c": [{"v": 14}, {"v": 89940}]}, {"c": [{"v": 8}, {"v": 45975}]}, {"c": [{"v": 15}, {"v": 190213}]}, {"c": [{"v": 17}, {"v": 27772}]}, {"c": [{"v": 10}, {"v": 32482}]}, {"c": [{"v": 11}, {"v": 47489}]}, {"c": [{"v": 18}, {"v": 38039}]}, {"c": [{"v": 12}, {"v": 66843}]}, {"c": [{"v": 16}, {"v": 5092}]}, {"c": [{"v": 21}, {"v": 30837}]}, {"c": [{"v": 7}, {"v": 11610}]}, {"c": [{"v": 3}, {"v": 27282}]}, {"c": [{"v": 19}, {"v": 1199}]}, {"c": [{"v": 20}, {"v": 4233}]}], "cols": [{"label": "city", "id": "city", "type": "number"}, {"label": "population", "id": "population", "type": "number"}]},
          {},
          {"source_index": 1, "fields": "city,population", "name": 1},
          0,
          21);
      }
    );
&lt;/script&gt;

&lt;p&gt;&lt;img src="images/churn/output_214_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;cities&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;members_city&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members_msno&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;population&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; 
&lt;span class="n"&gt;GROUP&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cities&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="13_152436759488"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;city&lt;/th&gt;&lt;th&gt;population&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;40639&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;763&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;5670&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;8469&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;13&lt;/td&gt;&lt;td&gt;11012&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;14&lt;/td&gt;&lt;td&gt;2273&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;15&lt;/td&gt;&lt;td&gt;5032&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;937&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;12&lt;/td&gt;&lt;td&gt;1395&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;22&lt;/td&gt;&lt;td&gt;4825&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;290&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;3113&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;657&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;17&lt;/td&gt;&lt;td&gt;581&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;1021&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;16&lt;/td&gt;&lt;td&gt;118&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;1107&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;900&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;584&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;76&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;19&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 21, time: 0.2s, cached, job: job_gV83pX9lLCc3jSdGZhB1sEsQFWW0)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!13_152436759488', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 1}, {"v": 40639}]}, {"c": [{"v": 10}, {"v": 763}]}, {"c": [{"v": 4}, {"v": 5670}]}, {"c": [{"v": 5}, {"v": 8469}]}, {"c": [{"v": 13}, {"v": 11012}]}, {"c": [{"v": 14}, {"v": 2273}]}, {"c": [{"v": 15}, {"v": 5032}]}, {"c": [{"v": 8}, {"v": 937}]}, {"c": [{"v": 12}, {"v": 1395}]}, {"c": [{"v": 22}, {"v": 4825}]}, {"c": [{"v": 7}, {"v": 290}]}, {"c": [{"v": 6}, {"v": 3113}]}, {"c": [{"v": 21}, {"v": 657}]}, {"c": [{"v": 17}, {"v": 581}]}, {"c": [{"v": 11}, {"v": 1021}]}, {"c": [{"v": 16}, {"v": 118}]}, {"c": [{"v": 9}, {"v": 1107}]}, {"c": [{"v": 18}, {"v": 900}]}, {"c": [{"v": 3}, {"v": 584}]}, {"c": [{"v": 20}, {"v": 76}]}, {"c": [{"v": 19}, {"v": 11}]}], "cols": [{"label": "city", "id": "city", "type": "number"}, {"label": "population", "id": "population", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 11, fields: 'city,population'},
        0,
        21);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;cities&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;population&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqgc-container"&gt;

  &lt;div class="bqgc " id="5_152436759510"&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;

&lt;script&gt;

  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });

  require(['datalab/charting',
           'datalab/element!5_152436759510',
           'base/js/events',
           'datalab/style!/nbextensions/gcpdatalab/charting.css'
          ],
    function(charts, dom, events) {
      charts.render(
          'gcharts',
          dom,
          events,
          'columns',
          [],
          {"rows": [{"c": [{"v": 1}, {"v": 40639}]}, {"c": [{"v": 10}, {"v": 763}]}, {"c": [{"v": 4}, {"v": 5670}]}, {"c": [{"v": 5}, {"v": 8469}]}, {"c": [{"v": 13}, {"v": 11012}]}, {"c": [{"v": 14}, {"v": 2273}]}, {"c": [{"v": 15}, {"v": 5032}]}, {"c": [{"v": 8}, {"v": 937}]}, {"c": [{"v": 12}, {"v": 1395}]}, {"c": [{"v": 22}, {"v": 4825}]}, {"c": [{"v": 7}, {"v": 290}]}, {"c": [{"v": 6}, {"v": 3113}]}, {"c": [{"v": 21}, {"v": 657}]}, {"c": [{"v": 17}, {"v": 581}]}, {"c": [{"v": 11}, {"v": 1021}]}, {"c": [{"v": 16}, {"v": 118}]}, {"c": [{"v": 9}, {"v": 1107}]}, {"c": [{"v": 18}, {"v": 900}]}, {"c": [{"v": 3}, {"v": 584}]}, {"c": [{"v": 20}, {"v": 76}]}, {"c": [{"v": 19}, {"v": 11}]}], "cols": [{"label": "city", "id": "city", "type": "number"}, {"label": "population", "id": "population", "type": "number"}]},
          {},
          {"source_index": 1, "fields": "city,population", "name": 1},
          0,
          21);
      }
    );
&lt;/script&gt;

&lt;p&gt;&lt;img src="images/churn/output_217_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;We can see that there is one city (labeled city = 1 that uses kkbox service far more than any other city accross the geographical area that kkbox is used. Comparing the two datasets, we see that overall city one has a higher proportion of the total members in the original dataset compared to the filtered. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;city_renew&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CAST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_auto_renew&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;FLOAT64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;renew_by_city&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;
&lt;span class="n"&gt;INNER&lt;/span&gt; &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;
&lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;msno&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;msno&lt;/span&gt;
&lt;span class="n"&gt;GROUP&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;
&lt;span class="n"&gt;ORDER&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;renew_by_city&lt;/span&gt; &lt;span class="n"&gt;DESC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;city_renew&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;renew_by_city&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqgc-container"&gt;

  &lt;div class="bqgc " id="6_152436759709"&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;

&lt;script&gt;

  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });

  require(['datalab/charting',
           'datalab/element!6_152436759709',
           'base/js/events',
           'datalab/style!/nbextensions/gcpdatalab/charting.css'
          ],
    function(charts, dom, events) {
      charts.render(
          'gcharts',
          dom,
          events,
          'columns',
          [],
          {"rows": [{"c": [{"v": 1}, {"v": 0.8945960127765824}]}, {"c": [{"v": 14}, {"v": 0.8189751372584029}]}, {"c": [{"v": 16}, {"v": 0.8168234643054787}]}, {"c": [{"v": 17}, {"v": 0.8127863844643247}]}, {"c": [{"v": 7}, {"v": 0.8071678266620477}]}, {"c": [{"v": 13}, {"v": 0.8046112985334092}]}, {"c": [{"v": 4}, {"v": 0.7876644693624822}]}, {"c": [{"v": 5}, {"v": 0.7868372006362852}]}, {"c": [{"v": 22}, {"v": 0.7864741596560252}]}, {"c": [{"v": 15}, {"v": 0.7863995501572723}]}, {"c": [{"v": 18}, {"v": 0.781381180189894}]}, {"c": [{"v": 19}, {"v": 0.7798003523194363}]}, {"c": [{"v": 20}, {"v": 0.779194753142649}]}, {"c": [{"v": 11}, {"v": 0.7785532844289343}]}, {"c": [{"v": 6}, {"v": 0.7748307372423409}]}, {"c": [{"v": 10}, {"v": 0.7684719825969545}]}, {"c": [{"v": 3}, {"v": 0.7579729978471905}]}, {"c": [{"v": 12}, {"v": 0.7488124303143071}]}, {"c": [{"v": 8}, {"v": 0.7483064937021473}]}, {"c": [{"v": 21}, {"v": 0.7167859733215604}]}, {"c": [{"v": 9}, {"v": 0.6872863817093813}]}], "cols": [{"label": "city", "id": "city", "type": "number"}, {"label": "renew_by_city", "id": "renew_by_city", "type": "number"}]},
          {},
          {"source_index": 2, "fields": "city,renew_by_city", "name": 2},
          0,
          21);
      }
    );
&lt;/script&gt;

&lt;p&gt;&lt;img src="images/churn/output_220_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;city_renew&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_city&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CAST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transactions_is_auto_renew&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;FLOAT64&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;renew_by_city&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;
&lt;span class="n"&gt;INNER&lt;/span&gt; &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transactions_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;
&lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_msno&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transactions_msno&lt;/span&gt;
&lt;span class="n"&gt;GROUP&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;
&lt;span class="n"&gt;ORDER&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;renew_by_city&lt;/span&gt; &lt;span class="n"&gt;DESC&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;city_renew&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;renew_by_city&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqgc-container"&gt;

  &lt;div class="bqgc " id="7_152436760604"&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;

&lt;script&gt;

  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });

  require(['datalab/charting',
           'datalab/element!7_152436760604',
           'base/js/events',
           'datalab/style!/nbextensions/gcpdatalab/charting.css'
          ],
    function(charts, dom, events) {
      charts.render(
          'gcharts',
          dom,
          events,
          'columns',
          [],
          {"rows": [{"c": [{"v": 1}, {"v": 0.8957308843271565}]}, {"c": [{"v": 19}, {"v": 0.8531468531468531}]}, {"c": [{"v": 16}, {"v": 0.78980490874764}]}, {"c": [{"v": 14}, {"v": 0.7861950763477719}]}, {"c": [{"v": 17}, {"v": 0.7710740785792483}]}, {"c": [{"v": 9}, {"v": 0.7675121891007838}]}, {"c": [{"v": 13}, {"v": 0.7637058753366438}]}, {"c": [{"v": 7}, {"v": 0.7519286403085824}]}, {"c": [{"v": 5}, {"v": 0.7464286949603957}]}, {"c": [{"v": 10}, {"v": 0.7457795431976166}]}, {"c": [{"v": 22}, {"v": 0.7445258853483527}]}, {"c": [{"v": 4}, {"v": 0.7395663567973507}]}, {"c": [{"v": 15}, {"v": 0.7389468455042225}]}, {"c": [{"v": 11}, {"v": 0.7377781141213864}]}, {"c": [{"v": 6}, {"v": 0.7349130583020798}]}, {"c": [{"v": 3}, {"v": 0.7313613771366226}]}, {"c": [{"v": 18}, {"v": 0.7240743708927713}]}, {"c": [{"v": 12}, {"v": 0.7027717602621786}]}, {"c": [{"v": 8}, {"v": 0.7011804384485666}]}, {"c": [{"v": 20}, {"v": 0.6908358509566969}]}, {"c": [{"v": 21}, {"v": 0.6564617618586641}]}], "cols": [{"label": "city", "id": "city", "type": "number"}, {"label": "renew_by_city", "id": "renew_by_city", "type": "number"}]},
          {},
          {"source_index": 2, "fields": "city,renew_by_city", "name": 2},
          0,
          21);
      }
    );
&lt;/script&gt;

&lt;p&gt;&lt;img src="images/churn/output_222_1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;In the plot above we analyze the proportion of auto-renew customers by city. From before we saw that city 1 had the highest count overall for users. Here we can see that it also has the highest proportion of auto-renew customers. Overall, it appears that most customers are on an auto-renew plan which is good from a business perspective.&lt;/p&gt;
&lt;p&gt;Comparing the two dataframes there is similar structure to both bar charts, which means the datasets for this feature are consistent. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;gender_describe&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;gen&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="n"&gt;GROUP&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;gender&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gender_describe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="14_152436780635"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;gen&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1144613&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1195355&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 3, time: 0.2s, cached, job: job_AfNz0MGXT8OgGZx6EY3RMrmDKeOA)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!14_152436780635', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 1144613}]}, {"c": [{"v": 1195355}]}, {"c": [{"v": 0}]}], "cols": [{"label": "gen", "id": "gen", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 1, fields: 'gen'},
        0,
        3);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;gender_describe&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members_gender&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;gen&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;members&lt;/span&gt; &lt;span class="n"&gt;GROUP&lt;/span&gt; &lt;span class="n"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;members_gender&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;gender_describe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="15_152436780843"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;gen&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;24507&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;21630&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 3, time: 0.1s, cached, job: job__0rEg7lP0hion9yO77VylbSMR6ij)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!15_152436780843', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 24507}]}, {"c": [{"v": 21630}]}, {"c": [{"v": 0}]}], "cols": [{"label": "gen", "id": "gen", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 2, fields: 'gen'},
        0,
        3);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;From the printout above, we can see that there is similarity amongst the gender distribution between the whole and filtered dataset, male has a slightly higher population than female. &lt;/p&gt;
&lt;p&gt;Below we will now printout the description of the tables for comparison. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;describe_members&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;city&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;city_count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;registered_via&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;registration_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;average_bd&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;describe_members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="16_152436781060"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;city_count&lt;/th&gt;&lt;th&gt;registration_type&lt;/th&gt;&lt;th&gt;average_bd&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;18&lt;/td&gt;&lt;td&gt;9.795794295951625&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.2s, cached, job: job_s_s-BUim86KEeQsaPWK8aI7ePUsl)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!16_152436781060', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 21}, {"v": 18}, {"v": 9.795794295951625}]}], "cols": [{"label": "city_count", "id": "city_count", "type": "number"}, {"label": "registration_type", "id": "registration_type", "type": "number"}, {"label": "average_bd", "id": "average_bd", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 3, fields: 'city_count,registration_type,average_bd'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;describe_members&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members_city&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;city_count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members_registered_via&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;registration_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;members_bd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;average_bd&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;members_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;describe_members&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="17_152436781276"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;city_count&lt;/th&gt;&lt;th&gt;registration_type&lt;/th&gt;&lt;th&gt;average_bd&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;21&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;14.915069350530343&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.2s, cached, job: job_RCIg6slHgd8nt-De7OuUfeub23gU)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!17_152436781276', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 21}, {"v": 5}, {"v": 14.915069350530343}]}], "cols": [{"label": "city_count", "id": "city_count", "type": "number"}, {"label": "registration_type", "id": "registration_type", "type": "number"}, {"label": "average_bd", "id": "average_bd", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 4, fields: 'city_count,registration_type,average_bd'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;We can see here that the filtered dataset doesn't capture all of the registration types (only 5 of the 18 total). Presumably there are a select number of very popular registration types, and several lesser used, which is why our data subset only contains a portion of the total registration types. Average birthday is higher (presumably younger if birthday is computed as days after a particular date) in our filtered dataset. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;describe_transactions&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;payment_method_id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;payment_method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plan_list_price&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;num_plans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_auto_renew&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_auto_renew&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;prop_auto_renew&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actual_amount_paid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;plan_revenue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_cancel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_cancel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;prop_cancel&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transactions&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;describe_transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="18_152436781483"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;payment_method&lt;/th&gt;&lt;th&gt;num_plans&lt;/th&gt;&lt;th&gt;prop_auto_renew&lt;/th&gt;&lt;th&gt;plan_revenue&lt;/th&gt;&lt;th&gt;prop_cancel&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;40&lt;/td&gt;&lt;td&gt;51&lt;/td&gt;&lt;td&gt;0.8519661406812573&lt;/td&gt;&lt;td&gt;141.98732048354586&lt;/td&gt;&lt;td&gt;0.03976522648819046&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.1s, cached, job: job_w7nJR7nlHvuW0mk-jUsSP5EW_pu6)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!18_152436781483', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 40}, {"v": 51}, {"v": 0.8519661406812573}, {"v": 141.98732048354586}, {"v": 0.03976522648819046}]}], "cols": [{"label": "payment_method", "id": "payment_method", "type": "number"}, {"label": "num_plans", "id": "num_plans", "type": "number"}, {"label": "prop_auto_renew", "id": "prop_auto_renew", "type": "number"}, {"label": "plan_revenue", "id": "plan_revenue", "type": "number"}, {"label": "prop_cancel", "id": "prop_cancel", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 5, fields: 'payment_method,num_plans,prop_auto_renew,plan_revenue,prop_cancel'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;describe_transactions&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_payment_method_id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;payment_method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DISTINCT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_plan_list_price&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;num_plans&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_is_auto_renew&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_is_auto_renew&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;prop_auto_renew&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_actual_amount_paid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;plan_revenue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_is_cancel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transactions_is_cancel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;prop_cancel&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transactions_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;describe_transactions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="19_152436781700"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;payment_method&lt;/th&gt;&lt;th&gt;num_plans&lt;/th&gt;&lt;th&gt;prop_auto_renew&lt;/th&gt;&lt;th&gt;plan_revenue&lt;/th&gt;&lt;th&gt;prop_cancel&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;37&lt;/td&gt;&lt;td&gt;42&lt;/td&gt;&lt;td&gt;0.8315028382832431&lt;/td&gt;&lt;td&gt;145.68530483745585&lt;/td&gt;&lt;td&gt;0.031064849396989492&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.1s, cached, job: job_HNnfHsxnSm7qJdbkItU1IJPU4-ej)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!19_152436781700', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": 37}, {"v": 42}, {"v": 0.8315028382832431}, {"v": 145.68530483745585}, {"v": 0.031064849396989492}]}], "cols": [{"label": "payment_method", "id": "payment_method", "type": "number"}, {"label": "num_plans", "id": "num_plans", "type": "number"}, {"label": "prop_auto_renew", "id": "prop_auto_renew", "type": "number"}, {"label": "plan_revenue", "id": "plan_revenue", "type": "number"}, {"label": "prop_cancel", "id": "prop_cancel", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 6, fields: 'payment_method,num_plans,prop_auto_renew,plan_revenue,prop_cancel'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;Comparing the filtered and total datasets, we can see that both payment method and number of plans decreases slightly in the filtered dataset, but not too much. One key highlight here is that moving to the full dataset will require fitting on the larger dataset, because there is data objects that have not been seen by the smaller model. The proportion of auto renew members is very similar across both datasets as is the revenue from the plan (average plan price). We can see the slightly lower members cancel in the filtered dataset when compared to the total dataset, however both datasets have a low proportion of cancel (and from before, cancel is lower than is_churn which is an interesting observation). Additionally, as the filtered dataset contains 50% churn, having such a low (and even lower than the total dataset) churn statistic is surprising. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;describe_user_logs&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;total_secs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;listening_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_unq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;number_unique&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;average_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;sum_full_songs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;sum_25per_songs&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_logs&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;describe_user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="20_152436781906"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;listening_time&lt;/th&gt;&lt;th&gt;number_unique&lt;/th&gt;&lt;th&gt;average_date&lt;/th&gt;&lt;th&gt;sum_full_songs&lt;/th&gt;&lt;th&gt;sum_25per_songs&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-5.665342138557264e+20&lt;/td&gt;&lt;td&gt;11798546903&lt;/td&gt;&lt;td&gt;20157392.77279009&lt;/td&gt;&lt;td&gt;12045813613&lt;/td&gt;&lt;td&gt;2553501878&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.1s, cached, job: job_SJWC3sRNxUqMaP_eGiz7LB-SRhZk)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!20_152436781906', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": -5.665342138557264e+20}, {"v": 11798546903}, {"v": 20157392.77279009}, {"v": 12045813613}, {"v": 2553501878}]}], "cols": [{"label": "listening_time", "id": "listening_time", "type": "number"}, {"label": "number_unique", "id": "number_unique", "type": "number"}, {"label": "average_date", "id": "average_date", "type": "number"}, {"label": "sum_full_songs", "id": "sum_full_songs", "type": "number"}, {"label": "sum_25per_songs", "id": "sum_25per_songs", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 7, fields: 'listening_time,number_unique,average_date,sum_full_songs,sum_25per_songs'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%%&lt;/span&gt;&lt;span class="n"&gt;bq&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;describe_user_logs&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_total_secs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;listening_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_num_unq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;number_unique&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AVG&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;average_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_num_100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;sum_full_songs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_logs_num_25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;sum_25per_songs&lt;/span&gt;
&lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;w207_kkbox_bq_data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_logs_filtered_100k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;describe_user_logs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="bqtv" id="21_152436782112"&gt;&lt;table&gt;&lt;tr&gt;&lt;th&gt;listening_time&lt;/th&gt;&lt;th&gt;number_unique&lt;/th&gt;&lt;th&gt;average_date&lt;/th&gt;&lt;th&gt;sum_full_songs&lt;/th&gt;&lt;th&gt;sum_25per_songs&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;-3.1202667405739975e+19&lt;/td&gt;&lt;td&gt;711055859&lt;/td&gt;&lt;td&gt;20158095.16186604&lt;/td&gt;&lt;td&gt;719873498&lt;/td&gt;&lt;td&gt;155565964&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;(rows: 1, time: 0.1s, cached, job: job_6Zclmg8gA3QsOm_qb04JlROqwHV9)&lt;br /&gt;
&lt;script src="/static/components/requirejs/require.js"&gt;&lt;/script&gt;
&lt;script&gt;
  require.config({
    paths: {
      base: '/static/base',
      d3: '//cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3',
      plotly: 'https://cdn.plot.ly/plotly-1.5.1.min.js?noext',
      jquery: '//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min'
    },
    map: {
      '*': {
        datalab: 'nbextensions/gcpdatalab'
      }
    },
    shim: {
      plotly: {
        deps: ['d3', 'jquery'],
        exports: 'plotly'
      }
    }
  });&lt;/p&gt;
&lt;p&gt;require(['datalab/charting', 'datalab/element!21_152436782112', 'base/js/events',
      'datalab/style!/nbextensions/gcpdatalab/charting.css'],
    function(charts, dom, events) {
      charts.render('gcharts', dom, events, 'table', [], {"rows": [{"c": [{"v": -3.1202667405739975e+19}, {"v": 711055859}, {"v": 20158095.16186604}, {"v": 719873498}, {"v": 155565964}]}], "cols": [{"label": "listening_time", "id": "listening_time", "type": "number"}, {"label": "number_unique", "id": "number_unique", "type": "number"}, {"label": "average_date", "id": "average_date", "type": "number"}, {"label": "sum_full_songs", "id": "sum_full_songs", "type": "number"}, {"label": "sum_25per_songs", "id": "sum_25per_songs", "type": "number"}]},
        {
          pageSize: 25,
          cssClassNames:  {
            tableRow: 'gchart-table-row',
            headerRow: 'gchart-table-headerrow',
            oddTableRow: 'gchart-table-oddrow',
            selectedTableRow: 'gchart-table-selectedrow',
            hoverTableRow: 'gchart-table-hoverrow',
            tableCell: 'gchart-table-cell',
            headerCell: 'gchart-table-headercell',
            rowNumberCell: 'gchart-table-rownumcell'
          }
        },
        {source_index: 8, fields: 'listening_time,number_unique,average_date,sum_full_songs,sum_25per_songs'},
        0,
        1);
    }
  );
&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;Comparing the two datasets, we can see that both have an average listening time of a negative value (which intuitiviely doesn't make sens). It will be important to better understand how this data is collected to properly quality check the column and values. Number of unique is higher in the entire dataset, which makes sense as there is more data. Average date is in the form YYYYMMDD so the average date for user logs is in 2015 (averageing a date as an integer produces an incorrect date - datalab doesn't handle dates the same way as big query so further analysis in this notebook was not carried out). The sum of full songs and 25% songs is also higher in the full dataset which again makes sense. It is interesting to see that the proportion to full_songs/25per_songs is approximately the same (4.71 in the full vs 4.63 in the filtered). &lt;/p&gt;</content><category term="posts"></category><category term="big query"></category><category term="python"></category><category term="sci-kit learn"></category><category term="boosted trees"></category><category term="xgboost"></category></entry><entry><title>Thoughts for Food: Food Image Caption Generation</title><link href="https://aaron-j-olson.com/captiongeneration.html" rel="alternate"></link><published>2018-08-08T20:00:00-04:00</published><updated>2018-08-08T20:00:00-04:00</updated><author><name>Gurdit Chahal &amp; Aaron Olson</name></author><id>tag:aaron-j-olson.com,2018-08-08:/captiongeneration.html</id><summary type="html">&lt;p&gt;Project to generate image captions from image - utilizing image classficiation model and NLP model&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Image caption generation has seen increased development due to its many applications and its place as a crossroads for computer vision and nlp communities[3,9]. Where image detection algorithms such as convolutional neural-nets are good at determining a specific image entity and location, sentiment, context and style are frequently lacking in generated captions[1,2,6,9]. Recent work has focused efforts to specifically augment LSTM architecture, forcing a specific sentiment or style into the image caption [9]. We design a system that is trained within one specific category of images (food) in order to discern the differences in sentiment, style and/or context based on training and testing datasets. By implementing a CNN+LSTM neural network architecture trained on images taken from MS-COCO, SentiCap, Yummly, and Reddit, specifically datasets comprised of varying sentiment or style, we hope to expose the differences in generated captions for a given category (in our case, food). We also look to expose outcome differences and quality between variants of our base CNN+ LSTM model in which one version goes for a deeper approach with an additional LSTM and another goes wider with bi-directional LSTM substitutions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keywords: &lt;/strong&gt;Image captioning, CNN + LSTM, sentiment&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Image caption generation is a quickly evolving topic that enables a picture to be worth a thousand words. The problem of generating a cohesive image caption is that a model must not only analyze a picture to determine subjects/scene/objects but also generate a sentence describing these elements. This problem has many implications today including visual intelligence for chatbots, assisting the visually impaired as well as image search. &lt;/p&gt;
&lt;p&gt;The work as of today has focused on the generation of captions utilizing large data sources across all types of pictures[9]. Some emphasis has been placed on specifying the language model in order to generate captions with sentiment or style[1,2]. There has not however been a focus on the relation of generated captions to the style or sentiment of the image itself. Reddit is a very popular news website that is structured with numerous subreddits focusing on a specific topic. Three subreddits that will be the focus of this research are ‘food’, ‘foodporn’ and ‘shittyfoodporn’. All three subreddits contain food as their main image depiction, but have a specific style or sentiment related to their images. &lt;/p&gt;
&lt;p&gt;We propose a framework that employs the state of the art image caption generation model (CNN + LSTM) using images specific to a subreddit (but under the same category - food) to analyze the generated captions for style and/or sentiment. We do this under the motivation that industries in particular sectors (e.g. Yelp) wanting to get into more tailored detail about the images they have, and in some sense, add “flavor” to their captions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Most papers in the caption generation space utilize the MSCOCO dataset [5], as it is a large and comprehensive database of images, each containing five different captions. The breadth and quality of the dataset makes it very popular for deep learning approaches which improve with dataset size. &lt;/p&gt;
&lt;p&gt;Image caption generation has historically been a difficult problem to overcome, because it first relies on determining what subjects or objects are contained in the image, and goes further by attempting to create a sentence describing the picture. The first substantive image generation method was published under the title ‘Show and Tell’ title by Bengio et. all [4]. These authors were one of the first to successfully combine a CNN (for determining what was in the image) with a RNN (containing a language model for language generation). Show and Tell used a LSTM as their RNN of choice in order to handle vanishing/exploding gradients [4]. &lt;/p&gt;
&lt;p&gt;‘Show and Tell’ popularized the CNN + RNN framework and did a good job of factually describing the image in caption format. Borrowing from machine translation framework, the encoder-decoder framework was adjusted from taking a RNN that encodes a language and is decoded to a target language via another RNN to a parallel framework in which a CNN encodes and image and RNN decodes into a caption/description [4]. There were a number of teams that looked at sentiment and style with regards to the caption generation problem. The ‘SentiCap’ paper had the objective of including sentiment within the caption [1]. This paper uses a pre-trained CNN+LSTM from a large dataset (MSCOCO) as well as another LSTM cell (captions with sentiment subset dataset) and combines the two outputs to generate captions with sentiment [2]. ‘StyleNet’ similarly uses the CNN+LSTM architecture however it creates different caption styles in the embedding matrix which is split into three different weight matrices. One of these weight matrices is specific to the style that the NLG model is trying to predict, while the other two are shared across all examples and LSTM cells [2]. This method was named a ‘Factored LSTM’ model by the authors.  &lt;/p&gt;
&lt;p&gt;One element common across all efforts towards natural language generation is the measure of accuracy or success. Unlike natural language processing, the accuracy of a given model can be difficult to determine because the accuracy/relevance of a caption can be up to human interpretation. In a number of papers manual grading of the captions has been utilized. For automated metrics BLEU is likely the most popular and was arguably the first to deliver score on par with human judgment[8,3,7]. BLEU is a modified form of precision where a specific word can only occur a maximum of two times in the evaluated generated text. BLEU and many other automatic metrics can be prone to a n-gram overlap sensitivity, where two sentences that mean the same thing but don’t share words would be evaluated poorly[7]. The SPICE score attempts to better approximate caption accuracy by analyzing the semantic propositional content of a caption using a scene graph  but has been recognized as highly dependent on the parsing accuracy[7,10]. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Approach&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The state of the art in image captioning currently is built upon a CNN + LSTM architecture, we will conform to this structure. From the ‘Show and Tell’ paper the following LSTM layout was depicted: &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Our architecture modifies this slightly, by introducing the image features into each LSTM cell and having them persist(not only the first). This “multimodal” architecture modification has been discussed in literature and has shown to assist in caption generation in some cases [3][11][6]. &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage2.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Baseline&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The CNN or image encoder uses the pre-trained VGG16 model. By using a pre-trained model we were able to focus efforts on the language model. We were also willing to set concerns of this choice aside due to experimental reports of success suggested in using pre-trained CNN models [3,4]. Rather than utilizing the output of the VGG model (which is a softmax layer in order to determine the probabilities of image features), our model removes the softmax layer and encodes the image in an array of size 4096. This array is fed to a dense network that embeds it to a 128 dimension image embedding and the embedding is fed via a layer merge with the language model when training the overall image captioning model. The choice to merge and persist features comes both from the success reported [11,19] but also for sake of convenience in implementation as well as reduced training parameters. We chose to embed the images into a smaller dimension space as we persist the image features into the sequence and although LSTM’s are known to capture long term dependencies better than their vanilla RNN counterparts, we stuck to the safe side of shorter sequences due to smaller data.&lt;/p&gt;
&lt;p&gt;The word embedding phase uses a 256 dimension word embedding learned on the image captions used in training. We chose to learn the embedding rather than use a pre-trained word embedding (ie word-to-vec) due to the data being domain specific as well as concerns of properties pre-trained embeddings where crucial details for food such as color are lumped together due to their proximity in vector space as see in class and literature [4,16]. By learning our own word embeddings, we also stipulate the requirement of a large training dataset (otherwise our word embedding won’t be optimized), however words that may be utilized in a image caption may not show up in a pre-trained word embedding which could cause an unknown word embedding. &lt;/p&gt;
&lt;p&gt;Seeing as our dataset isn’t as large, and the food domain had smaller vocabulary size, we chose to deviate from the traditional 512 LSTM encoder suggested by Bengio [4] and opted for 256 as suggested by the research group who adapted their image captioning to a new domain [6]. We then pass the output of the LSTM to a dense layer to further condense the dimension to 128. &lt;/p&gt;
&lt;p&gt;These two layers are combined via concatenation and fed into an LSTM cell and finally to a softmax layer. This model attempts to predict the next word in a sequence of words. Captions have been pre-processed to include &amp;lt;start&amp;gt; and &amp;lt;end&amp;gt; tags, with a padded caption length dependent on the longest caption observed in training. As previously mentioned, at each prediction step, both the current image caption prediction as well as the image vector is passed to predict the next word: &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/image1.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Where $w_(1:L)$&lt;/p&gt;
&lt;p&gt;is the generated sentence and I is the image. The loss is computed using the ‘computed crossentropy’ which is defined as: &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/image3.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Where p is the true representation and q is the predicted representation of the caption. When testing our dataset we compute accuracy based on the BLEU score which is a popular metric for language generation models and has previously been introduced. For optimization we use RMSProp [6,&lt;em&gt;16&lt;/em&gt;] and upon various toy training sets ranging from 5-50,000 captions, found it performed better for this particular problem than the typical SGD [3,4] used. For generating quality captions, we settled on Bengio et. all’s suggested beam search of 3 as it qualitatively seemed to produce agreeable captions with minimal search [4] for these sets as well as offered reduced computational effort compared to larger sizes. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Bi-Directional LSTM&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Adding to model complexity for sake of quality we have trained an additional model using a bi-directional LSTM cell rather than the unidirectional as implemented in &lt;em&gt;Show and Tell [4]&lt;/em&gt;. The motivation for implementing this wider model comes from theoretical motivations of better understanding context due to consideration of both the “historical context” and “future context” of the target word [14] as well as practical motivations of being competitive to attention, object detection, and other advances in the image captioning domain [15]. The dimensions of the LSTMs, word embedding, and image embedding are kept the same to maintain some grounds for performance comparison. The drawback of this model comes with training time due to an additional backwards LSTM at each of the previous LSTM locations.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Stacked LSTM&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Stacking multiple layers of LSTM cells has proven to be an effective way of increasing the accuracy of a language generation problem [13]. In this implementation we stack two LSTM cells (dimension 512) after the merge in order to create a deeper model architecture. While stacking LSTM’s has been shown to increase accuracy, there are also considerations that can reduce the effectiveness of this design. The number of parameters given our training set increased from the baseline parameter of 9.6 million to 11.7 million, inferring that training such a model will take a longer time period. Additionally, because we have developed a deeper model, it will generally perform better on larger datasets and longer training times.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Text analysis and Preprocessing&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Our training set is comprised of 118 thousand captions generated from mscoco, reddit (subreddits related to food), yummly and senticap. Below we present text analysis on the original captions set:  &lt;/p&gt;
&lt;p&gt;Our captions are comprised of released datasets (mscoco and senticap) as well as image/caption pairs scraped from reddit and yummly. Due to the variance among data sources our captions have different characteristics. From above we can see that the average caption length is 11.38 words (including start and end tags) however our distribution is heavily skewed (x axis limitation enforced on the image above) with a maximum caption length of 670 words from reddit. For our analysis we capped the max caption length at 24 which comprises the 99th percentile in the caption length distribution. &lt;/p&gt;
&lt;p&gt;Included in the pre-processing phase to simplify dimensions were the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Removal of words with fewer than two characters&lt;/li&gt;
&lt;li&gt;Removal of punctuation&lt;/li&gt;
&lt;li&gt;Removal of words that only occur one or two times in the corpus&lt;/li&gt;
&lt;li&gt;Convert any numbers to digits token&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After preprocessing the text we had an overall vocabulary size of 8,257 words. Our motivation of simplifying the set from such pre-processing comes from a combination of what we have seen for developing neural models in this class as well as the the simplification Bengio et. all and Karpathy et. all make in their respective image captioning models to allow for the embeddings to not be riddled with noise [4,16]. Lemmatization could be used to further reduce the vocabulary size. We elected not to follow lemmatization in an effort to produce human readable captions, rather than lemmatized vocabulary. &lt;/p&gt;
&lt;p&gt;Analyzing text by each data source we can see the following:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage3.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Above is listed vocabulary facts prior to applying language preprocessing steps. Senticap and mscoco (previously compiled datasets) have similar average length and vocabulary size. Reddit stands out with a very large departure in vocabulary size and distribution of caption lengths. By applying the pre-processing steps, the Reddit vocabulary has decreased to 5,645 words with a maximum caption length of 25. Examining the Reddit captions, there are many that don’t appear to be clean image captions but rather comments, which could make caption prediction difficult.  &lt;/p&gt;
&lt;p&gt;For POS tagging, all datasets show an overwhelming usage of nouns followed by adjectives (see appendix for plot of POS distributions). For image captions, especially pertaining to food this makes intuitive sense. For the senticap dataset we have a higher proportion of adjectives than all other datasets and that yummly has a relative smaller distribution of unique parts of speech. The yummly dataset is comprised of factual food names such as “mushroom and garlic risotto”, hence this distribution makes sense. &lt;/p&gt;
&lt;p&gt;For sentiment analysis, it was observed that the senticap dataset has the highest presence of positive and negative sentiment, which is expected. Overwhelmingly, the captions are neutral, reflecting the fact that many contain objective captions. Reddit also contains a number of sentiment captions. &lt;/p&gt;
&lt;p&gt;Accuracy metrics (BLEU scores) reported in the results section are based on n-gram comparison between predicted and reference captions [8,3,7]. For this reason, it is also important to discern the differences between train and test vocabulary. &lt;/p&gt;
&lt;p&gt;The training set included non-food images, whereas the test set only focused on images that contained food. It can be observed that the test set tends to focus more on food related words (‘plate’, table’) while the train set has more sentiment (principally from the senticap dataset). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Results and Discussion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have completed training on the three different model architectures previously described using 25 epochs per model on the training set. In order to test our caption models an additional 3,000 images from Reddit were scraped along with additional images from mscoco, comprising a total set of 7,000 images. &lt;/p&gt;
&lt;p&gt;Listed below is the BLEU score for each of the models, along with cosine similarity measured between the model predictions and reference captions. As our dataset is composed of images that have not previously been published, we do not reference BLEU scores from other papers.  &lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Baseline&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Bi-Directional&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Stacked&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;MS-COCO - BLEU-1
   &lt;/td&gt;
   &lt;td&gt;BLEU-1: 0.68981
&lt;p&gt;
BLEU-2: 0.29337
   &lt;/td&gt;
   &lt;td&gt;BLEU-1: 0.6925
&lt;p&gt;
BLEU-2: 0.2655
   &lt;/td&gt;
   &lt;td&gt;BLEU-1: 0.67537
&lt;p&gt;
BLEU-2: 0.23878
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Reddit - BLEU-1
   &lt;/td&gt;
   &lt;td&gt;0.29919
   &lt;/td&gt;
   &lt;td&gt;0.35753
   &lt;/td&gt;
   &lt;td&gt;0.40197
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;MS-COCO - COS
   &lt;/td&gt;
   &lt;td&gt;0.03525
   &lt;/td&gt;
   &lt;td&gt;0.02500
   &lt;/td&gt;
   &lt;td&gt;0.02015
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Reddit - COS
   &lt;/td&gt;
   &lt;td&gt;0.01254
   &lt;/td&gt;
   &lt;td&gt;0.03019
   &lt;/td&gt;
   &lt;td&gt;0.01019
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;We did observe that for other BLEU scores of higher order n-grams, our BLEU metric was effectively zero. BLEU scores use n-grams in their computation, because our generated predictions did not have similar bi, tri or quad-gram counts our BLEU scores were very low. For the coco dataset, BLEU-1 scores were elevated due to the reference dataset containing multiple (up to 15) captions per image. Therefore, reported results should be analyzed across specific datasets. BLEU-2 scores were also reported for the coco dataset for similar reasons. BLEU scores are common in natural language processing, but do not capture language fluency or sense and can only provide rudimentary quantitative measure. Other metrics such as CIDEr or SPICE have been evaluated in literature to better measure language generation tasks[3,10].&lt;/p&gt;
&lt;p&gt;Analyzing the BLEU and cosine similarity metrics above, we can see there is no one particular model that outperforms in every category. What can be observed is how the stacked model, at least in BLEU score, tends to over-predict for the Reddit dataset while under-performing for the COCO dataset. This premise is further supported where we analyze empty predictions. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Example Captions and Comparison&lt;/em&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;Image&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Reference&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Baseline&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Bi-Directional&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Stacked&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;

&lt;img src="images/imagecaptionimage4.jpg" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;Flowers and produce sitting on counter top
   &lt;/td&gt;
   &lt;td&gt;This is nice lot of orange next with sit next to each background
   &lt;/td&gt;
   &lt;td&gt;There is an orange dogs in front of an orange carrots
   &lt;/td&gt;
   &lt;td&gt;That looks good
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;


&lt;img src="images/imagecaptionimage5.jpg" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;Plate topped with lots of different kinds of food
   &lt;/td&gt;
   &lt;td&gt;Plate of bad food next to the day
   &lt;/td&gt;
   &lt;td&gt;This looks delicious
   &lt;/td&gt;
   &lt;td&gt;It looks like it looks delicious
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;



&lt;img src="images/imagecaptionimage6.jpg" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;
   &lt;/td&gt;
   &lt;td&gt;NaN
   &lt;/td&gt;
   &lt;td&gt;NaN
   &lt;/td&gt;
   &lt;td&gt;NaN
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;


&lt;img src="images/imagecaptionimage7.png" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;Multiple (ex simple syrup with)
   &lt;/td&gt;
   &lt;td&gt;This is nice looking up the shot of the best looking up the birxt next of sauce or part of be...
   &lt;/td&gt;
   &lt;td&gt;This is the man that looks delicious
   &lt;/td&gt;
   &lt;td&gt;NaN
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Analysis of the produced captions yielded several major patterns. Our training data contained captions with sentiment (as previously shown in the sentiCap and Reddit datasets). This sentiment has been carried into the produced captions as can be seen particularly well in the first caption. Further sentiment analysis is carried out in the language model  analysis section. &lt;/p&gt;
&lt;p&gt;Another observation that warranted discussion was the level of NaN predictions (or empty strings) that our models gave. During the pre-processing step we removed words that only occurred once in the corpus. For the Reddit train dataset there were some predictions that resulted in an empty caption: “churrrrrrrrro” -&amp;gt; “&amp;lt;start&amp;gt;  &amp;lt;end&amp;gt;”. Occurrences of NaN captions are listed below:&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;Original (after pre-processing)&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Baseline&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Bi-Directional&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Stacked&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;1.3%
   &lt;/td&gt;
   &lt;td&gt;1.66%
   &lt;/td&gt;
   &lt;td&gt;6.05%
   &lt;/td&gt;
   &lt;td&gt;25.76%
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;It is interesting to note that the baseline model closely followed the same distribution of empty captions compared to the original. This likely might be due to the idea that the baseline is fitting to the human generated captions and matching them to the images rather than generating anything new [4] . However the stacked model had considerably higher proportion of empty caption predictions. It appears as though the stacked model has overfit to this particular caption. In the future we would also replace those words that occured one time in the corpus with the &amp;lt;unk&amp;gt; tag and observe if NaN prediction changes. &lt;/p&gt;
&lt;p&gt;When generating captions based on unseen Reddit food pictures, we noticed that the baseline tended to re-predict many already seen captions. For example ‘this looks delicious’ which comes from a Reddit comment incorporated into our training corpus, is observed 65 times in training and is predicted by the baseline model 137 times. &lt;em&gt;Show and Tell&lt;/em&gt; also reported that their model tended to predict captions which had previously been observed, and is in-line with our analysis[4]. In many cases, across multiple models, the caption ‘that looks delicious’ or ‘that looks good’ appears with a frequency of 0.0294% in training but 1.6429% in the testing set. It is apparent that our model has overtrained to this particular caption[24]. &lt;/p&gt;
&lt;p&gt;The last picture given in the table above was observed several hundred times in the training dataset. This means that when the image encoding is fed to the LSTM this particular image has a very high number of valid captions. This example in particular produced either a run on caption (baseline) or a grammatically valid but non-sensible caption. According to Hodosh et al.  a pool of captions per image allows the model to better generate sentences, which may explain the prediction of ‘this is the man that looks delicious’, it is difficult to learn from the image encoding, so a language model is relied upon to produce output [23].&lt;/p&gt;
&lt;p&gt;There were however a number of incorrectly captioned images, many of which had to do with incorrectly labeled subjects. For instance dog and man occur in the predicted captions 496 number of times. In our training dataset, man was the most common word from the source SentiCap and one of the most common in mscoco. Other captions did not make grammatical sense, such as “person with be couple of front of an dog sitting on the background”. Put together these issues indicate non-optimal performance from the RNN and LSTM units. Further training beyond the 20 epoch would likely prove beneficial as would expanded images and captions for training.  &lt;/p&gt;
&lt;p&gt;While generating captions, beam search default parameter of 3 was used. Experiments with different beam size values were carried out. &lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;strong&gt;Image&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Captions&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;

&lt;img src="images/imagecaptionimage8.png" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;Beam Size (3): my plate of peanut chicken
&lt;p&gt;
Beam Size (7): my plate of bread with breakfast
&lt;p&gt;
Beam Size (20): plate of plate of food
&lt;p&gt;
Beam Size (50): cup of plate of  
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;The picture and captions listed above tend to show that there is an optimum value of beam size in terms of generated captions. By reading through a number of generated captions qualitatively, it was evident that a beam size of 7 overall generated the most appropriate captions. For the larger 7,000 training captions that were generated, a beam size of 3 was used due to computational limitations. Additionally, caption length appears to vary with beam size. &lt;/p&gt;
&lt;p&gt;From analysis of the training corpus, many Reddit posts had an overall shorter word count. When the LSTM model attempts to predict the next word given the current state and preceding word, it may optimize to a longer sequence of words. Whereas for a larger beam size (more potential options being weighed), the shorter sequences overall produced a ‘better caption’ because they fit well with captions trained on reddit data. According to Jia et. all, use of log-likelihood/categorical cross entropy can cause a preference to shorter language generation  due to summation  over  the  log-likelihood of more words leading to a smaller value and will also inflate low BLEU scores (BLEU-1 or 2) [12,18]. This is further supported by the relatively shorter captions generated by the models comparing to the reference caption, plots of this analysis are located in the appendix section. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Language Model Comparison&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Examining the vocabulary of the predicted captions, it is evident that all three models are repeating words. Vocabulary counts for each of the models compared to the reference is presented here: &lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Reference&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Baseline&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Bi-Directional&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Stacked&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Bi-Directional SGD&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Vocabulary Size
   &lt;/td&gt;
   &lt;td&gt;2873
   &lt;/td&gt;
   &lt;td&gt;355
   &lt;/td&gt;
   &lt;td&gt;254
   &lt;/td&gt;
   &lt;td&gt;209
   &lt;/td&gt;
   &lt;td&gt;371
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Top 5 Words (COCO)
   &lt;/td&gt;
   &lt;td&gt;Table, plate, food, pizza, sitting
   &lt;/td&gt;
   &lt;td&gt;Front, next, sitting, look, man
   &lt;/td&gt;
   &lt;td&gt;Look, side, like, delicious, top
   &lt;/td&gt;
   &lt;td&gt;Look, like, NaN, delicious, food
   &lt;/td&gt;
   &lt;td&gt;Cheese, sandwich, food, breakfast, fruit
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Overall vocabulary count for every model analyzed is significantly lower than the reference. Chorowski et. all term this phenomenon overconfidence and relate it to the decoding phase of the language model as well as the cross-entropy loss function[25]. The bi-directional model optimized on stochastic gradient descent produced a larger vocabulary than the model trained on rmsprop. Analyzing the stochastic gradient descent algorithm, it can be inferred that the SGD’s fluctuations enable it to jump to a new local minimum, which may prevent the overconfidence minimization previously addressed [26].  One way that we could try and address this diversity issue is “softening” the outputs through a “temperature” greater than 1 [25,29]. Essentially by re-scaling logits by a divisor greater than one before applying softmax, we achieve probabilities that approach a uniform distribution as the temperature hyperparameter increases so that other candidate words have higher chances of being selected [25,29]. The risk for higher diversity in this case is a higher error rate which we would explore in future implementations.&lt;/p&gt;
&lt;p&gt;Analyzing the top words in the vocabulary, the reference and bi-directional model trained using SGD contained words related closer to food than the baseline, bi-directional or stacked models. Both the stacked and bi-directional (rmsprop) models frequently use the word ‘delicious’ which was present in the repeated caption ‘this is delicious’ and further identifies potential overfitting[25]. &lt;/p&gt;
&lt;p&gt;As previously noted, between the train and test sets there is a notable difference in sentiment (more sentiment in the training set where the test is primarily objective). We kept sentiment in the training set because we had wanted to see if the model would allow for transfer learning where sentiment could be carried over and applied to new images that aren’t sentimental [1,4]. Our train sentiment data primarily came from senticap (non-food related), however reddit train data also contained sentiment. &lt;/p&gt;
&lt;p&gt;From the plot, it can be observed that the three models contain a higher proportion of sentiment compared to the original or reference captions. This is in line with our intuition and shows that the all models retained sentiment &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hindsight: Other Challenges and Limitations &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As no implementation is without flaws, we delve into some discussion to explicitly highlight some of the limitations of our process and the bearing on results beyond those discussed previously.  Note that we will suggest possible solutions and next steps to these delineated issues in the final section that follows.&lt;/p&gt;
&lt;p&gt;The first is in our dataset itself. Although we picked a specific domain, the breadth in which food can be associated or described and how the captions are described can vary widely. For popular food items such as pizza or cake we end up having quite a few captions to give richer descriptions but then for rarer items such as pig knuckles we end up having essentially 1 caption per image. This is an issue as image captioning models have been found to suffer with&lt;/p&gt;
&lt;p&gt;near one-to-one ratios of image to caption [6,23] and hence our models fall back to generic captions such as “this is delicious”. Moreover, from drawing from multiple resources, we bring in conflicts of intent on captioning as we saw that in the COCO dataset and titles of reddit posts that the descriptions were very human-centric; the comments on the other hand tended to focus on opinions of the food while sometimes not even explicitly referring to it. While Yummly is objective and food focused, we mostly have one-to-one image, caption pairs due to the diversity in recipes. In turn, this leads to a mixed bag of captions, particularly default safe captions. Moreover , while over 200,000 captions and 70,000 images isn’t outside the realm of other caption models for training [2,4,6], the given eclectic nature as well as mixed quality points at the underlying difficulty of learning.&lt;/p&gt;
&lt;p&gt;Another is in our choice of pre-processing as we chose to truncate rare words below a frequency of three. As discussed briefly above, this causes choppiness in the language as well as gives training captions that are essentially empty, influencing lower quality captions in the model as well (e.g. generating empty captions). In terms of BLEU score, completely removing these words strongly degrades scores when dealing with ground truth captions that have those rare words [20]. For our problem, this means missing out when dealing with novelty foods or misspellings of known foods (e.g. “marshmellow” vs “marshmallow”).&lt;/p&gt;
&lt;p&gt;Training time (or number of epochs depending how it’s thought about) was also another practical limit as well as a limitation. With a batch size of 128 and 30 epochs, we hit about 50,000 iterations, which falls short of reported iterations ranging from 70,000 [12] to 100,000 and well beyond [4,6]. We used a multi-cpu environment due to trouble setting up a gpu environment which added additional days to training time as well as escalated costs. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Foresight: Conclusion and Next Steps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Beyond just collecting more data, we believe the quality could be increased in several ways. For Reddit data specifically, one thought was to augment comments with captions by concatenating the two so as to have a much higher chance of mentioning the food itself in the caption. A more advanced thought was to use coreference resolution to map the food name into the reference (e.g. title: “pineapple pizza” comment: “this looks delicious” → new caption: “pineapple pizza looks delicious”). Doing such would allow for capturing more comments per image and increasing the effective number of captions per image. Another thought is to take a bottom up approach by focusing on particular cuisines /styles of food (e.g. American, Chinese, etc.) to reduce variability/complexity by taking a subset of our current data and continuing to add relevant samples.&lt;/p&gt;
&lt;p&gt;To combat the rare word problem/pre-processing limitation, we expect to turn to insights from machine translation and language modeling in general. A simple but plausible first step would be to add &amp;lt;unk&amp;gt; as we have seen throughout class. This would at least immediately mitigate/eliminate the generation of empty captions as we have seen. A step up would be the “positional unknown” [20] in which an unknown word is given the tag &amp;lt;unk_i&amp;gt; where i is the position in the target sentence. Another promising but more advanced option would be using subword language modeling in which we could hypothetically recover “apple” and some &amp;lt;unk&amp;gt; from “pineapple” if we had seen “apple” before and not “pineapple” [21]. The main disadvantage to this would be the effort training a whole new language model.&lt;/p&gt;
&lt;p&gt;Finally, for training , we have a few options. The most straightforward would be to continue training the models to 50-100 epochs as well as getting gpu compatibility. Other options include turning to simpler models or models that are easier to train for one reason or another. One method to try would be swapping LSTMs for comparable Gated Recurrent Units or GRUs as they have similar performance but are expected to be faster to train [27]. Finally, reducing down to a simpler model that is domain relevant is an option as well. In “Phrase-based Image Captioning”, Lebret et. all show performance comparable to the classic RNN+CNN structure by instead using CNN + a bilinear model (essentially taking a word2vec like model that embeds image features into phrases and then map to sentences using MLE and Markov order 3 assumptions) [28]. Seeing as the heart of the images we are interested in involve the food item and are typically noun phrases, this may be a simpler, more appropriate route to try in the future.&lt;/p&gt;
&lt;p&gt;To take a big picture view, we explored image captioning models of varying complexity and applied them to the domain of food. We also explored how transfer learning with respect to sentiment can produce sentimental captions. Analysis has revealed that continued training of the models would likely produce superior results given the time. While we didn’t  attain strongly descriptive captions, we have highlighted a number of lessons learned as well as future opportunities to promote further image caption exploration. Image caption generation has utility in a number of problems including computer vision, and with continued development will further improve caption quality.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Papers/References:&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;1.Mathews, A., Xie, L., &amp;amp; He, X. (2016). SentiCap: Generating Image Descriptions with Sentiments. AAAI Conference on Artificial Intelligence (pp. 3574-3580). The Australian University NICTA.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2.Gan, C., Gan, Z., He, X., Gao, J., &amp;amp; Deng, L. (2016). StyleNet: Generating Attractive Visual Captions with Styles. Microsoft Research&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;3.Rafaella, B., Ruket, C., Elliott, D., Aykut, E., Nazli, I.-C., Frank, K., . . . Barbara, P. (2016). Automatic Description Generation from Images: A survey of Models, Datasets, and Evaluation Measures. Journal of Artificial Research, 409-442.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;4. Oriol Vinyals, Alexander Toshev, Samy Bengio, and Dumitru Erhan. Show and tell: A neural image caption generator. CoRR, abs/1411.4555, 2014.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;5. Chen, Xinlei; Fang, Hao; Lin, Tsung-Yi; Vedantam, Ramakrishna; Gupta, Saurabh; Dollar, Piotr; Zitnick, C. Lawrence. Microsoft COCO Captions: Data Collection and Evaluation Server (2015). eprint arXiv:1504.00325&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;6. Jack Hessel, Nicolas Savva, Michael J. Wilber (2015).  \
Image Representations and New Domains in Neural Image Captioning.   arXiv:1508.02091.Computer Science Dept Cornell University&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;7. Mert Kilickaya, Aykut Erdem, Nazli Ikizler-Cinbis, Erkut Erdem (2016) \
Re-evaluating Automatic Metrics for Image Captioning&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;arXiv:1612.07600&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;8. K. Papineni, S. Roukos, T. Ward, and W.-J. Zhu. Bleu: a method for automatic evaluation of machine translation. InProceedings of the 40th annual meeting on association for computational linguistics, pages 311–318. Association for Computational Linguistics, 2002&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;_9. Kelvin Xu, Jimmy Lei Ba, Ryan Kiros, Kyonghyun Cho, Aaron Courville, Ruslan Salakhutdinov, Richard Zemel, Yoshua Bengio (2016). Show, Attend and Tell: Neural Image Caption Generation with Visual Attention. arXiv 1502.03044. Computer Science Dept Cornell University. _&lt;/p&gt;
&lt;p&gt;&lt;em&gt;10. Peter Anderson, Basura Fernando, Mark Johnson, Stephen Gould (2016). SPICE: Semantic Propositional Image Caption Evaluation. ECCV.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;11. Ryan Kiros, Ruslan Salakhutdinov, Richard S. Zemel (2014)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Unifying Visual-Semantic Embeddings with Multimodal Neural Language Models&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;arXiv:1411.2539&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;12. https://cs.stanford.edu/people/karpathy/neuraltalk/&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;13. Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun (2015). Deep Residual Learning for Image Recognition. Microsoft Research. arXiv: 1512.03385v1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;14. Mike  Schuster ,Kuldip  K.  Paliwal (1997). Bidirectional Recurrent Neural Networks. IEEE  TRANSACTIONS  ON  SIGNAL  PROCESSING, VOL.  45,  NO.  11,  NOVEMBER  1997&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;15. Cheng Wang, Haojin Yang, Christian Bartz, Christoph Meinel (2016). Image Captioning with Deep Bidirectional LSTMs. arXiv:1604.00790&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;16. Andrej Karpathy,Li Fei-Fei (2015).Deep Visual-Semantic Alignments for Generating Image Descriptions.   arXiv:1412.2306&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;17. A. Graves. Generating Sequences with Recurrent Neural Networks (2013). arXiv:1308.0850&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;18. Xu Jia, Efstratios Gavves, Basura Fernando, and Tinne Tuytelaars. 2015. Guiding the Long-Short Term Memory Model for Image Caption Generation. In Proceedings of the 2015 IEEE International Conference on Computer Vision (ICCV) (ICCV '15). IEEE Computer Society, Washington, DC, USA, 2407-2415. DOI=&lt;a href="http://dx.doi.org/10.1109/ICCV.2015.277"&gt;http://dx.doi.org/10.1109/ICCV.2015.277&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;19. Junhua Mao, Wei Xu, Yi Yang, Jiang Wang, Zhiheng Huang, Alan Yuille (2015). \
 Deep Captioning with Multimodal Recurrent Neural Networks (m-RNN).     arXiv:1412.6632 [cs.CV]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;20. Minh-Thang Luong,Ilya Sutskever, Quoc V. Le,Oriol Vinyals, Wojciech Zaremba (2015). Addressing the Rare Word Problem in Neural Machine Translation. arXiv:1410.8206&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;_21.Tomas Mikolov , Ilya Sutskever , Anoop Deoras , Hai-Son Le , Stefan Kombrink , Jan Cernock (2011).Subword Language Modeling with Neural Networks. \
   _&lt;/p&gt;
&lt;p&gt;&lt;em&gt;22. Sébastien Jean, Kyunghyun Cho, Roland Memisevic, Yoshua Bengio (2015).On Using Very Large Target Vocabulary for Neural Machine Translation. arXiv:1412.2007&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;23. Framing Image Description as a Ranking Task:Data, Models and Evaluation Metrics&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;24. Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao, Bill Dolan (2016). A Diversity-Promoting Objective Function for Neural Conversation Models. arXiv:1510.03055v3&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;_25. Jan Chorowski, Navdeep Jaitly. (2017) Towards better decoding and language model integration in sequence to sequence models. http://dx.doi.org/10.21437/Interspeech.2017-343 _&lt;/p&gt;
&lt;p&gt;&lt;em&gt;26. Sebastian Ruder (2017). An overview of gradient descent optimization algorithms. arXiv:1609.04747v2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;27. Junyoung Chung, Caglar Gulcehre, KyungHyun Cho, Yoshua Bengio (2014). \
Empirical Evaluation of Gated Recurrent Neural Networks on Sequence Modeling.   arXiv:1412.3555&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;28. Rémi Lebret, Pedro O. Pinheiro, Ronan Collobert (2015).Phrase-based Image Captioning.  arXiv:1502.03671&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;29. Geoffrey Hinton, Oriol Vinyals, Jeff Dean(2015).Distilling the Knowledge in a Neural Network. arXiv:1503.02531&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;span style="text-decoration:underline;"&gt;Code Sources:&lt;/span&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Base code was adapted from &lt;a href="https://github.com/anuragmishracse/caption_generator"&gt;https://github.com/anuragmishracse/caption_generator&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Reddit Data collected via Pushshift &lt;a href="https://github.com/pushshift/api"&gt;https://github.com/pushshift/api&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Coco Data collected via Coco Api &lt;a href="https://github.com/cocodataset/cocoapi"&gt;https://github.com/cocodataset/cocoapi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flikr data &lt;a href="http://nlp.cs.illinois.edu/HockenmaierGroup/Framing_Image_Description/KCCA.html"&gt;http://nlp.cs.illinois.edu/HockenmaierGroup/Framing_Image_Description/KCCA.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Appendix&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Additional graphs and analysis is provided here for reference. &lt;/p&gt;
&lt;p&gt;Example images and description of the training dataset: &lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;Dataset
   &lt;/td&gt;
   &lt;td&gt;Description
   &lt;/td&gt;
   &lt;td&gt;Image
   &lt;/td&gt;
   &lt;td&gt;Caption
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;MSCOCO
   &lt;/td&gt;
   &lt;td&gt;Large and popular repository of images. 5 captions per image (objective)
   &lt;/td&gt;
   &lt;td&gt;

&lt;img src="images/imagecaptionimage9.png" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;A giraffe standing next to a tree
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Yummly
   &lt;/td&gt;
   &lt;td&gt;Food images scraped from yummly (objective)
   &lt;/td&gt;
   &lt;td&gt;


&lt;img src="images/imagecaptionimage10.jpg" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt; Baked halibut with orzo  spinach  and cherry tomatoes epicurious  
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Reddit
   &lt;/td&gt;
   &lt;td&gt;Food images scraped pictures and titles from Reddit (mixed)
   &lt;/td&gt;
   &lt;td&gt;


&lt;img src="images/imagecaptionimage11.jpg" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;Shakshuka for breakfast eggs poached in a spicy tomato sauce
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;SentiCap
   &lt;/td&gt;
   &lt;td&gt;Images with sentiment specific captions (subjective)
   &lt;/td&gt;
   &lt;td&gt;

&lt;img src="images/imagecaptionimage12.jpg" width="" alt="alt_text" title="image_tooltip"&gt;

   &lt;/td&gt;
   &lt;td&gt;A delicious food with a drizzle of caramel sauce on a white plate and a banana topping the pastry
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;POS tagging for the different training datasets. There is similar distribution between all four datasets with respect to nouns and adjectives.  &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage13.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;POS tagging for COCO dataset. The reference dataset has more unique tags (diverse language model) than the produced captions. This is confirmed by the size of the vocabulary, and critical analysis of the produced captions. As mentioned in the text, POS wasn’t as accurate for generated captions, likely due to odd transmissions between words. &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage14.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Caption length for the COCO dataset predictions. Similar distribution for the max limit, however the average caption length fluctuates for the different models. Baseline model actually increased the caption length in comparison to the reference captions. &lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage15.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/captiongen/imagecaptionimage16.png" alt="Drawing" style="width: 750px;"/&gt;&lt;/p&gt;
&lt;p&gt;Top five predicted nouns and adjectives by model and test set. NLTK was used to provide POS tagging. As can be observed, in many cases the POS tags are incorrect. In many cases, our generated captions do not have english fluency, POS tagging relies on transmission probabilities to accurately predict a sequence of tags. Likely due to the lack of fluency in many captions, the POS tagging algorithm had a hard time correctly mapping POS.&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Reference&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Baseline&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Bi-Directional&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Stacked&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;COCO - Noun
   &lt;/td&gt;
   &lt;td&gt;Banana, fruit, pizza, food, plate
   &lt;/td&gt;
   &lt;td&gt;Orange, look, picture, front, man
   &lt;/td&gt;
   &lt;td&gt;Plate, dog, man, look, side
   &lt;/td&gt;
   &lt;td&gt;Picture, man, dg, food, look
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Reddit - Noun
   &lt;/td&gt;
   &lt;td&gt;Egg, pizza, chicken, dg, ate
   &lt;/td&gt;
   &lt;td&gt;Glass, front, man, picture
   &lt;/td&gt;
   &lt;td&gt;Plate, picture, man, look, side
   &lt;/td&gt;
   &lt;td&gt;Picture, food, recipe, dg, look
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;COCO - Adjective
   &lt;/td&gt;
   &lt;td&gt;Top, white, next, vegetable, table
   &lt;/td&gt;
   &lt;td&gt;Middle, good, top, front, next
   &lt;/td&gt;
   &lt;td&gt;Hot, white, side, top, delicious
   &lt;/td&gt;
   &lt;td&gt;Hot, good, next, delicious, nan
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;Reddit - Adjective
   &lt;/td&gt;
   &lt;td&gt;Ate, noodle, garlic, hot, cheese
   &lt;/td&gt;
   &lt;td&gt;Delicious, top, good, front, next
   &lt;/td&gt;
   &lt;td&gt;Nice, side, top, white, delicious
   &lt;/td&gt;
   &lt;td&gt;Recipe, next, good, nan, delicious
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;An additional, smaller round of training was carried out using the baseline model on a thirty thousand caption set of mscoco at 30 epochs. This represents a cleaner training set compared to what was carried out for the other models which contained reddit posts. A qualitative reading of the captions produced shows that this smaller model tends to generate more fluent english and higher quality captions compared to the other models. For example the baseline model trained on larger training data, for one particular image predicted “this is good looking at dinner in plate” whereas the same model trained on 30,000 mscoco captions predicted “a white plate topped with a bunch of food”. In general the 30k dataset model tended to produce more fluent captions, but lacked the specificity of the contents within an image (deferring to ‘white plate’ and ‘banana’ often). This behavior is likely due to the small training corpus. &lt;/p&gt;
&lt;p&gt;BLEU and COS scores for the baseline model trained at 30 epochs using 30,000 captions from the MSCOCO-VAL2014 dataset for training. We can see that this model does much better on the MSCOCO-TRAIN2014 dataset&lt;/p&gt;
&lt;table&gt;
  &lt;tr&gt;
   &lt;td&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;Reddit&lt;/strong&gt;
   &lt;/td&gt;
   &lt;td&gt;&lt;strong&gt;COCO&lt;/strong&gt;
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;BLEU
   &lt;/td&gt;
   &lt;td&gt;BLEU-1: 0.31793
&lt;p&gt;
BLEU-2: 0.09514
   &lt;/td&gt;
   &lt;td&gt;BLEU-1: 0.68794
&lt;p&gt;
BLEU-2: 0.32797
   &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td&gt;COS
   &lt;/td&gt;
   &lt;td&gt;0.014888
   &lt;/td&gt;
   &lt;td&gt;0.05356
   &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;</content><category term="posts"></category><category term="NLP"></category><category term="tensorflow"></category><category term="CNN"></category><category term="LSTM"></category><category term="caption generation"></category></entry><entry><title>Time Series Analysis - Driving Records 25 year history United States</title><link href="https://aaron-j-olson.com/timeseries_driving.html" rel="alternate"></link><published>2018-03-08T20:00:00-05:00</published><updated>2018-03-08T20:00:00-05:00</updated><author><name>Himal Suthar, XT Nguyen, Aaron Olson</name></author><id>tag:aaron-j-olson.com,2018-03-08:/timeseries_driving.html</id><summary type="html">&lt;p&gt;Statistical Analysis applied to Retail Sales&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Description of the Lab&lt;/h1&gt;
&lt;p&gt;In this lab, you are asked to answer the question &lt;strong&gt;"Do changes in traffic laws affect traffic fatalities?"&lt;/strong&gt;  To do so, you will conduct the tasks specified below using the data set &lt;em&gt;driving.Rdata&lt;/em&gt;, which includes 25 years of data that cover changes in various state drunk driving, seat belt, and speed limit laws. &lt;/p&gt;
&lt;p&gt;Specifically, this data set contains data for the 48 continental U.S. states from 1980 through 2004. Various driving laws are indicated in the data set, such as the alcohol level at which drivers are considered legally intoxicated. There are also indicators for per se laws - where licenses can be revoked without a trial - and seat belt laws. A few economics and demographic variables are also included. The description of the each of the variables in the dataset is come with the dataste.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exercises:&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;Question 1&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Load the data. Provide a description of the basic structure of the dataset, as we have done throughout the semester. Conduct a very thorough EDA, which should include both graphical and tabular techniques, on the dataset, including both the dependent variable &lt;em&gt;totfatrte&lt;/em&gt; and the potential explanatory variables. You need to write a detailed narrative of your observations of your EDA. &lt;em&gt;Reminder: giving an "output dump" (i.e. providing a bunch of graphs and tables without description and hoping your audience will interpret them) will receive a zero in this exercise.&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;```{r echo = FALSE}
library(ggplot2)
library(dplyr)
library(mcprofile)
library(car)
library(Hmisc)
library(ggcorrplot)
library(plm)
library(GGally)
library(EnvStats)&lt;/p&gt;
&lt;p&gt;load("driving.RData")
df &amp;lt;- data
head(df)&lt;/p&gt;
&lt;h1&gt;describe(df)&lt;/h1&gt;
&lt;h1&gt;table(df$year, df$state)&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;During&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;utilized&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="k"&gt;describe&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="k"&gt;statistics&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;variable&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Due&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;excluded&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;print&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="n"&gt;Within&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;note&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt; &lt;span class="n"&gt;states&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="n"&gt;states&lt;/span&gt; &lt;span class="n"&gt;plus&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;district&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;columbia&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;panel&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;collected&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="mi"&gt;1980&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="mi"&gt;2004&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt; &lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;functino&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;structured&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;single&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;year&lt;/span&gt; &lt;span class="n"&gt;combination&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="o"&gt;##&lt;/span&gt; &lt;span class="k"&gt;Variable&lt;/span&gt; &lt;span class="n"&gt;Transformations&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;EDA&lt;/span&gt;
&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df$sl75&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There are also several variables, such as sl75, bac_08, that are primarily binary (0 or 1) but also have some values indicating partial year truths. Analyzing these variables, most values are either 0 or 1 with only a handful (out of the entire dataset) being between 0 or 1. For this analysis we have chosen to assign values less than 0.5 to 0/False and values greater than or equal to 0.5 to 1/True. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Make Variables binary and transform other variables&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac_binary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac08&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac10&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac_binary&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac08&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c1"&gt;#Create speed variable with the intent of creating one variable denoting speed limit&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl55&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;55&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl65&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;65&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl70&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;70&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl75&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;75&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl70plus&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;80&lt;/span&gt;

&lt;span class="c1"&gt;#Continue to make variables binary&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl55_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl55&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl65_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl65&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl70_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl70&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl75_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl75&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl70plus_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;sl70plus&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac08_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac08&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac10_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;bac10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;gdl_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;gdl&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;zerotol_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;zerotol&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;perse_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;perse&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;seatbelt_binary&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ifelse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;seatbelt&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After transforming the variables, we begin the EDA analysis of the dataset. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#Histogram of totfatrte variable&lt;/span&gt;
&lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;geom_histogram&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Fatality Rate (Per 100,000 population) Histogram&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bac_binary&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;geom_histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;legend.position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Fatality Rate Histogram by Presence of Blood Alcohol Limit (BAC) Laws&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seatbelt&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;geom_histogram&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;legend.position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;labs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Fatality Rate Histogram by Presence of Seatbelt laws&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;subtitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;=0 if none, =1 if primary, =2 if secondary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The histograms above show the distribution of the total fatalities per 100,000 people and shaded by the categories: whether the state had a seatbelt law in effect (0 for no law, 1 for front seat laws, 2 for back seat laws) and whether the state has a bac law in effect (0 for laws in place for up to half the year, 1 for if the law was in place for greater than half the year). All histogram distributions appear to give a similar shape across the different categories and have a long right tail.  This potentially indicates that there are limited differences accounting for changes in these two laws. &lt;/p&gt;
&lt;p&gt;In order to further our analysis we also looked at the distribution of miles driven, unemployment and perc14_24. From the histograms we can see that miles drive follows an approximate normal distribution with a long right tail. Unemployment has a long tail and would benefit from a log transformation in an effort to make the variable approximately normal. Perc14_24 does not appear to approximate a normal distribution and applying a log transformation only has limited effect - we chose to leave the variable as is for this analysis. &lt;/p&gt;
&lt;p&gt;We know that our panel dataset is organized by year and by state. We further our EDA below by exploring the dependent variable (totfatrte) amongst these two indexes. &lt;/p&gt;
&lt;p&gt;```{r warning = FALSE, fig.width=10, fig.height=4}
ggplot(df, aes(as.factor(year), totfatrte)) +
  geom_boxplot() +
  geom_jitter(width = 0.2) +
  theme_bw() +
  ggtitle('Fatality Rates by Year')&lt;/p&gt;
&lt;p&gt;ggplot(df, aes(as.factor(state), totfatrte)) +
  geom_boxplot() +
  geom_jitter(width = 0.2) +
  theme_bw() +
  ggtitle('Fatality Rates by State')&lt;/p&gt;
&lt;p&gt;xyplot(totfatrte ~ year | state, data=df, as.table=T)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;bar&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="n"&gt;shows&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;overall&lt;/span&gt; &lt;span class="k"&gt;general&lt;/span&gt; &lt;span class="n"&gt;decreasing&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="k"&gt;until&lt;/span&gt; &lt;span class="n"&gt;approximately&lt;/span&gt; &lt;span class="mi"&gt;1992&lt;/span&gt; &lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="n"&gt;fatalities&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;000&lt;/span&gt; &lt;span class="n"&gt;people&lt;/span&gt; &lt;span class="n"&gt;remains&lt;/span&gt; &lt;span class="n"&gt;approximately&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Variance&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="n"&gt;indicating&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;heterogeneous&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="k"&gt;In&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="n"&gt;fatalities&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt; &lt;span class="n"&gt;boxplot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;determined&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;unique&lt;/span&gt; &lt;span class="n"&gt;distribution&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="n"&gt;fatality&lt;/span&gt; &lt;span class="n"&gt;rates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;likely&lt;/span&gt; &lt;span class="n"&gt;due&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="nb"&gt;number&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;different&lt;/span&gt; &lt;span class="n"&gt;effects&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;road&lt;/span&gt; &lt;span class="n"&gt;hazard&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;population&lt;/span&gt; &lt;span class="n"&gt;driving&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;roadways&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;incliment&lt;/span&gt; &lt;span class="n"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;purpose&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;determine&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;effectiveness&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;traffic&lt;/span&gt; &lt;span class="n"&gt;laws&lt;/span&gt; &lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="n"&gt;fatality&lt;/span&gt; &lt;span class="n"&gt;rate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="n"&gt;Total&lt;/span&gt; &lt;span class="n"&gt;fatalities&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;000&lt;/span&gt; &lt;span class="n"&gt;broken&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;state&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt; &lt;span class="n"&gt;indicates&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;serial&lt;/span&gt; &lt;span class="n"&gt;correlation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;therefore&lt;/span&gt; &lt;span class="n"&gt;pooled&lt;/span&gt; &lt;span class="n"&gt;OLS&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;likely&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;poor&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="k"&gt;Instead&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;fixed&lt;/span&gt; &lt;span class="n"&gt;effect&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;good&lt;/span&gt; &lt;span class="n"&gt;candidate&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;analyze&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;problem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;previously&lt;/span&gt; &lt;span class="n"&gt;analyzed&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;histogram&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="n"&gt;grouped&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;bac&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;seatbelt&lt;/span&gt; &lt;span class="n"&gt;traffic&lt;/span&gt; &lt;span class="n"&gt;laws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Below&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;extend&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;observing&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;effect&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;laws&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="k"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;geom_boxplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bac_binary&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Fatalities by Year by Blood Alcohol Limit (BAC) Law Presence&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="n"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;geom_boxplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colour&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seatbelt&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Fatalities by Year by Seatbelt Law Presence&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;bottom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Above are the barplots for totfatrte broken up by seatbelts and the bac_binary variable across time. Neither analysis shows strong effect of either variable based on the yearly dataset. We can see that there was an introduction and/or modification to both of these laws as time progressed. &lt;/p&gt;
&lt;p&gt;Our dependent variable totfatrte is defined as the total fatalities per 100,000 population. Intuitively we know that the risk associated with driving will increase the more a particular sample drives. It is therefore important to analyze how totfatrte varies with vehicmilesdriven. Furthermore we have generated a correlation plot matrix for all variables (except year indicators) to determine if there are correlations amongst other variables that have not yet been analyzed.  &lt;/p&gt;
&lt;p&gt;```{r fig.width=7, fig.height=7}
ggcorrplot(cor(df[,-c(31:55)]), type = 'upper') +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  ggtitle("Correlation plot for Driving Dataset")&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;overall&lt;/span&gt; &lt;span class="n"&gt;correlation&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="k"&gt;any&lt;/span&gt; &lt;span class="n"&gt;surprising&lt;/span&gt; &lt;span class="n"&gt;correlations&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;previously&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;discussed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Certain&lt;/span&gt; &lt;span class="n"&gt;law&lt;/span&gt; &lt;span class="n"&gt;variables&lt;/span&gt; &lt;span class="k"&gt;are&lt;/span&gt; &lt;span class="n"&gt;correlated&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt; &lt;span class="n"&gt;indicating&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;law&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;changed&lt;/span&gt; &lt;span class="n"&gt;over&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="n"&gt;analyzed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="n"&gt;Let&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s now take a look a correlation matrix of the variables perc14_24, unem and vehicmilespc with totfatrte.  &lt;/span&gt;

&lt;span class="s1"&gt;```{r}&lt;/span&gt;
&lt;span class="s1"&gt;ggpairs(df[, c(&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;perc14_24&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;unem&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="n"&gt;vehicmilespc&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There seems to be a slight correlation between both totfatrte and perc14_24, unem and vehicmilesp, with the strongest correlation with perc14_24. From the histogram distribution we can see a slight skew in the unem histogram - which can be corrected via a log transformation. Alternatively we see a significantly different range in values between vehicmilespc and all other variables. Therefore it is recommended to apply a normalization or scaling term. We will do this prior to fitting a model with this parameter to normalize the variable between 0-100.  &lt;/p&gt;
&lt;p&gt;Let's also take a look at these values by year and state to check for heterogeneity across both dimensions.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Conditional Box-plot&lt;/span&gt;
&lt;span class="n"&gt;conditional_plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;plotvar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;condvar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condvar&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;plotvar&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
  &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nf"&gt;geom_boxplot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nf"&gt;geom_jitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nf"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nf"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# perc14_24 by year &lt;/span&gt;
&lt;span class="nf"&gt;conditional_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;perc14_24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;perc14_24 by year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# perc14_24 by state&lt;/span&gt;
&lt;span class="nf"&gt;conditional_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;perc14_24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;perc14_24 by state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# unem by year &lt;/span&gt;
&lt;span class="nf"&gt;conditional_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;unem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;unem by year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# unem by state&lt;/span&gt;
&lt;span class="nf"&gt;conditional_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;unem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;unem by state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# vehicmilespc by year &lt;/span&gt;
&lt;span class="nf"&gt;conditional_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;vehicmilespc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;vehicmilespc by year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As seen in the charts above, there appears to be a definitive negative trend in perc14_24 with time, and a slight negative trend in unem with time, with a slight cyclical pattern. Additionally, vehicmilespc increases over time, which could be a function of increasing overall population or another reason. The variance in vehicmilespc also appears to increase with time. There does not appear to be any heterogeneity in the two variables by state but does appear to be heterogeneity by year.&lt;/p&gt;
&lt;p&gt;From our EDA we have determined that unemployment, perc14_24 and vehicmilespc are likely significant variables in the prediction of total fatality rate. Miles driven is another.&lt;/p&gt;
&lt;h1&gt;Question 2.&lt;/h1&gt;
&lt;h2&gt;2.1 How is the our dependent variable of interest &lt;em&gt;totfatrte&lt;/em&gt; defined?&lt;/h2&gt;
&lt;p&gt;From the dataset website, totfatrte = total fatalities per 100,000 population. It should be noted that presumably population doesn't necessarily mean drivers (as such it may not precisely represent the number of persons that are on the roadways).&lt;/p&gt;
&lt;h2&gt;2.2. What is the average of this variable in each of the years in the time period covered in this dataset?&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;avg_year&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; &lt;span class="nf"&gt;group_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; &lt;span class="nf"&gt;summarise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;avg_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;avg_year&lt;/span&gt;

&lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;avg_year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;avg_rate&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;stat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;identity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
  &lt;span class="nf"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Average totfatrte per Year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the plot above we can generally see a decreasing trend until the year 1992 when totfatrte is approximately constant. Below we will fit a linear model using year dummy variables as the explanatory variables. It is expected to see an overall decrease in totfatrte across the years.&lt;/p&gt;
&lt;h2&gt;2.3 Estimate a linear regression model of &lt;em&gt;totfatrte&lt;/em&gt; on a set of dummy variables for the years 1981 through 2004.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;fit.year&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;lm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;  &lt;span class="n"&gt;d80&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d81&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d82&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d83&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d84&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d85&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d86&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d87&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d88&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d89&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d90&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
     &lt;span class="n"&gt;d91&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d92&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d93&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d94&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d95&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d96&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d97&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d98&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d99&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d00&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d01&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d02&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fit.year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;2.4 What does this model explain? Describe what you find in this model.&lt;/h2&gt;
&lt;p&gt;The model explains how fatality rate changes on average cross states compared to the base year of 2004. For example, the coefficient for &lt;em&gt;d88&lt;/em&gt; is 4.16271, which means that on average, total fatality rate was 4.16 greater in 1998 (20.89) compared to 2004 (16.72), which is exactly waht reported on the average fatality rate by year above.&lt;/p&gt;
&lt;h2&gt;2.5 Did driving become safer over this period? Please provide a detailed explanation.&lt;/h2&gt;
&lt;p&gt;From the estimated coefficients alone that are all positive, we can say that, compared to the based year of 2004, the previous years had higher fatality rate.&lt;/p&gt;
&lt;p&gt;From the wilcox test statistics and the estimated parameters we can see a statistically significant effect in the years 1980 through 1991. However from 1992 onwards there is insufficient difference to detect a statistically significant change in the total fatality rate.&lt;/p&gt;
&lt;p&gt;Therefore, we would say that driving became safer in the years 1980s though 1991, but there is insufficient evidence to conclude that for the years after 1991 through 2004.&lt;/p&gt;
&lt;h1&gt;Question 3&lt;/h1&gt;
&lt;h2&gt;3.1 Expand your model in &lt;em&gt;Exercise 2&lt;/em&gt; by adding variables &lt;em&gt;bac08, bac10, perse, sbprim, sbsecon, sl70plus, gdl, perc14_24, unem, vehicmilespc&lt;/em&gt;, and perhaps &lt;em&gt;transformations of some or all of these variables&lt;/em&gt;.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Apply transformations as previously discussed in the EDA section&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;log_unem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;unem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;norm_vehicmilespc&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;as.data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nf"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;vehicmilespc&lt;/span&gt;

&lt;span class="c1"&gt;# Fit model&lt;/span&gt;
&lt;span class="n"&gt;fit.multi&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;lm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;  &lt;span class="n"&gt;d80&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d81&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d82&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d83&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d84&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d85&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d86&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d87&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d88&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d89&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d90&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
     &lt;span class="n"&gt;d91&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d92&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d93&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d94&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d95&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d96&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d97&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d98&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d99&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d00&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d01&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d02&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d03&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;bac10_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
       &lt;span class="n"&gt;bac08_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;perse_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sbprim&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sbsecon&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sl70plus_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;gdl_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;perc14_24&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;log_unem&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
       &lt;span class="n"&gt;norm_vehicmilespc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fit.multi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;3.2 Please explain carefully your rationale, which should be based on your EDA, behind any transformation you made. If no transformation is made, explain why transformation is not needed.&lt;/h2&gt;
&lt;p&gt;For this model we are using binarized versions of the variables bac10, bac08, perse, sl70plus, and gdl, as there is only a small proportion of the dataset that has values between 0 and 1 for these variables. We have also explained the rationale in more detail in the Transformation and EDA section above.&lt;/p&gt;
&lt;p&gt;We decided to use a log transformation on the unem variable because the histogram indicated that a log transformation would make the distribution amongst unemployment numbers approximately normal. &lt;/p&gt;
&lt;p&gt;We kept the variables sbprim and sbsecon as is since they only take on values 0 and 1.  &lt;/p&gt;
&lt;p&gt;We kept the variable perc14_24 as is since it is can be treated as a continuous variable for this model.  &lt;/p&gt;
&lt;p&gt;For the vehicmilespc variable, the range associated with this variable is quite large in comparison to the range amongst all other variables (ignoring vehicmiles) as well as our dependent variable. We therefore applied a normalization step to make the range for this variable between 0 and 100. This does complicate interpretation based on the coefficient. From analysis, the minimum and maximum values for this category repectively are: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;vehicmilespc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;vehicmilespc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From our model summary, the coefficient for norm_vehicmilespc is 0.41121, therefore if there was a 1,000 mile increase we would estimate a $\Delta totfatrte = 0.41121 \frac{100000}{18390 - 4372} = 2.933$ increase in totfatrte variable. &lt;/p&gt;
&lt;h2&gt;3.3 How are the variables &lt;em&gt;bac8&lt;/em&gt; and &lt;em&gt;bac10&lt;/em&gt; defined? Interpret the coefficients on &lt;em&gt;bac8&lt;/em&gt; and &lt;em&gt;bac10&lt;/em&gt;.&lt;/h2&gt;
&lt;p&gt;The bac8 and bac10 variables indicate whether the state had a BAC limit of 0.8 and 0.10, respectively, during that year.  &lt;/p&gt;
&lt;p&gt;The coefficients on bac10_biary and bac08_binary are -1.131 (SE .3608) and -2.207 (SE .4890), respectively.  This means that the presence of a BAC .10 limit decreased fatality rates by -1.131 and the presence of a BAC .08 limit decreased fatality rates by -2.208. Intuitively, this makes sense because the lower the blood alcohol limit is, the stricter the traffic laws, hence lowering fatality rates by a larger amount.&lt;/p&gt;
&lt;h2&gt;3.4 Do &lt;em&gt;per se laws&lt;/em&gt; have a negative effect on the fatality rate?&lt;/h2&gt;
&lt;p&gt;The perse laws is only slightly statistically significant effect (at the 0.05 level) on totfatrte. Its coefficient of -0.5396e indicates that in general it had an increase effect on total fatality rate.&lt;/p&gt;
&lt;h2&gt;3.5 What about having a primary seat belt law? (Note that if a law was enacted sometime within a year the fraction of the year is recorded in place of the zero-one indicator.)&lt;/h2&gt;
&lt;p&gt;The primary seatbelt law (&lt;em&gt;sbprim&lt;/em&gt;) did not have a statistically significant effect (even at 0.1 level) on &lt;em&gt;totfatrte&lt;/em&gt;. Its coefficient of -0.3530 indicates that in general it had an negative effect on total fatality rate. Intuitively, this makes sense but this effect is not statistically significant. &lt;/p&gt;
&lt;h1&gt;Question 4&lt;/h1&gt;
&lt;h2&gt;4.1 Reestimate the model from &lt;em&gt;Exercise 3&lt;/em&gt; using a fixed effects (at the state level) model.&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nf"&gt;plm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;  &lt;span class="n"&gt;d80&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d81&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d82&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d83&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d84&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d85&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d86&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d87&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d88&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d89&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d90&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
                  &lt;span class="n"&gt;d91&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d92&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d93&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d94&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d95&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d96&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d97&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d98&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d99&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d00&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d01&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d02&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d03&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
                  &lt;span class="n"&gt;bac10_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;bac08_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;perse_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sbprim&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sbsecon&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sl70plus_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                  &lt;span class="n"&gt;gdl_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;perc14_24&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;log_unem&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;norm_vehicmilespc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;within&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;pbgtest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;4.2 How do the coefficients on &lt;em&gt;bac08, bac10, perse, and sbprim&lt;/em&gt; compare with the pooled OLS estimates?&lt;/h2&gt;
&lt;p&gt;The coefficients on &lt;em&gt;bac08, bac10&lt;/em&gt; are statistically significant in both pooled OLS and FE models, but less strongly significant in the FE model. Also, the effect estimate of blood alcohol limit law is less than half of that in the pooled OLS model.&lt;/p&gt;
&lt;p&gt;The coefficients on &lt;em&gt;perse, and sbprim&lt;/em&gt; are either weakly statistically significant or not significant at all in the pooled OLS model but they are both strongly statistically in the fixed effects (at the state level), although the effect estimates are much lower in the FE model.&lt;/p&gt;
&lt;h2&gt;4.3 Which set of estimates do you think is more reliable?&lt;/h2&gt;
&lt;p&gt;The FE model should be more reliable than the pooled OLS model. The reason is the FE model takes into account the variation over time and by states.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;as.factor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;geom_boxplot&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;geom_jitter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;theme_bw&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
  &lt;span class="nf"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Model Residuals by Year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;4.4 What assumptions are needed in each of these models?  Are these assumptions reasonable in the current context?&lt;/h2&gt;
&lt;h3&gt;Assumptions for the FE model&lt;/h3&gt;
&lt;h4&gt;Random sample from the cross section&lt;/h4&gt;
&lt;p&gt;This is presumed to be true during the data collection for this dataset. &lt;/p&gt;
&lt;h4&gt;Each explanatory variable changes over time and no perfect linear relationships exist among the explanatory variables.&lt;/h4&gt;
&lt;p&gt;This was analyzed via the describe function during the EDA analysis and is true.&lt;/p&gt;
&lt;h4&gt;Strict Exogeneity&lt;/h4&gt;
&lt;p&gt;Below we analyze the condition that $cov(x_{itj, \epsilon_{is}}) = 0$ which is required for strict exogeneity. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Function that iterates over variables and years to compute covariance for strict exogeneity&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fitted.fe&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nf"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals.fe&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df_model&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ncol&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;variable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;covariance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;

&lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
  &lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nf"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)]){&lt;/span&gt;
    &lt;span class="nf"&gt;for &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year_s&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="nf"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
      &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;cov&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,][&lt;/span&gt;&lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;year_s&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals.fe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;df_model&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;covariance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;ggplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;aes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;covariance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nf"&gt;geom_point&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
    &lt;span class="nf"&gt;xlab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fitted values&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nf"&gt;ylab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Covariance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;ggtitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Strict Exogenous Assumption - Fixed Effect Model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From the produced plot we can see that not all covariance values are close to or equal to zero and therefore this assumption is violated. We therefore do not have an unbiased model, however the fixed effect estimator may be consistent. &lt;/p&gt;
&lt;p&gt;When analyzing the covariance plot, all other variables besides vehicmilespc are close to zero. We normalized vehicmilespc in order to see if correlation would decrease, however it did not decrease to the point of stating that covariance is equal to zero. From our EDA section we observed that there was an overall increasing trend in vehicmilespc and an overall decreasing trend in totfatrte. From the plot above we can determine that there is a violation in the strict exogeneity assumption. However we choose to include the vehicmilespc variable as intuitively miles driven is an explanatory variable in predicting total fatality rate (if vehicmilespc = 0 the total fatalities from auto accidents would equal zero). &lt;/p&gt;
&lt;h3&gt;No Serial Correlation or Heterogeneity in the Error Term:&lt;/h3&gt;
&lt;h4&gt;Homoskedasticity&lt;/h4&gt;
&lt;p&gt;To get standard errors on the coefficients, we need a constant error variance. From the residuals vs fitted plot, there appears to be an increase in variance as the fitted values increases indicating heterogeneity.&lt;/p&gt;
&lt;p&gt;```{r echo=FALSE}
library(lmtest)
bptest(model.fe2)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;From&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;breush&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pagan&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;heteroskedasticity&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;One&lt;/span&gt; &lt;span class="k"&gt;option&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;utilize&lt;/span&gt; &lt;span class="n"&gt;heterostkedastic&lt;/span&gt; &lt;span class="n"&gt;robust&lt;/span&gt; &lt;span class="n"&gt;standard&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;analysis&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;carried&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;would&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;possible&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;compute&lt;/span&gt; &lt;span class="n"&gt;heterogeneous&lt;/span&gt; &lt;span class="n"&gt;robust&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;variance&lt;/span&gt; &lt;span class="n"&gt;covariance&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 

&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;coeftest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fe2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vcov&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vcovHC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fe2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;cluster&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;group&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comparing the standard errors, we can see that the robust errors tended to err towards non-significance, particularly for the variables: perc14_24 and bac08. Bac10 is only signiciant at the 0.10 level using robust standard errors. &lt;/p&gt;
&lt;h4&gt;Serial Correlation:&lt;/h4&gt;
&lt;p&gt;We also must check for serial correlation, this can be completed by using the Breusch-Godfrey test. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;pbgtest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The test statistic has a p-value &amp;lt; 0.05 indicating that there is serial correlation present in our fixed effect model. The presence of serial correlation will further upset our standard error computation. &lt;/p&gt;
&lt;h3&gt;We also look further at the normal OLS assumptions:&lt;/h3&gt;
&lt;h4&gt;Zero conditional mean&lt;/h4&gt;
&lt;p&gt;```{r fig.height = 3, fig.width = 4, fig.align = "center"}&lt;/p&gt;
&lt;p&gt;df$fitted.fe &amp;lt;- df$totfatrte - residuals(model.fe2)
df$residuals.fe &amp;lt;- residuals(model.fe2)&lt;/p&gt;
&lt;p&gt;ggplot(df, aes(fitted.fe, residuals.fe))+
    geom_point() +
    stat_smooth(method="loess")+
    geom_hline(yintercept=0, col="red", linetype="dashed")+
    xlab("Fitted values")+ylab("Residuals") +
    ggtitle("Residual vs Fitted Plot")+
    theme_bw()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;#### Normally Distributed Error&lt;/span&gt;
&lt;span class="err"&gt;To conduct hypothesis t-tests for the LPM, we need normally distributed errors.&lt;/span&gt;
&lt;span class="err"&gt;```{r fig.height = 3, fig.width = 4, fig.align = &amp;quot;center&amp;quot;}&lt;/span&gt;
&lt;span class="err"&gt;ggplot(df, aes(sample=residuals.fe)) +&lt;/span&gt;
&lt;span class="err"&gt;    stat_qq() + stat_qq_line() +&lt;/span&gt;
&lt;span class="err"&gt;    xlab(&amp;quot;Theoretical Quantiles&amp;quot;) + ylab(&amp;quot;Standardized Residuals&amp;quot;) +&lt;/span&gt;
&lt;span class="err"&gt;    ggtitle(&amp;quot;Normal Q-Q&amp;quot;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see that there is fairly significant deviation from the QQ line, indicating that the residuals are not normally distributed. &lt;/p&gt;
&lt;h1&gt;Question 5&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Would you prefer to use a random effects model instead of the fixed effects model you built in &lt;em&gt;Exercise 4&lt;/em&gt;? Please explain.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;model.re2&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="nf"&gt;plm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;totfatrte&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;  &lt;span class="n"&gt;d80&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d81&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d82&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d83&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d84&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d85&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d86&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d87&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d88&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d89&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d90&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
     &lt;span class="n"&gt;d91&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d92&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d93&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d94&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d95&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d96&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d97&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d98&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d99&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d00&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d01&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d02&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d03&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;bac10_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
       &lt;span class="n"&gt;bac08_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;perse_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sbprim&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sbsecon&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;sl70plus_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;gdl_binary&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;perc14_24&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; 
       &lt;span class="n"&gt;vehicmilespc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;year&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;random&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.re2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;phtest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;model.re2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Despite the  Hausman test results, we prefer the fixed effect model because the random effects model assumption is that the individual state specific effects are uncorrelated with the independent variable, and this assumption is not satisfied. Moreover, from analyzing the model parameters, the random and fixed effects tended to have similar coefficients and levels of significance. Therefore, we decide to go with the fixed effect model.&lt;/p&gt;
&lt;h1&gt;Question 6&lt;/h1&gt;
&lt;p&gt;Suppose that &lt;em&gt;vehicmilespc&lt;/em&gt;, the number of miles driven per capita, increases by $1,000$. Using the FE estimates, what is the estimated effect on &lt;em&gt;totfatrte&lt;/em&gt;? Please interpret the estimate.&lt;/p&gt;
&lt;p&gt;Based on the fixed effect model in part 4, the coefficient for norm_vehicmilespc is 0.133128.  Because this was a normalized variable we have to compensate to understand the effect: 
$$\Delta totfatrte = 0.133128 \frac{100*1000}{18390-4372} = 0.9497$$
Therefore a 1,000 mile increase will cause a 0.95 increase in the totfatrte variable.&lt;/p&gt;
&lt;h1&gt;Question 7&lt;/h1&gt;
&lt;p&gt;If there is serial correlation or heteroskedasticity in the idiosyncratic errors of the model, what would be the consequences on the estimators and their standard errors?&lt;/p&gt;
&lt;p&gt;Serial correlation or heteroskedasticity in the idosyncratic errors will cause the standard errors for the model to be incorrect. As described by Wooldridge, the central limit theorem can be invoked for first-differenced models. However for fixed effects models, this is not necessarily the case as we have not accounted for AR(1) effects. We can use the  Breusch-Godfrey test to test for serial correlation.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;pbgtest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model.fe2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see the test shows serial correlation, therefore our computed standard errors will likely be innacurate. &lt;/p&gt;</content><category term="posts"></category><category term="python"></category><category term="gradient boost"></category><category term="decision tree"></category><category term="spark"></category><category term="pyspark"></category></entry><entry><title>Statistical Methods for Discrete Response, Time Series, and Panel Data</title><link href="https://aaron-j-olson.com/timeseries_retail.html" rel="alternate"></link><published>2018-03-08T20:00:00-05:00</published><updated>2018-03-08T20:00:00-05:00</updated><author><name>Ryan Delgado, Aditi Khullar, Aaron Olson"</name></author><id>tag:aaron-j-olson.com,2018-03-08:/timeseries_retail.html</id><summary type="html">&lt;p&gt;Statistical Analysis applied to Retail Sales&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Question 1: Forecasting using a SARIMA model&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;ECOMPCTNSA.csv&lt;/em&gt;, contains quarterly data of E-Commerce Retail Sales as a Percent of Total Sales. The data can be found at: https://fred.stlouisfed.org/series/ECOMPCTNSA.&lt;/p&gt;
&lt;p&gt;```{r setup, include=FALSE}
library(car)
library(dplyr)
library(quantmod)
library(ggplot2)
library(ggfortify)
library(astsa)
library(forecast)
library(xts)&lt;/p&gt;
&lt;p&gt;options("getSymbols.warning4.0"=FALSE)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Build&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Seasonal&lt;/span&gt; &lt;span class="n"&gt;ARIMA&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;quarterly&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Make&lt;/span&gt; &lt;span class="n"&gt;sure&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;steps&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;building&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;univariate&lt;/span&gt; &lt;span class="kt"&gt;time&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="k"&gt;between&lt;/span&gt; &lt;span class="n"&gt;lecture&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;such&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;checking&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;conducting&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;thorough&lt;/span&gt; &lt;span class="n"&gt;EDA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;justifying&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;modeling&lt;/span&gt; &lt;span class="nf"&gt;decisions&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;including&lt;/span&gt; &lt;span class="n"&gt;transformation&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;assumptions&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;clearly&lt;/span&gt; &lt;span class="n"&gt;articulating&lt;/span&gt; &lt;span class="n"&gt;why&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;chose&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Measure&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;discuss&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s performance. Use both in-sample and out-of-sample model performance. When estimating your model, exclude the series from 2015 and 2016. For the out-of-sample forecast, measure your model&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;performance&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;forecasting&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;quarterly&lt;/span&gt; &lt;span class="n"&gt;E&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Commerce&lt;/span&gt; &lt;span class="n"&gt;retail&lt;/span&gt; &lt;span class="n"&gt;sales&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Discuss&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;performance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Also&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="n"&gt;beyond&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;observed&lt;/span&gt; &lt;span class="kt"&gt;time&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;period&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Specifically&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;quarterly&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="c1"&gt;## Introduction&lt;/span&gt;

&lt;span class="k"&gt;In&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;lab&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll analyze Quarterly Retail E-Ecommerce Sales as a Percent of Total Sales data sourced from the U.S. Bureau of the Census. This time series data measures the share of total sales in the United States that can be attributed to E-Commerce. Prior to our analysis, this data was retrieved from the [Federal Reserve Economic Database](https://research.stlouisfed.org/) and stored in a local CSV file. Our goal for this analysis are to understand the properties of the time series and forecast future values. We will achieve this by thoroughly exploring the data, building a statistical model, and evaluating the assumptions and results of our model using standard statistical tests and measures.&lt;/span&gt;

&lt;span class="s1"&gt;We will proceed as follows:&lt;/span&gt;

&lt;span class="s1"&gt;1. We&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="k"&gt;read&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;raw&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;appropriate&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;structure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;examine&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;quirks&lt;/span&gt; &lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;quality&lt;/span&gt; &lt;span class="nf"&gt;issues&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;addressed&lt;/span&gt; &lt;span class="k"&gt;before&lt;/span&gt; &lt;span class="n"&gt;proceeding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll then conduct a thorough Time Series Exploratory Data Analysis. We&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;look&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;evidence&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;seasonality&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt; &lt;span class="n"&gt;properties&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;accounted&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;during&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;modeling&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Next&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll model the series using the findings from the EDA and standard approaches. We&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;suggest&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;appropriate&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;fit&lt;/span&gt; &lt;span class="n"&gt;several&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="n"&gt;explains&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="k"&gt;For&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll evaluate the goodness if fit and the assumptions we must satisfy in order to make inferences and predictions.&lt;/span&gt;
&lt;span class="s1"&gt;4. Among multiple valid models, we&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;choose&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll use the AIC to evaluate goodness of fit and test that the model meets the assumptions these models requrie in order to ensure accurate forecasts and inferences.&lt;/span&gt;
&lt;span class="s1"&gt;5. We&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="k"&gt;out&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;forecasts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ll visually compare our forecasts with the actual value, and quantitatively evaluate the performance.&lt;/span&gt;

&lt;span class="s1"&gt;## Initial Examination&lt;/span&gt;

&lt;span class="s1"&gt;The data is stored locally in a csv file that we can read into a `data.frame` and transform into a `ts` object. We&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ll&lt;/span&gt; &lt;span class="n"&gt;look&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;few&lt;/span&gt; &lt;span class="n"&gt;observations&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;histogram&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; values:&lt;/span&gt;

&lt;span class="s1"&gt;```{r, fig.width=4, fig.height=2}&lt;/span&gt;
&lt;span class="s1"&gt;df &amp;lt;- read.csv(&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;ECOMPCTNSA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;)&lt;/span&gt;
&lt;span class="s1"&gt;cbind(head(df), tail(df))&lt;/span&gt;

&lt;span class="s1"&gt;ggplot(df, aes(x=ECOMPCTNSA)) +&lt;/span&gt;
&lt;span class="s1"&gt;  geom_histogram(color=&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;black&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;, fill=&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;) +&lt;/span&gt;
&lt;span class="s1"&gt;  ggtitle(&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Distribution&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;ECOMPCTNSA&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Observations:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We do not see any missing values in the data.&lt;/li&gt;
&lt;li&gt;The start and end of the series appear to be similarly-valued (i.e. within the same order of magnitude), with the values at the end of the series being consistently greater than the start.&lt;/li&gt;
&lt;li&gt;The histogram shows the data is not normally distributed, and does not have any significant outliers that are worthy of further exploration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nothing in the data seems aberrant and needs to be addressed. Let's proceed to the Time Series Exploratory Data Analysis.&lt;/p&gt;
&lt;h2&gt;Exploratory Data Analysis&lt;/h2&gt;
&lt;p&gt;We'll start by converting our data to a &lt;code&gt;ts&lt;/code&gt; object and plotting it:
```{r, fig.width=4, fig.height=2}
series &amp;lt;- ts(df$ECOMPCTNSA, start=c(1999,4), frequency=4)
autoplot(series, ts.colour='blue', ts.size=0.75) +
  ggtitle('Time Series Plot of ECOMPCTNSA') +
  xlab('Time') + ylab('ECOMPCTNSA')&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Observations&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;strong&lt;/span&gt; &lt;span class="n"&gt;upward&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="n"&gt;appearing&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;grow&lt;/span&gt; &lt;span class="n"&gt;exponentially&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;time.&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;amplitude&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt; &lt;span class="n"&gt;increases&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nf"&gt;trend &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i.e.&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;constant&lt;/span&gt; &lt;span class="n"&gt;variance&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;There&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;appear&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;much&lt;/span&gt; &lt;span class="n"&gt;randomness&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;series.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="n"&gt;dominate.&lt;/span&gt;

&lt;span class="n"&gt;Because&lt;/span&gt; &lt;span class="n"&gt;our&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;exponentially&lt;/span&gt; &lt;span class="n"&gt;growing&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="n"&gt;transformation&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;useful&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;handling&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;exponential&lt;/span&gt; &lt;span class="n"&gt;growth&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;seasonality.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;transformed&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;grow&lt;/span&gt; &lt;span class="n"&gt;linearly&lt;/span&gt; &lt;span class="n"&gt;instead&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;exponentially&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;thus&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;easier&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt; &lt;span class="n"&gt;model.&lt;/span&gt; &lt;span class="n"&gt;Let&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;s perform this transformation and plot the resulting series:&lt;/span&gt;

&lt;span class="s"&gt;```{r, fig.width=4, fig.height=2}&lt;/span&gt;
&lt;span class="s"&gt;log.series &amp;lt;- ts(log(df$ECOMPCTNSA), start=c(1999,4), frequency=4)&lt;/span&gt;
&lt;span class="s"&gt;autoplot(log.series, ts.colour=&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;darkgreen&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;, ts.size = 0.75) +&lt;/span&gt;
&lt;span class="s"&gt;  ggtitle(&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt; &lt;span class="n"&gt;Series&lt;/span&gt; &lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ECOMPCTNSA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;) +&lt;/span&gt;
&lt;span class="s"&gt;  xlab(&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;) + ylab(&amp;#39;&lt;/span&gt;&lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ECOMPCTNSA&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The series still has a strong upward trend, but the trend is now mostly linear and the seasonality is stable Let's now explore the trend, seasonality and random component separately by decomposing this log-transformed series: &lt;/p&gt;
&lt;p&gt;```{r, fig.width=4, fig.height=3}
decomposed &amp;lt;- decompose(as.ts(log.series))
autoplot(decomposed)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Observations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;clearly&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="n"&gt;grows&lt;/span&gt; &lt;span class="n"&gt;linearly&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;stable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Because&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;linear&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;modeling&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;first&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt; &lt;span class="n"&gt;difference&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;seasonality&lt;/span&gt; &lt;span class="n"&gt;peaks&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt; &lt;span class="k"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;suggesting&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;frequency&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;seasonality&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;annual&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;four&lt;/span&gt; &lt;span class="n"&gt;quarters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;handle&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;modeling&lt;/span&gt; &lt;span class="n"&gt;phase&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="k"&gt;including&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="n"&gt;differencing&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;AR&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;MA&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt; &lt;span class="n"&gt;lag&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt; &lt;span class="n"&gt;appears&lt;/span&gt; &lt;span class="n"&gt;weakly&lt;/span&gt; &lt;span class="n"&gt;stationary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;though&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;does&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;appear&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;resemble&lt;/span&gt; &lt;span class="n"&gt;Gaussian&lt;/span&gt; &lt;span class="n"&gt;White&lt;/span&gt; &lt;span class="n"&gt;Noise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Thus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="n"&gt;appears&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;persistence&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Let&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;apply&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="n"&gt;differencing&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;series&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;examine&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;ACF&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;PACF&lt;/span&gt; &lt;span class="n"&gt;plots&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;result&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="o"&gt;```&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;%&lt;/span&gt; &lt;span class="n"&gt;ggtsdisplay&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Despite the differencing, the ACF and PACF plots continues to show statistically significant autocorrelation with the 4th lag. Interestingly, no other lags show statistically significant autocorrelation. We can see in the PACF plot that this apparently seasonal autocorrelation seems to decay gradually with each yearly increment, with the autocorrelation strongly negative in lag 4, weakly negative in lag 8, weakly positive in lag 12, and even more weakly positive at lag 16. The ACF plot shows a strong negative autocorrelation at lag 4, but a sharp cut-off afterwards (i.e. no slow decay). This behavior is typical of an MA component, and thus suggests the model likely has a seasonal first-order MA component, i.e. $SARIMA(0,1,0)(0,1,1)&lt;em&gt;4$. We will experiment with this in the _Modeling&lt;/em&gt; section, as well as experiment with a seasonal AR component.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Takeaways:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The trend and seasonal components exhibited exponential growth. We handled this by log-transforming the series.&lt;/li&gt;
&lt;li&gt;The trend of the log-transformed series is linear, which can be handled with first-differencing in the time series model.&lt;/li&gt;
&lt;li&gt;The series has annual seasonality. Since the time series has a quarterly frequency, we can incorporate seasonal differencing and seasonal AR/MA terms with a lag order of 4 into the model.&lt;/li&gt;
&lt;li&gt;The random component exhibits serial correlation with a seasonal component, which is likely a first-order MA component.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Modeling&lt;/h2&gt;
&lt;p&gt;Since the log-transformed series exhibits a linear trend and annual seasonality, we'll use a Seasonal AutoRegressive Integrated Moving Average (SARIMA) model. SARIMA models are useful for better understanding or predicting future values of a univariate time series with a seasonal component, which makes it perfect for our purposes. In order for the inferences and forecasts of this model to be valid, it must meet several assumptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The residual series is independently distributed from its lagged values. This can be evaluated visually with the ACF and PACF plots of the residuals, and statistically with the Ljung-Box test.&lt;/li&gt;
&lt;li&gt;The residual series has a zero mean.&lt;/li&gt;
&lt;li&gt;The residuals are normally distributed and resemble Gaussian White Noise. We can test that the residuals are normally distributed with the Shapiro-Wilk test. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to find the "best" model, we'll fit multiple SARIMA models with different specifications of the AR and MA lag orders in both the seasonal and nonseasonal components of the series. We'll evaluate each model by its Akaike Information Criterion (AIC).&lt;/p&gt;
&lt;p&gt;Gaussian residuals are important for ensuring good forecast performance. With the sample size of this dataset being so low, however, (60 observations in the training set) it may be difficult to obtain Gaussian residuals. We will therefore proceed by fitting two different models: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A SARIMA model with lag orders determined using EDA and ACF/PACF plots, but relaxing the Gaussian residuals assumption.&lt;/li&gt;
&lt;li&gt;A SARIMA model programmatically determined, and requiring Gaussian distributed residuals.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before proceeding, we will subset the time series into "train" and "test" series' to fit the model and eventually evaluate its out-of-sample forecast performance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;series.train&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log.series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1999&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;series.test&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;window&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log.series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Model 1: Derived from Intuition &amp;amp; Manual Experimentation&lt;/h3&gt;
&lt;p&gt;We'll first fit a $SARIMA(0,1,0)(0,1,1)_4$ model, as discussed in the EDA:&lt;/p&gt;
&lt;p&gt;```{r, fig.width=6, fig.height=3}
ma &amp;lt;- Arima(series.train, c(0,1,0), seasonal = list(order = c(0,1,1), 4))
summary(ma)&lt;/p&gt;
&lt;h1&gt;Test stationarity&lt;/h1&gt;
&lt;p&gt;Box.test(ma$residuals, type = "Ljung-Box")&lt;/p&gt;
&lt;h1&gt;Examine Normality&lt;/h1&gt;
&lt;p&gt;shapiro.test(ma$residuals)&lt;/p&gt;
&lt;p&gt;par(mfrow = c(1, 2))
acf(ma$residuals, main='Seasonal MA(1) \nResiduals ACF')
pacf(ma$residuals, main='Seasonal MA(1) \nResiduals PACF')&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Observations&lt;/span&gt;&lt;span class="o"&gt;:**&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="nf"&gt;MA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;coefficient&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;highly&lt;/span&gt; &lt;span class="n"&gt;statistically&lt;/span&gt; &lt;span class="n"&gt;significant.&lt;/span&gt;
&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;do&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;reject&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;H_0&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Ljung&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; _&lt;span class="n"&gt;do_&lt;/span&gt; &lt;span class="n"&gt;reject&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;H_0&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;Shapiro&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wilk&lt;/span&gt; &lt;span class="n"&gt;test.&lt;/span&gt; &lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;strong&lt;/span&gt; &lt;span class="n"&gt;evidence&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;s residuals _are not_ normally distributed.&lt;/span&gt;
&lt;span class="s"&gt;* Visually, we do not see any statistically significant lag orders in the residual ACF and PACF plots.&lt;/span&gt;
&lt;span class="s"&gt;* The AICc is -201.31&lt;/span&gt;

&lt;span class="s"&gt;Everything in the results looks acceptable, except for the apparent non-normally distributed residuals. Let&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="nf"&gt;AR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;different&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;``&lt;/span&gt;`&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fig.width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fig.height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;ar&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;Arima&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;series.train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#Test stationarity&lt;/span&gt;
&lt;span class="nf"&gt;Box.test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Ljung-Box&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Examine Normality&lt;/span&gt;
&lt;span class="nf"&gt;shapiro.test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;par&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mfrow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;acf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Seasonal AR(1) \nResiduals ACF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;pacf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Seasonal AR(1) \nResiduals PACF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The ACF and PACF plots both show all non-significant lags meaning that the model appears to produce serially independent residuals. The Box-Ljung test confirms that the residuals appear statistically as White Noise. However, we again reject $H_0$ in the Shapiro-Wilk test, indicating the residuals are not Gaussian. &lt;/p&gt;
&lt;p&gt;Among these two "hand-fit" models, we'll choose the seasonal AR(1) model as our "best" one since its AICc is slightly lower. We'll evaluate this model's out of sample performance against a model that meets the Gaussian assumption in the Lab's Forecasting section.&lt;/p&gt;
&lt;h1&gt;Model 2: Require Gaussian White Noise&lt;/h1&gt;
&lt;p&gt;Both of the previous models had a p-value &amp;lt; 0.05 for the Shapiro-Wilk test, indicating the residuals were not Gaussian distributed. This will likely result in prediction intervals that are not as accurate compared to a model with normally distributed residuals.&lt;/p&gt;
&lt;p&gt;In order to find model that meets this assumption while still achieving a low AICc score, we'll programmatically iterate over different combinations of nonseasonal and seasonal lag orders and evaluating each combination. At each iteration, we'll&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Test the independence and normality of the model residuals using the Ljung-Box and Shapiro-Wilk tests, ensuring that the residuals are indepedent and normally distributed.&lt;/li&gt;
&lt;li&gt;Compare the AICc with the AICc of the previous best model. If the current model's AICc is lower than the previous model's AICc (and it does not violate the independence and normality assumptions), the lag orders and AICc of this model will become the new "bests".&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We'll try up to 2 lags in the seasonal AR and MA components, and up to 4 lags in the non-seasonal components. We'll keep the seasonal and non-seasonal differencing constant at 1, based on the strong trend and seasonal components we found in the EDA:&lt;/p&gt;
&lt;p&gt;```{r, fig.width=4, fig.height=3}
aicc.best &amp;lt;- 100000
mod.best &amp;lt;- 0&lt;/p&gt;
&lt;p&gt;for(P in 0:2){
  for(Q in 0:2){
    for (p in 0:4){
      for (q in 0:4){
        mod &amp;lt;- Arima(series.train, order = c(p,1,q),
                     seasonal = list(order = c(P,1,Q), 4), method = 'ML')
        if ((Box.test(mod$residuals, type = "Ljung-Box")$p.value &amp;gt; 0.05) &amp;amp; (shapiro.test(mod$residuals)$p.value &amp;gt; 0.05)){
          if (mod$aicc &amp;lt; aicc.best){
            aicc.best &amp;lt;- mod$aicc
            mod.best &amp;lt;- mod
          }
        }
      }
    }
  }
}&lt;/p&gt;
&lt;p&gt;summary(mod.best)&lt;/p&gt;
&lt;p&gt;mod.best$residuals %&amp;gt;% ggtsdisplay()&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;best&lt;/span&gt; &lt;span class="n"&gt;fitting&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;was&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;Seasonal&lt;/span&gt; &lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nf"&gt;ARIMA&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;_&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;did&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;evidence&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;normally&lt;/span&gt; &lt;span class="n"&gt;distributed&lt;/span&gt; &lt;span class="n"&gt;residuals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;had&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;slightly&lt;/span&gt; &lt;span class="n"&gt;higher&lt;/span&gt; &lt;span class="n"&gt;AICc&lt;/span&gt; &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="n"&gt;compared&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-201.76&lt;/span&gt; &lt;span class="n"&gt;vs&lt;/span&gt; &lt;span class="m"&gt;-205.99&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;indicating&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;may&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;accurate&lt;/span&gt; &lt;span class="n"&gt;as&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;forecasts.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;non&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;seasonal&lt;/span&gt; &lt;span class="n"&gt;AR&lt;/span&gt; &lt;span class="n"&gt;coefficient&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;statistical&lt;/span&gt; &lt;span class="n"&gt;significance&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="n"&gt;th&lt;/span&gt; &lt;span class="n"&gt;lag.&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;interesting&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;forecasts&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;two&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt; &lt;span class="n"&gt;compare.&lt;/span&gt;

&lt;span class="c1"&gt;## Forecasting&lt;/span&gt;

&lt;span class="n"&gt;Now&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;both&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;observe&lt;/span&gt; &lt;span class="n"&gt;forecast&lt;/span&gt; &lt;span class="n"&gt;performance&lt;/span&gt; &lt;span class="n"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;``&lt;/span&gt;`&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# Write a RMSE function to compute RMSE values&lt;/span&gt;
&lt;span class="n"&gt;rmse&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;pred&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Generate forecasts&lt;/span&gt;
&lt;span class="n"&gt;ar_forecast&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;forecast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;forecast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Plot series with both models &amp;amp; model forecasts&lt;/span&gt;
&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;E-Commerce Retail Sales and Model Performance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;fitted.values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;fitted.values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lty&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;legend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ECOMPCTNSA Data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;AR Model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gaussian Model&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;AR forecast&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Gaussian forecast&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
       &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pink&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
       &lt;span class="n"&gt;lty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;cex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Best Fit Model: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rmse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;series.test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;forecast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Model with Gaussian Residuals: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rmse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;series.test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;forecast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The forecasted values for both models are similar. They both undershoot the actual values, and the RMSE scores differ by only 0.0004.&lt;/p&gt;
&lt;p&gt;Let's look at the 12-quarter ahead forecasts with confidence intervals:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ar_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;exp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod.best_forecast&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;```{r, fig.width=8, fig.height=3}
par(mfrow = c(1, 2))&lt;/p&gt;
&lt;h1&gt;For manually fit seasonal model&lt;/h1&gt;
&lt;p&gt;plot(ar_forecast)&lt;/p&gt;
&lt;h1&gt;Best fit model with Gaussian residuals&lt;/h1&gt;
&lt;p&gt;plot(mod.best_forecast)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;forecasts&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;predicting&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;prevailing&lt;/span&gt; &lt;span class="n"&gt;trend&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;increasing&lt;/span&gt; &lt;span class="n"&gt;seasonality&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;confidence&lt;/span&gt; &lt;span class="n"&gt;intervals&lt;/span&gt; &lt;span class="n"&gt;widening&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kt"&gt;time&lt;/span&gt; &lt;span class="n"&gt;progresses&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;Below&lt;/span&gt; &lt;span class="n"&gt;we&lt;/span&gt; &lt;span class="n"&gt;explicitly&lt;/span&gt; &lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="k"&gt;both&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="n"&gt;Let&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;z_t&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Best&lt;/span&gt; &lt;span class="n"&gt;fit&lt;/span&gt; &lt;span class="n"&gt;without&lt;/span&gt; &lt;span class="n"&gt;Gaussian&lt;/span&gt; &lt;span class="n"&gt;residuals&lt;/span&gt; &lt;span class="n"&gt;requirement&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="err"&gt;$$&lt;/span&gt;
&lt;span class="n"&gt;z_t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6666&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;omega_t&lt;/span&gt;
&lt;span class="err"&gt;$$&lt;/span&gt;

&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Best&lt;/span&gt; &lt;span class="n"&gt;fit&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Gaussian&lt;/span&gt; &lt;span class="n"&gt;residuals&lt;/span&gt; &lt;span class="n"&gt;requirement&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;

&lt;span class="err"&gt;$$&lt;/span&gt;
&lt;span class="n"&gt;z_t&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1577&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1743&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1395&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;6743&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;omega_t&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2237&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;omega_&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;$$&lt;/span&gt;

&lt;span class="n"&gt;Despite&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s parsimony, lower AICc score, and slightly better forecast performance to the second model, we prefer the second model since it met the Gaussian residuals assumption. We think that a model with Gaussian residuals will generally produce more reliable and accurate forecast intervals than a model without Gaussian residuals.&lt;/span&gt;

&lt;span class="s1"&gt;## Conclusion&lt;/span&gt;

&lt;span class="s1"&gt;After analyzing the E-commerce data via EDA and ACF/PACF plots, we fit two SARIMA models against the data and evaluated their out-of-sample forecast performance. Our first model, a $SARIMA(0,1,0)(1,1,0)_4$ model, was crafted based on our EDA findings. Despite achieving a low AICc and serially independent residuals, this model had residuals that showed evidence of a non-normal distribution. Non-Gaussian residuals could result in faulty confidence intervals, so we fit a second model programmatically. This model was found by iterating over different combinations of seasonal and non-seasonal AR and MA lag orders, and choosing the model with the lowest AICc score among the models with residuals that showed no evidence of serially dependent or non-Gaussian residuals and was determined to be $SARIMA(4,1,0)(0,1,0)_4$. Further modeling utilizing a daily, weekly or monthly period (rather than quarterly) may help to determine better model performance since the time series data is limited to approximately Q4 1999 (when e-commerce began to become available). With the data available, the $SARIMA(4,1,0)(0,1,0)_4$ model was chosen since it meets all assumptions and is beneficial for forecasting, however further analysis using more datapoints should be completed to indicate if this continues to be a strong performing model - since the model parameters do not match our intuition derived from EDA. &lt;/span&gt;

&lt;span class="s1"&gt;In terms of forecasting and forecasted out of sample RMSE scores, he performance differences between the $SARIMA(0,1,0)(1,1,0)_4$ and $SARIMA(4,1,0)(0,1,0)_4$ model were negligible, and the forecast plots looked very similar. Perhaps with a longer series or more random data we would see larger differences between these two models.&lt;/span&gt;



&lt;span class="s1"&gt;# Question 2: Learning how to use the xts library&lt;/span&gt;

&lt;span class="s1"&gt;## Materials covered in Question 2 of this lab&lt;/span&gt;

&lt;span class="s1"&gt;  - Primarily the references listed in this document:&lt;/span&gt;

&lt;span class="s1"&gt;      - &amp;quot;xts: Extensible Time Series&amp;quot; by Jeffrey A. Ryan and Joshua M. Ulrich. 2008. (xts.pdf)&lt;/span&gt;
&lt;span class="s1"&gt;      - &amp;quot;xts FAQ&amp;quot; by xts Development Team. 2013 (xts_faq.pdf)&lt;/span&gt;
&lt;span class="s1"&gt;      - xts_cheatsheet.pdf&lt;/span&gt;

&lt;span class="s1"&gt;# Task 1:&lt;/span&gt;

&lt;span class="s1"&gt;  1. Read &lt;/span&gt;
&lt;span class="s1"&gt;    A. The **Introduction** section (Section 1), which only has 1 page of reading of xts: Extensible Time Series&amp;quot; by Jeffrey A. Ryan and Joshua M. Ulrich&lt;/span&gt;
&lt;span class="s1"&gt;    B. The first three questions in&amp;quot;xts FAQ&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;        a. What is xts?&lt;/span&gt;
&lt;span class="s1"&gt;        b. Why should I use xts rather than zoo or another time-series package?&lt;/span&gt;
&lt;span class="s1"&gt;        c. HowdoIinstallxts?&lt;/span&gt;
&lt;span class="s1"&gt;    C. The &amp;quot;A quick introduction to xts and zoo objects&amp;quot; section in this document&lt;/span&gt;

&lt;span class="s1"&gt;  2. Read the &amp;quot;A quick introduction to xts and zoo objects&amp;quot; of this document&lt;/span&gt;

&lt;span class="s1"&gt;# A quick introduction to xts and zoo objects&lt;/span&gt;

&lt;span class="s1"&gt;### xts&lt;/span&gt;
&lt;span class="s1"&gt;```xts```&lt;/span&gt;
&lt;span class="s1"&gt;  - stands for eXtensible Time Series&lt;/span&gt;
&lt;span class="s1"&gt;  - is an extended zoo object&lt;/span&gt;
&lt;span class="s1"&gt;  - is essentially matrix + (time-based) index (aka, observation + time)&lt;/span&gt;

&lt;span class="s1"&gt;  - xts is a constructor or a subclass that inherits behavior from parent (zoo); in fact, it extends the popular zoo class. As such. most zoo methods work for xts&lt;/span&gt;
&lt;span class="s1"&gt;  - is a matrix objects; subsets always preserve the matrix form&lt;/span&gt;
&lt;span class="s1"&gt;  - importantly, xts are indexed by a formal time object. Therefore, the data is time-stamped&lt;/span&gt;
&lt;span class="s1"&gt;  - The two most important arguments are ```x``` for the data and ```order.by``` for the index. ```x``` must be a vector or matrix. ```order.by``` is a vector of the same length or number of rows of ```x```; it must be a proper time or date object and be in an increasing order&lt;/span&gt;

&lt;span class="s1"&gt;# Task 2:&lt;/span&gt;

&lt;span class="s1"&gt;  1. Read &lt;/span&gt;
&lt;span class="s1"&gt;    A. Section 3.1 of &amp;quot;xts: Extensible Time Series&amp;quot; by Jeffrey A. Ryan and Joshua M. Ulrich&lt;/span&gt;

&lt;span class="s1"&gt;    B. The following questions in &amp;quot;xts FAQ&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;        a. How do I create an xts index with millisecond precision?&lt;/span&gt;
&lt;span class="s1"&gt;        b. OK, so now I have my millisecond series but I still can&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;see&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;milliseconds&lt;/span&gt; &lt;span class="n"&gt;displayed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;What&lt;/span&gt; &lt;span class="n"&gt;went&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;

  &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Follow&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;section&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;document&lt;/span&gt;


&lt;span class="c1"&gt;# Creating an xts object and converting to an xts object from an imported dataset&lt;/span&gt;

&lt;span class="n"&gt;We&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="ss"&gt;`xts`&lt;/span&gt; &lt;span class="n"&gt;object&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;time&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="kt"&gt;time&lt;/span&gt; &lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;creates&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;associated&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="kt"&gt;time&lt;/span&gt; &lt;span class="n"&gt;indext&lt;/span&gt; &lt;span class="n"&gt;yet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="ss"&gt;``&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;FALSE&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;#rm(list = ls())&lt;/span&gt;
&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;knitr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;opts_chunk&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="kt"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tidy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cutoff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;tidy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="no"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Set working directory&lt;/span&gt;
&lt;span class="nf"&gt;setwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/Berkeley MIDS/W271 Statistical Methods for Discrete Response, Time-Series, and Panel Data/repo/W271_Lab3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Create a matrix&lt;/span&gt;
&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;rnorm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;ncol&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nrow&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Series01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Series02&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2015/1/1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;day&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length.out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In a nutshell, &lt;code&gt;xts&lt;/code&gt; is a matrix indexed by a time object. To create an xts object, we "bind" the object with the index.  Since we have already created a matrix and a time index (of the same length as the number of rows of the matrix), we are ready to "bind" them together. We will name it &lt;em&gt;X&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;xts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order.by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see from the structure of an &lt;code&gt;xts&lt;/code&gt; object, it contains both a data component and an index, indexed by an object of class &lt;code&gt;Date&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;xtx constructor&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;xts(x=Null,&lt;/span&gt;
&lt;span class="err"&gt;    order.by=index(x),&lt;/span&gt;
&lt;span class="err"&gt;    frequency=NULL,&lt;/span&gt;
&lt;span class="err"&gt;    unique=NULL,&lt;/span&gt;
&lt;span class="err"&gt;    tzone=Sys.getenv(&amp;quot;TZ&amp;quot;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As mentioned previous, the two most important arguments are &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;order.by&lt;/code&gt;.  In fact, we only use these two arguments to create a xts object before.&lt;/p&gt;
&lt;p&gt;With a xts object, one can decompose it.&lt;/p&gt;
&lt;h3&gt;Deconstructing xts&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;coredata()&lt;/code&gt; is used to extract the data component&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;coredata&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;index()&lt;/code&gt; is used to extract the index (aka times)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conversion to xts from other time-series objects&lt;/h3&gt;
&lt;p&gt;We will use the same dataset "bls_unemployment.csv" that we used in the last live session to illustarte the functions below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;read.csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bls_unemployment.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;header&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stringsAsFactors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Examine the data structure&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;#table(df$Series.id, useNA = &amp;quot;always&amp;quot;)&lt;/span&gt;
&lt;span class="c1"&gt;#table(df$Period, useNA = &amp;quot;always&amp;quot;)&lt;/span&gt;

&lt;span class="c1"&gt;# Convert a column of the data frame into a time-series object&lt;/span&gt;
&lt;span class="n"&gt;unemp&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2007&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;frequency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;unemp&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Now, let&amp;#39;s convert it to an xts object&lt;/span&gt;
&lt;span class="n"&gt;df_matrix&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;as.matrix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df_matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;unemp_idx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;as.Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2007/1/1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;month&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length.out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
&lt;span class="nf"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;unemp_xts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;xts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;order.by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unemp_idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Task 3:&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Read 
    A. Section 3.2 of "xts: Extensible Time Series" by Jeffrey A. Ryan and Joshua M. Ulrich&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the following section of this document&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Merging and modifying time series&lt;/h1&gt;
&lt;p&gt;One of the key strengths of &lt;code&gt;xts&lt;/code&gt; is that it is easy to join data by column and row using a only few different functions. It makes creating time series datasets almost effortless.&lt;/p&gt;
&lt;p&gt;The important criterion is that the xts objects must be of identical type (e.g. integer + integer), or be POSIXct dates vector, or be atomic vectors of the same type (e.g. numeric), or be a single NA. It does not work on data.frames with various column types.&lt;/p&gt;
&lt;p&gt;The major functions is &lt;code&gt;merge&lt;/code&gt;.  It works like &lt;code&gt;cbind&lt;/code&gt; or SQL's &lt;code&gt;join&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Let's look at an example. It assumes that you are familiar with concepts of inner join, outer join, left join, and right join.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;quantmod&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;getSymbols&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TWTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that the date obtained from the getSymbols function of the quantmod library is already an xts object.  As such, we can merge it directly with our unemployment rate xts object constructed above. Nevertheless, it is instructive to examine the data using the View() function to ensure that you understand the number of observations resulting from the joined series.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# 1. Inner join&lt;/span&gt;
&lt;span class="n"&gt;TWTR_unemp01&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;inner&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 2. Outer join (filling the missing observations with 99999)&lt;/span&gt;
&lt;span class="c1"&gt;# Basic argument use&lt;/span&gt;
&lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;outer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;99999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;#View(TWTR_unemp02)&lt;/span&gt;

&lt;span class="c1"&gt;# Left join&lt;/span&gt;
&lt;span class="n"&gt;TWTR_unemp03&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;left&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;99999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp03&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;#View(TWTR_unemp03)&lt;/span&gt;

&lt;span class="c1"&gt;# Right join&lt;/span&gt;
&lt;span class="n"&gt;TWTR_unemp04&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;right&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;99999&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp04&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp04&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;#View(TWTR_unemp04)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Missing value imputation&lt;/h1&gt;
&lt;p&gt;xts also offers methods that allows filling missing values using last or previous observation. Note that I include this simply to point out that this is possible. I by no mean certify that this is the preferred method of imputing missing values in a time series.  As I mentioned in live session, the specific method to use in missing value imputation is completely context dependent.&lt;/p&gt;
&lt;p&gt;Filling missing values from the last observation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# First, let&amp;#39;s replace the &amp;quot;99999&amp;quot; values with NA and then exammine the series. &lt;/span&gt;

&lt;span class="c1"&gt;# Let&amp;#39;s examine the first few dozen observations with NA&lt;/span&gt;
&lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Replace observations with &amp;quot;99999&amp;quot; with NA and store in a new series&lt;/span&gt;
&lt;span class="n"&gt;unemp01&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;unemp01&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#TWTR_unemp02[, 1][TWTR_unemp02[, 1] &amp;gt;= 99990] &amp;lt;- NA&lt;/span&gt;

&lt;span class="n"&gt;unemp02&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;unemp01&lt;/span&gt;
&lt;span class="n"&gt;unemp02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;unemp02&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;99990&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;

&lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp01&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;unemp02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# Impute the missing values (stored as NA) with the last observation&lt;/span&gt;
&lt;span class="n"&gt;TWTR_unemp02_v2a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;na.locf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
                            &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fromLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;unemp03&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;unemp02&lt;/span&gt;
&lt;span class="n"&gt;unemp03&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;na.locf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fromLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;# Examine the pre- and post-imputed series&lt;/span&gt;
&lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR_unemp02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-30&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;][,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;TWTR_unemp02_v2a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp01&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;unemp02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="n"&gt;unemp03&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Another missing value imputation method is linear interpolation, which can also be easily done in xts objects. In the following example, we use linear interpolation to fill in the NA in between months.  The result is stored in &lt;code&gt;unemp04&lt;/code&gt;. Note in the following the different ways of imputing missing values.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;unemp04&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;unemp02&lt;/span&gt;
&lt;span class="n"&gt;unemp04&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2014-02-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;unemp04&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;na.approx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp04&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxgap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;unemp04&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2014-02-01&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nf"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp01&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;unemp02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="n"&gt;unemp03&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="n"&gt;unemp04&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2013-10-01/2013-12-15&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Calculate difference in time series&lt;/h2&gt;
&lt;p&gt;A very common operation on time series is to take a difference of the series to transform a non-stationary serier to a stationary series. First order differencing takes the form $x(t) - x(t-k)$ where $k$ denotes the number of time lags. Higher order differences are simply the reapplication of a difference to each prior result (like a second derivative or a difference of the difference).&lt;/p&gt;
&lt;p&gt;Let's use the &lt;code&gt;unemp_xts&lt;/code&gt; series as examples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;unemp_xts&lt;/span&gt;

&lt;span class="nf"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;difference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;log&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.pad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# calculate the first difference of AirPass using lag and subtraction&lt;/span&gt;
&lt;span class="c1"&gt;#AirPass - lag(AirPass, k = 1)&lt;/span&gt;

&lt;span class="c1"&gt;# calculate the first order 12-month difference if AirPass&lt;/span&gt;
&lt;span class="nf"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unemp_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;differences&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Task 4:&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Read 
    A. Section 3.4 of "xts: Extensible Time Series" by Jeffrey A. Ryan and Joshua M. Ulrich&lt;/p&gt;
&lt;p&gt;B. the following questions in "xts FAQ"
    a. I am using apply() to run a custom function on my xts series. Why the returned matrix has di↵erent dimensions than the original one?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is possible to apply to a particular period (month, day, etc). If the time series for instance has a second period, but we apply by minute, then we have reduced the dimension length by 60. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Follow the following two sections of this document&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Apply various functions to time series&lt;/h1&gt;
&lt;p&gt;The family of &lt;code&gt;apply&lt;/code&gt; functions perhaps is one of the most powerful R function families. In time series, &lt;code&gt;xts&lt;/code&gt; provides &lt;code&gt;period.apply&lt;/code&gt;, which takes (1) a time series, (2) an index of endpoints, and (3) a function to apply.  It takes the following general form:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;period.apply(x, INDEX, FUN, ...)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As an example, we use the Twitter stock price series (to be precise, the daily closing price), create an index storing the points corresopnding to the weeks of the daily series, and apply functions to calculate the weekly mean. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Step 1: Identify the endpoints; in this case, we use weekly time interval. That is, we extract the end index on each week of the series&lt;/span&gt;

&lt;span class="c1"&gt;#View(TWTR)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TWTR_ep&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;endpoints&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;weeks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#TWTR_ep&lt;/span&gt;

&lt;span class="c1"&gt;# Step 2: Calculate the weekly mean&lt;/span&gt;
&lt;span class="n"&gt;TWTR.Close_weeklyMean&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;period.apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;INDEX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TWTR_ep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR.Close_weeklyMean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The power of the apply function really comes with the use of custom-defined function. For instance, we can easily &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;quantile&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;quantile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.95&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="n"&gt;sd&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;quantile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;period.apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;INDEX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TWTR_ep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Calculate basic rolling statistics  of series by month&lt;/h1&gt;
&lt;p&gt;Using &lt;code&gt;rollapply&lt;/code&gt;, one can calculate rolling statistics of a series:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Calculate rolling mean over a 10-day period and print it with the original series&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nf"&gt;rollapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TWTR&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Task 5:&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Read AMAZ.csv and UMCSENT.csv into R as R DataFrames&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;read.csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;AMAZ.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;read.csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UMCSENT.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nf"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;AMAZ seem to contain daily value with start date as 2007-01-03 and end date as 2013-01-13
UMCSENT seem to contain monthly value with start date as 1978-01-01 and end date as 2017-09-01&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Convert them to xts objects&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;AMAZ_xts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;xts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;order.by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;strptime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%Y-%m-%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT_xts&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;xts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;order.by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UMCSENT&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT_xts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Merge the two set of series together, perserving all of the obserbvations in both set of series
    a. fill all of the missing values of the UMCSENT series with -9999&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;AMAZ_xts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;outer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT01&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT01&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;is.na&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT01&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;-9999&lt;/span&gt;
&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;UMCSENT01&lt;/span&gt;
&lt;span class="nf"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2011-07-01/2011-08-09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nf"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;b. then create a new series, named UMCSENT02, from the original  UMCSENT series replace all of the -9999 with NAs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;UMCSENT02&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;UMCSENT01&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT02&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;UMCSENT02&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;-9990&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kc"&gt;NA&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;c. then create a new series, named UMCSENT03, and replace the NAs with the last observation&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;UMCSENT03&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;UMCSENT02&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT03&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;na.locf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fromLast&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;d. then create a new series, named UMCSENT04, and replace the NAs using linear interpolation.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;UMCSENT04&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;UMCSENT02&lt;/span&gt;
&lt;span class="n"&gt;UMCSENT04&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;na.approx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT04&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxgap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;e. Print out some observations to ensure that your merge as well as the missing value imputation are done correctly. I leave it up to you to decide exactly how many observations to print; do something that makes sense. (Hint: Do not print out the entire dataset!)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;binded&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UMCSENT01&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UMCSENT02&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UMCSENT03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;UMCSENT04&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;binded&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2011-07-01/2011-08-09&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Calculate the daily return of the Amazon closing price (AMAZ.close), where daily return is defined as $(x(t)-x(t-1))/x(t-1)$. Plot the daily return series.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;daily_return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ_xts&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nf"&gt;lag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ_xts&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;daily_return&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create a 20-day and a 50-day rolling mean series from the AMAZ.close series.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Calculate rolling mean over a 20-day period and print it with the original series&lt;/span&gt;
&lt;span class="n"&gt;Twenty_day_rolling&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nf"&gt;rollapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Twenty_day_rolling&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Twenty_day_rolling&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Calculate rolling mean over a 50-day period and print it with the original series&lt;/span&gt;
&lt;span class="n"&gt;Fifty_day_rolling&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;cbind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nf"&gt;rollapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AMAZ&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;FUN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;na.rm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fifty_day_rolling&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nf"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Fifty_day_rolling&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="posts"></category><category term="python"></category><category term="gradient boost"></category><category term="decision tree"></category><category term="spark"></category><category term="pyspark"></category></entry></feed>